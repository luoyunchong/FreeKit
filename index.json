{
  "api/FreeSql.Aop.AuditValueEventArgsExtension.html": {
    "href": "api/FreeSql.Aop.AuditValueEventArgsExtension.html",
    "title": "Class AuditValueEventArgsExtension | FreeKit API Docs",
    "keywords": "Class AuditValueEventArgsExtension Inheritance System.Object AuditValueEventArgsExtension Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql.Aop Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class AuditValueEventArgsExtension Methods | Improve this Doc View Source AuditValue<T>(AuditValueEventArgs, ICurrentUser) 审计实体，创建、更新将自动审计 Declaration public static void AuditValue<T>(this AuditValueEventArgs e, ICurrentUser user) where T : struct Parameters Type Name Description FreeSql.Aop.AuditValueEventArgs e ICurrentUser user Type Parameters Name Description T"
  },
  "api/FreeSql.Aop.html": {
    "href": "api/FreeSql.Aop.html",
    "title": "Namespace FreeSql.Aop | FreeKit API Docs",
    "keywords": "Namespace FreeSql.Aop Classes AuditValueEventArgsExtension"
  },
  "api/FreeSql.FreeSqlExtension.html": {
    "href": "api/FreeSql.FreeSqlExtension.html",
    "title": "Class FreeSqlExtension | FreeKit API Docs",
    "keywords": "Class FreeSqlExtension FreeSql相关的扩展类 Inheritance System.Object FreeSqlExtension Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class FreeSqlExtension Methods | Improve this Doc View Source AddIfNotContains<T>(ICollection<T>, T) Declaration public static bool AddIfNotContains<T>(this ICollection<T> this, T value) Parameters Type Name Description ICollection <T> this T value Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source AsNoTracking<T>(ISelect<T>) 不跟踪查询的实体数据（在不需要更新其数据时使用），可提升查询性能 Declaration public static ISelect<T> AsNoTracking<T>(this ISelect<T> select) where T : class Parameters Type Name Description FreeSql.ISelect <T> select Returns Type Description FreeSql.ISelect <T> Type Parameters Name Description T | Improve this Doc View Source AsTable<T>(ISelect<T>, String, Int32) Declaration public static ISelect<T> AsTable<T>(this ISelect<T> this, string tableName, int count) where T : class Parameters Type Name Description FreeSql.ISelect <T> this System.String tableName System.Int32 count Returns Type Description FreeSql.ISelect <T> Type Parameters Name Description T | Improve this Doc View Source AsTable<T>(ISelect<T>, String[]) Declaration public static ISelect<T> AsTable<T>(this ISelect<T> this, params string[] tableNames) where T : class Parameters Type Name Description FreeSql.ISelect <T> this System.String [] tableNames Returns Type Description FreeSql.ISelect <T> Type Parameters Name Description T | Improve this Doc View Source GetConnectionString(FreeSqlBuilder) 获取UseConnectionString中的数据库连接串 Declaration public static string GetConnectionString(this FreeSqlBuilder this) Parameters Type Name Description FreeSql.FreeSqlBuilder this Returns Type Description System.String | Improve this Doc View Source UseConnectionString(FreeSqlBuilder, IConfiguration) 根据配置文件配置 Declaration public static FreeSqlBuilder UseConnectionString(this FreeSqlBuilder this, IConfiguration configuration) Parameters Type Name Description FreeSql.FreeSqlBuilder this Microsoft.Extensions.Configuration.IConfiguration configuration Returns Type Description FreeSql.FreeSqlBuilder"
  },
  "api/FreeSql.html": {
    "href": "api/FreeSql.html",
    "title": "Namespace FreeSql | FreeKit API Docs",
    "keywords": "Namespace FreeSql Classes FreeSqlExtension FreeSql相关的扩展类"
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeRedis.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeRedis.html",
    "title": "Namespace IGeekFan.AspNetCore.DataProtection.FreeRedis | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.AspNetCore.DataProtection.FreeRedis Classes RedisXmlRepository An XML repository backed by a Redis list entry."
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeRedis.RedisXmlRepository.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeRedis.RedisXmlRepository.html",
    "title": "Class RedisXmlRepository | FreeKit API Docs",
    "keywords": "Class RedisXmlRepository An XML repository backed by a Redis list entry. Inheritance System.Object RedisXmlRepository Implements Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.DataProtection.FreeRedis Assembly : IGeekFan.AspNetCore.DataProtection.FreeRedis.dll Syntax public class RedisXmlRepository : IXmlRepository Constructors | Improve this Doc View Source RedisXmlRepository(Func<IRedisClient>, String) Creates a RedisXmlRepository with keys stored at the given directory. Declaration public RedisXmlRepository(Func<IRedisClient> databaseFactory, string key) Parameters Type Name Description System.Func < FreeRedis.IRedisClient > databaseFactory The delegate used to create FreeRedis.IRedisClient instances. System.String key The key used to store key list. Methods | Improve this Doc View Source GetAllElements() Declaration public IReadOnlyCollection<XElement> GetAllElements() Returns Type Description System.Collections.Generic.IReadOnlyCollection < System.Xml.Linq.XElement > | Improve this Doc View Source StoreElement(XElement, String) Declaration public void StoreElement(XElement element, string friendlyName) Parameters Type Name Description System.Xml.Linq.XElement element System.String friendlyName Implements Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository"
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeSql.DataProtectionKey.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeSql.DataProtectionKey.html",
    "title": "Class DataProtectionKey | FreeKit API Docs",
    "keywords": "Class DataProtectionKey Code first model used by FreeSqlXmlRepository<TContext> . Inheritance System.Object DataProtectionKey Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.DataProtection.FreeSql Assembly : IGeekFan.AspNetCore.DataProtection.FreeSql.dll Syntax public class DataProtectionKey Properties | Improve this Doc View Source FriendlyName The friendly name of the DataProtectionKey . Declaration [StringLength(500)] public string FriendlyName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id The entity identifier of the DataProtectionKey . Declaration [Column(IsPrimary = true, IsIdentity = true)] public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Xml The XML representation of the DataProtectionKey . Declaration [StringLength(-1)] public string Xml { get; set; } Property Value Type Description System.String"
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeSql.FreeSqlXmlRepository-1.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeSql.FreeSqlXmlRepository-1.html",
    "title": "Class FreeSqlXmlRepository<TContext> | FreeKit API Docs",
    "keywords": "Class FreeSqlXmlRepository<TContext> An Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository backed by an FreeSql datastore. Inheritance System.Object FreeSqlXmlRepository<TContext> Implements Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.DataProtection.FreeSql Assembly : IGeekFan.AspNetCore.DataProtection.FreeSql.dll Syntax public class FreeSqlXmlRepository<TContext> : IXmlRepository where TContext : DbContext, IDataProtectionKeyContext Type Parameters Name Description TContext Constructors | Improve this Doc View Source FreeSqlXmlRepository(IServiceProvider, ILoggerFactory) Creates a new instance of the FreeSqlXmlRepository<TContext> . Declaration public FreeSqlXmlRepository(IServiceProvider services, ILoggerFactory loggerFactory) Parameters Type Name Description IServiceProvider services Microsoft.Extensions.Logging.ILoggerFactory loggerFactory The Microsoft.Extensions.Logging.ILoggerFactory . Methods | Improve this Doc View Source GetAllElements() Declaration public virtual IReadOnlyCollection<XElement> GetAllElements() Returns Type Description IReadOnlyCollection < System.Xml.Linq.XElement > | Improve this Doc View Source StoreElement(XElement, String) Declaration public void StoreElement(XElement element, string friendlyName) Parameters Type Name Description System.Xml.Linq.XElement element System.String friendlyName Implements Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository"
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeSql.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeSql.html",
    "title": "Namespace IGeekFan.AspNetCore.DataProtection.FreeSql | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.AspNetCore.DataProtection.FreeSql Classes DataProtectionKey Code first model used by FreeSqlXmlRepository<TContext> . FreeSqlXmlRepository<TContext> An Microsoft.AspNetCore.DataProtection.Repositories.IXmlRepository backed by an FreeSql datastore. Interfaces IDataProtectionKeyContext Interface used to store instances of DataProtectionKey in a FreeSql.DbContext"
  },
  "api/IGeekFan.AspNetCore.DataProtection.FreeSql.IDataProtectionKeyContext.html": {
    "href": "api/IGeekFan.AspNetCore.DataProtection.FreeSql.IDataProtectionKeyContext.html",
    "title": "Interface IDataProtectionKeyContext | FreeKit API Docs",
    "keywords": "Interface IDataProtectionKeyContext Interface used to store instances of DataProtectionKey in a FreeSql.DbContext Namespace : IGeekFan.AspNetCore.DataProtection.FreeSql Assembly : IGeekFan.AspNetCore.DataProtection.FreeSql.dll Syntax public interface IDataProtectionKeyContext Properties | Improve this Doc View Source DataProtectionKeys A collection of DataProtectionKey Declaration DbSet<DataProtectionKey> DataProtectionKeys { get; } Property Value Type Description FreeSql.DbSet < DataProtectionKey >"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.html",
    "title": "Namespace IGeekFan.AspNetCore.Identity.FreeSql | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.AspNetCore.Identity.FreeSql Classes IdentityDbContext Base class for the Entity Framework database context used for identity. IdentityDbContext<TUser> Base class for the Entity Framework database context used for identity. IdentityDbContext<TUser, TRole, TKey> Base class for the Entity Framework database context used for identity. IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> Base class for the Entity Framework database context used for identity. IdentityFreeSqlBuilderExtensions Contains extension methods to Microsoft.AspNetCore.Identity.IdentityBuilder for adding entity framework stores. IdentityUserContext<TUser> Base class for the Entity Framework database context used for identity. IdentityUserContext<TUser, TKey> Base class for the Entity Framework database context used for identity. IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken> Base class for the Entity Framework database context used for identity. RoleStore<TRole> Creates a new instance of a persistence store for roles. RoleStore<TRole, TContext> Creates a new instance of a persistence store for roles. RoleStore<TRole, TContext, TKey> Creates a new instance of a persistence store for roles. RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> Creates a new instance of a persistence store for roles. UserOnlyStore<TUser> Creates a new instance of a persistence store for the specified user type. UserOnlyStore<TUser, TContext> Represents a new instance of a persistence store for the specified user and role types. UserOnlyStore<TUser, TContext, TKey> Represents a new instance of a persistence store for the specified user and role types. UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> Represents a new instance of a persistence store for the specified user and role types. UserStore Represents a new instance of a persistence store for users, using the default implementation of Microsoft.AspNetCore.Identity.IdentityUser`1 with a string as a primary key. UserStore<TUser> Creates a new instance of a persistence store for the specified user type. UserStore<TUser, TRole, TContext> Represents a new instance of a persistence store for the specified user and role types. UserStore<TUser, TRole, TContext, TKey> Represents a new instance of a persistence store for the specified user and role types. UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken> UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> Interfaces ISelectRoleStore<TRole> ISelectUserStore<TUser>"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext.html",
    "title": "Class IdentityDbContext | FreeKit API Docs",
    "keywords": "Class IdentityDbContext Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext < Microsoft.AspNetCore.Identity.IdentityUser , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> IdentityDbContext < Microsoft.AspNetCore.Identity.IdentityUser , Microsoft.AspNetCore.Identity.IdentityRole , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> IdentityDbContext < Microsoft.AspNetCore.Identity.IdentityUser , Microsoft.AspNetCore.Identity.IdentityRole , System.String > IdentityDbContext Implements System.IDisposable Inherited Members IdentityDbContext<IdentityUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.UserRoles IdentityDbContext<IdentityUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.Roles IdentityDbContext<IdentityUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.RoleClaims IdentityDbContext<IdentityUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.OnModelCreating(ICodeFirst) IdentityUserContext<IdentityUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users IdentityUserContext<IdentityUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserClaims IdentityUserContext<IdentityUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserLogins IdentityUserContext<IdentityUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserTokens IdentityUserContext<IdentityUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class IdentityDbContext : IdentityDbContext<IdentityUser, IdentityRole, string>, IDisposable Constructors | Improve this Doc View Source IdentityDbContext() Initializes a new instance of the IdentityDbContext class. Declaration protected IdentityDbContext() | Improve this Doc View Source IdentityDbContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of IdentityDbContext . Declaration public IdentityDbContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions Microsoft.AspNetCore.Identity.IdentityOptions IFreeSql fsql fsql instance FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-1.html",
    "title": "Class IdentityDbContext<TUser> | FreeKit API Docs",
    "keywords": "Class IdentityDbContext<TUser> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> IdentityDbContext <TUser, Microsoft.AspNetCore.Identity.IdentityRole , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> IdentityDbContext <TUser, Microsoft.AspNetCore.Identity.IdentityRole , System.String > IdentityDbContext<TUser> Implements System.IDisposable Inherited Members IdentityDbContext<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.UserRoles IdentityDbContext<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.Roles IdentityDbContext<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.RoleClaims IdentityDbContext<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityRoleClaim<String>, IdentityUserToken<String>>.OnModelCreating(ICodeFirst) IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserClaims IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserLogins IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserTokens IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class IdentityDbContext<TUser> : IdentityDbContext<TUser, IdentityRole, string>, IDisposable where TUser : IdentityUser Type Parameters Name Description TUser The type of the user objects. Constructors | Improve this Doc View Source IdentityDbContext() Initializes a new instance of the IdentityDbContext class. Declaration protected IdentityDbContext() | Improve this Doc View Source IdentityDbContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of IdentityDbContext . Declaration public IdentityDbContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions IFreeSql fsql FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-3.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-3.html",
    "title": "Class IdentityDbContext<TUser, TRole, TKey> | FreeKit API Docs",
    "keywords": "Class IdentityDbContext<TUser, TRole, TKey> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext <TUser, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> IdentityDbContext <TUser, TRole, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserRole <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityRoleClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> IdentityDbContext<TUser, TRole, TKey> IdentityDbContext IdentityDbContext<TUser> Implements System.IDisposable Inherited Members IdentityDbContext<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityRoleClaim<TKey>, IdentityUserToken<TKey>>.UserRoles IdentityDbContext<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityRoleClaim<TKey>, IdentityUserToken<TKey>>.Roles IdentityDbContext<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityRoleClaim<TKey>, IdentityUserToken<TKey>>.RoleClaims IdentityDbContext<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityRoleClaim<TKey>, IdentityUserToken<TKey>>.OnModelCreating(ICodeFirst) IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserClaims IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserLogins IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserTokens IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class IdentityDbContext<TUser, TRole, TKey> : IdentityDbContext<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityRoleClaim<TKey>, IdentityUserToken<TKey>>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey> Type Parameters Name Description TUser The type of user objects. TRole The type of role objects. TKey The type of the primary key for users and roles. Constructors | Improve this Doc View Source IdentityDbContext() Initializes a new instance of the class. Declaration protected IdentityDbContext() | Improve this Doc View Source IdentityDbContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of the db context. Declaration public IdentityDbContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions The options to be used by a Microsoft.AspNetCore.Identity.IdentityOptions . IFreeSql fsql The options to be used by a IFreeSql . FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-8.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityDbContext-8.html",
    "title": "Class IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> | FreeKit API Docs",
    "keywords": "Class IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext <TUser, TKey, TUserClaim, TUserLogin, TUserToken> IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> IdentityDbContext<TUser, TRole, TKey> Implements System.IDisposable Inherited Members IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UserClaims IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UserLogins IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UserTokens IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public abstract class IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> : IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey> where TUserRole : IdentityUserRole<TKey> where TUserLogin : IdentityUserLogin<TKey> where TRoleClaim : IdentityRoleClaim<TKey> where TUserToken : IdentityUserToken<TKey> Type Parameters Name Description TUser The type of user objects. TRole The type of role objects. TKey The type of the primary key for users and roles. TUserClaim The type of the user claim object. TUserRole The type of the user role object. TUserLogin The type of the user login object. TRoleClaim The type of the role claim object. TUserToken The type of the user token object. Constructors | Improve this Doc View Source IdentityDbContext() Initializes a new instance of the class. Declaration protected IdentityDbContext() | Improve this Doc View Source IdentityDbContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of the class. Declaration public IdentityDbContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions IFreeSql fsql FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Properties | Improve this Doc View Source RoleClaims Gets or sets the FreeSql.DbSet<TEntity> of role claims. Declaration public virtual DbSet<TRoleClaim> RoleClaims { get; set; } Property Value Type Description FreeSql.DbSet <TRoleClaim> | Improve this Doc View Source Roles Gets or sets the FreeSql.DbSet<TEntity> of roles. Declaration public virtual DbSet<TRole> Roles { get; set; } Property Value Type Description FreeSql.DbSet <TRole> | Improve this Doc View Source UserRoles Gets or sets the FreeSql.DbSet<TEntity> of User roles. Declaration public virtual DbSet<TUserRole> UserRoles { get; set; } Property Value Type Description FreeSql.DbSet <TUserRole> Methods | Improve this Doc View Source OnModelCreating(ICodeFirst) Configures the schema needed for the identity framework. Declaration protected override void OnModelCreating(ICodeFirst builder) Parameters Type Name Description FreeSql.ICodeFirst builder The builder being used to construct the model for this context. Overrides IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.OnModelCreating(FreeSql.ICodeFirst) Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityFreeSqlBuilderExtensions.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityFreeSqlBuilderExtensions.html",
    "title": "Class IdentityFreeSqlBuilderExtensions | FreeKit API Docs",
    "keywords": "Class IdentityFreeSqlBuilderExtensions Contains extension methods to Microsoft.AspNetCore.Identity.IdentityBuilder for adding entity framework stores. Inheritance System.Object IdentityFreeSqlBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public static class IdentityFreeSqlBuilderExtensions Methods | Improve this Doc View Source AddFreeSqlStores<TContext>(IdentityBuilder) Adds an Entity Framework implementation of identity information stores. Declaration public static IdentityBuilder AddFreeSqlStores<TContext>(this IdentityBuilder builder) where TContext : DbContext Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityBuilder builder The Microsoft.AspNetCore.Identity.IdentityBuilder instance this method extends. Returns Type Description Microsoft.AspNetCore.Identity.IdentityBuilder The Microsoft.AspNetCore.Identity.IdentityBuilder instance this method extends. Type Parameters Name Description TContext The Entity Framework database context to use."
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-1.html",
    "title": "Class IdentityUserContext<TUser> | FreeKit API Docs",
    "keywords": "Class IdentityUserContext<TUser> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> IdentityUserContext <TUser, System.String > IdentityUserContext<TUser> Implements System.IDisposable Inherited Members IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserClaims IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserLogins IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserTokens IdentityUserContext<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class IdentityUserContext<TUser> : IdentityUserContext<TUser, string>, IDisposable where TUser : IdentityUser Type Parameters Name Description TUser The type of the user objects. Constructors | Improve this Doc View Source IdentityUserContext() Initializes a new instance of the IdentityUserContext<TUser> class. Declaration protected IdentityUserContext() | Improve this Doc View Source IdentityUserContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of IdentityUserContext<TUser> . Declaration public IdentityUserContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions The options to be used by a Microsoft.AspNetCore.Identity.IdentityOptions IFreeSql fsql The options to be used by a IFreeSql FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContextOptions Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-2.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-2.html",
    "title": "Class IdentityUserContext<TUser, TKey> | FreeKit API Docs",
    "keywords": "Class IdentityUserContext<TUser, TKey> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext <TUser, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> IdentityUserContext<TUser, TKey> IdentityUserContext<TUser> Implements System.IDisposable Inherited Members IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserClaims IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserLogins IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserTokens IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.OnModelCreating(ICodeFirst) FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class IdentityUserContext<TUser, TKey> : IdentityUserContext<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>, IDisposable where TUser : IdentityUser<TKey> where TKey : IEquatable<TKey> Type Parameters Name Description TUser The type of user objects. TKey The type of the primary key for users and roles. Constructors | Improve this Doc View Source IdentityUserContext() Initializes a new instance of the class. Declaration protected IdentityUserContext() | Improve this Doc View Source IdentityUserContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of the db context. Declaration public IdentityUserContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions IFreeSql fsql FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-5.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.IdentityUserContext-5.html",
    "title": "Class IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken> | FreeKit API Docs",
    "keywords": "Class IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken> Base class for the Entity Framework database context used for identity. Inheritance System.Object FreeSql.DbContext IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken> IdentityDbContext<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TRoleClaim, TUserToken> IdentityUserContext<TUser, TKey> Implements System.IDisposable Inherited Members FreeSql.DbContext._listSet FreeSql.DbContext._dicSet FreeSql.DbContext.OnConfiguring(FreeSql.DbContextOptionsBuilder) FreeSql.DbContext.Set<TEntity>() FreeSql.DbContext.Set(System.Type) FreeSql.DbContext.Add<TEntity>(TEntity) FreeSql.DbContext.AddRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Update<TEntity>(TEntity) FreeSql.DbContext.UpdateRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.Remove<TEntity>(TEntity) FreeSql.DbContext.RemoveRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AddOrUpdate<TEntity>(TEntity) FreeSql.DbContext.SaveMany<TEntity>(TEntity, System.String) FreeSql.DbContext.Attach<TEntity>(TEntity) FreeSql.DbContext.AttachRange<TEntity>(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.DbContext.AttachOnlyPrimary<TEntity>(TEntity) FreeSql.DbContext.CompareState<TEntity>(TEntity) FreeSql.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.AddRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.UpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.UpdateRangeAsync<TEntity>(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.DbContext.AddOrUpdateAsync<TEntity>(TEntity, System.Threading.CancellationToken) FreeSql.DbContext.SaveManyAsync<TEntity>(TEntity, System.String, System.Threading.CancellationToken) FreeSql.DbContext.Dispose() FreeSql.DbContext.SaveChangesAsync(System.Threading.CancellationToken) FreeSql.DbContext.SaveChanges() FreeSql.DbContext.Orm FreeSql.DbContext.UnitOfWork FreeSql.DbContext.Options FreeSql.DbContext.AllSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public abstract class IdentityUserContext<TUser, TKey, TUserClaim, TUserLogin, TUserToken> : DbContext, IDisposable where TUser : IdentityUser<TKey> where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey> where TUserLogin : IdentityUserLogin<TKey> where TUserToken : IdentityUserToken<TKey> Type Parameters Name Description TUser The type of user objects. TKey The type of the primary key for users and roles. TUserClaim The type of the user claim object. TUserLogin The type of the user login object. TUserToken The type of the user token object. Constructors | Improve this Doc View Source IdentityUserContext() Initializes a new instance of the class. Declaration protected IdentityUserContext() | Improve this Doc View Source IdentityUserContext(IdentityOptions, IFreeSql, DbContextOptions) Initializes a new instance of the class. Declaration public IdentityUserContext(IdentityOptions identityOptions, IFreeSql fsql, DbContextOptions options) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityOptions identityOptions IFreeSql fsql FreeSql.DbContextOptions options The options to be used by a FreeSql.DbContext . Properties | Improve this Doc View Source UserClaims Gets or sets the FreeSql.DbSet<TEntity> of User claims. Declaration public virtual DbSet<TUserClaim> UserClaims { get; set; } Property Value Type Description FreeSql.DbSet <TUserClaim> | Improve this Doc View Source UserLogins Gets or sets the FreeSql.DbSet<TEntity> of User logins. Declaration public virtual DbSet<TUserLogin> UserLogins { get; set; } Property Value Type Description FreeSql.DbSet <TUserLogin> | Improve this Doc View Source Users Gets or sets the FreeSql.DbSet<TEntity> of Users. Declaration public virtual DbSet<TUser> Users { get; set; } Property Value Type Description FreeSql.DbSet <TUser> | Improve this Doc View Source UserTokens Gets or sets the FreeSql.DbSet<TEntity> of User tokens. Declaration public virtual DbSet<TUserToken> UserTokens { get; set; } Property Value Type Description FreeSql.DbSet <TUserToken> Methods | Improve this Doc View Source OnModelCreating(ICodeFirst) Configures the schema needed for the identity framework. Declaration protected override void OnModelCreating(ICodeFirst builder) Parameters Type Name Description FreeSql.ICodeFirst builder The builder being used to construct the model for this context. Overrides FreeSql.DbContext.OnModelCreating(FreeSql.ICodeFirst) Implements System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.ISelectRoleStore-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.ISelectRoleStore-1.html",
    "title": "Interface ISelectRoleStore<TRole> | FreeKit API Docs",
    "keywords": "Interface ISelectRoleStore<TRole> Inherited Members Microsoft.AspNetCore.Identity.IRoleStore<TRole>.CreateAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.UpdateAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.DeleteAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.GetRoleIdAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.GetRoleNameAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.SetRoleNameAsync(TRole, System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.GetNormalizedRoleNameAsync(TRole, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.SetNormalizedRoleNameAsync(TRole, System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.FindByIdAsync(System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IRoleStore<TRole>.FindByNameAsync(System.String, System.Threading.CancellationToken) System.IDisposable.Dispose() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public interface ISelectRoleStore<TRole> : IRoleStore<TRole>, IDisposable where TRole : class Type Parameters Name Description TRole Properties | Improve this Doc View Source Roles Declaration ISelect<TRole> Roles { get; } Property Value Type Description FreeSql.ISelect <TRole>"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.ISelectUserStore-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.ISelectUserStore-1.html",
    "title": "Interface ISelectUserStore<TUser> | FreeKit API Docs",
    "keywords": "Interface ISelectUserStore<TUser> Inherited Members Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserIdAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetUserNameAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.CreateAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.UpdateAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.DeleteAsync(TUser, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByIdAsync(System.String, System.Threading.CancellationToken) Microsoft.AspNetCore.Identity.IUserStore<TUser>.FindByNameAsync(System.String, System.Threading.CancellationToken) System.IDisposable.Dispose() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public interface ISelectUserStore<TUser> : IUserStore<TUser>, IDisposable where TUser : class Type Parameters Name Description TUser Properties | Improve this Doc View Source Users Declaration ISelect<TUser> Users { get; } Property Value Type Description FreeSql.ISelect <TUser>"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-1.html",
    "title": "Class RoleStore<TRole> | FreeKit API Docs",
    "keywords": "Class RoleStore<TRole> Creates a new instance of a persistence store for roles. Inheritance System.Object RoleStore <TRole, FreeSql.DbContext , System.String , Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> RoleStore <TRole, FreeSql.DbContext , System.String > RoleStore<TRole> Implements ISelectRoleStore <TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore <TRole> Microsoft.AspNetCore.Identity.IRoleStore <TRole> System.IDisposable Inherited Members RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Context RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ErrorDescriber RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AutoSaveChanges RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SaveChanges(CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.UpdateAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.DeleteAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleIdAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdFromString(String) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdToString(String) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetNormalizedRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ThrowIfDisposed() RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Dispose() RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetClaimsAsync(TRole, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AddClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.RemoveClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Roles RoleStore<TRole, DbContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateRoleClaim(TRole, Claim) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class RoleStore<TRole> : RoleStore<TRole, DbContext, string>, ISelectRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<string> Type Parameters Name Description TRole The type of the class representing a role Constructors | Improve this Doc View Source RoleStore(DbContext, IdentityErrorDescriber) Constructs a new instance of RoleStore<TRole> . Declaration public RoleStore(DbContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description FreeSql.DbContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements ISelectRoleStore<TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole> Microsoft.AspNetCore.Identity.IRoleStore<TRole> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-2.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-2.html",
    "title": "Class RoleStore<TRole, TContext> | FreeKit API Docs",
    "keywords": "Class RoleStore<TRole, TContext> Creates a new instance of a persistence store for roles. Inheritance System.Object RoleStore <TRole, TContext, System.String , Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> RoleStore <TRole, TContext, System.String > RoleStore<TRole, TContext> Implements ISelectRoleStore <TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore <TRole> Microsoft.AspNetCore.Identity.IRoleStore <TRole> System.IDisposable Inherited Members RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Context RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ErrorDescriber RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AutoSaveChanges RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SaveChanges(CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.UpdateAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.DeleteAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleIdAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdFromString(String) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ConvertIdToString(String) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetNormalizedRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.ThrowIfDisposed() RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Dispose() RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.GetClaimsAsync(TRole, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.AddClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.RemoveClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.Roles RoleStore<TRole, TContext, String, IdentityUserRole<String>, IdentityRoleClaim<String>>.CreateRoleClaim(TRole, Claim) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class RoleStore<TRole, TContext> : RoleStore<TRole, TContext, string>, ISelectRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<string> where TContext : DbContext Type Parameters Name Description TRole The type of the class representing a role. TContext The type of the data context class used to access the store. Constructors | Improve this Doc View Source RoleStore(TContext, IdentityErrorDescriber) Constructs a new instance of RoleStore<TRole, TContext> . Declaration public RoleStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements ISelectRoleStore<TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole> Microsoft.AspNetCore.Identity.IRoleStore<TRole> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-3.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-3.html",
    "title": "Class RoleStore<TRole, TContext, TKey> | FreeKit API Docs",
    "keywords": "Class RoleStore<TRole, TContext, TKey> Creates a new instance of a persistence store for roles. Inheritance System.Object RoleStore <TRole, TContext, TKey, Microsoft.AspNetCore.Identity.IdentityUserRole <TKey>, Microsoft.AspNetCore.Identity.IdentityRoleClaim <TKey>> RoleStore<TRole, TContext, TKey> RoleStore<TRole> RoleStore<TRole, TContext> Implements ISelectRoleStore <TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore <TRole> Microsoft.AspNetCore.Identity.IRoleStore <TRole> System.IDisposable Inherited Members RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Context RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ErrorDescriber RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.AutoSaveChanges RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SaveChanges(CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.UpdateAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.DeleteAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleIdAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdFromString(String) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ConvertIdToString(TKey) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByIdAsync(String, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.FindByNameAsync(String, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetNormalizedRoleNameAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.SetNormalizedRoleNameAsync(TRole, String, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.ThrowIfDisposed() RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Dispose() RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.GetClaimsAsync(TRole, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.AddClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.RemoveClaimAsync(TRole, Claim, CancellationToken) RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.Roles RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>.CreateRoleClaim(TRole, Claim) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class RoleStore<TRole, TContext, TKey> : RoleStore<TRole, TContext, TKey, IdentityUserRole<TKey>, IdentityRoleClaim<TKey>>, ISelectRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey> Type Parameters Name Description TRole The type of the class representing a role. TContext The type of the data context class used to access the store. TKey The type of the primary key for a role. Constructors | Improve this Doc View Source RoleStore(TContext, IdentityErrorDescriber) Constructs a new instance of RoleStore<TRole, TContext, TKey> . Declaration public RoleStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements ISelectRoleStore<TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole> Microsoft.AspNetCore.Identity.IRoleStore<TRole> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-5.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.RoleStore-5.html",
    "title": "Class RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> | FreeKit API Docs",
    "keywords": "Class RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> Creates a new instance of a persistence store for roles. Inheritance System.Object RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> RoleStore<TRole, TContext, TKey> Implements ISelectRoleStore <TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore <TRole> Microsoft.AspNetCore.Identity.IRoleStore <TRole> System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> : ISelectRoleStore<TRole>, IRoleClaimStore<TRole>, IRoleStore<TRole>, IDisposable where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey> where TUserRole : IdentityUserRole<TKey>, new() where TRoleClaim : IdentityRoleClaim<TKey>, new() Type Parameters Name Description TRole The type of the class representing a role. TContext The type of the data context class used to access the store. TKey The type of the primary key for a role. TUserRole The type of the class representing a user role. TRoleClaim The type of the class representing a role claim. Constructors | Improve this Doc View Source RoleStore(TContext, IdentityErrorDescriber) Constructs a new instance of RoleStore<TRole, TContext, TKey, TUserRole, TRoleClaim> . Declaration public RoleStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Properties | Improve this Doc View Source AutoSaveChanges Gets or sets a flag indicating if changes should be persisted after CreateAsync, UpdateAsync and DeleteAsync are called. Declaration public bool AutoSaveChanges { get; set; } Property Value Type Description System.Boolean True if changes should be automatically persisted, otherwise false. | Improve this Doc View Source Context Gets the database context for this store. Declaration public virtual TContext Context { get; } Property Value Type Description TContext | Improve this Doc View Source ErrorDescriber Gets or sets the Microsoft.AspNetCore.Identity.IdentityErrorDescriber for any error that occurred with the current operation. Declaration public IdentityErrorDescriber ErrorDescriber { get; set; } Property Value Type Description Microsoft.AspNetCore.Identity.IdentityErrorDescriber | Improve this Doc View Source Roles A navigation property for the roles the store contains. Declaration public virtual ISelect<TRole> Roles { get; } Property Value Type Description FreeSql.ISelect <TRole> Methods | Improve this Doc View Source AddClaimAsync(TRole, Claim, CancellationToken) Adds the claim given to the specified role . Declaration public virtual Task AddClaimAsync(TRole role, Claim claim, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role to add the claim to. System.Security.Claims.Claim claim The claim to add to the role. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source ConvertIdFromString(String) Converts the provided id to a strongly typed key object. Declaration public virtual TKey ConvertIdFromString(string id) Parameters Type Name Description System.String id The id to convert. Returns Type Description TKey An instance of TKey representing the provided id . | Improve this Doc View Source ConvertIdToString(TKey) Converts the provided id to its string representation. Declaration public virtual string ConvertIdToString(TKey id) Parameters Type Name Description TKey id The id to convert. Returns Type Description System.String An System.String representation of the provided id . | Improve this Doc View Source CreateAsync(TRole, CancellationToken) Creates a new role in a store as an asynchronous operation. Declaration public virtual async Task<IdentityResult> CreateAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role to create in the store. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > A that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. | Improve this Doc View Source CreateRoleClaim(TRole, Claim) Creates an entity representing a role claim. Declaration protected virtual TRoleClaim CreateRoleClaim(TRole role, Claim claim) Parameters Type Name Description TRole role The associated role. System.Security.Claims.Claim claim The associated claim. Returns Type Description TRoleClaim The role claim entity. | Improve this Doc View Source DeleteAsync(TRole, CancellationToken) Deletes a role from the store as an asynchronous operation. Declaration public virtual async Task<IdentityResult> DeleteAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role to delete from the store. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > A that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. | Improve this Doc View Source Dispose() Dispose the stores Declaration public void Dispose() | Improve this Doc View Source FindByIdAsync(String, CancellationToken) Finds the role who has the specified ID as an asynchronous operation. Declaration public virtual Task<TRole> FindByIdAsync(string id, CancellationToken cancellationToken = null) Parameters Type Name Description System.String id The role ID to look for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TRole> A that result of the look up. | Improve this Doc View Source FindByNameAsync(String, CancellationToken) Finds the role who has the specified normalized name as an asynchronous operation. Declaration public virtual Task<TRole> FindByNameAsync(string normalizedName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedName The normalized role name to look for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TRole> A that result of the look up. | Improve this Doc View Source GetClaimsAsync(TRole, CancellationToken) Get the claims associated with the specified role as an asynchronous operation. Declaration public virtual async Task<IList<Claim>> GetClaimsAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose claims should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.Security.Claims.Claim >> A that contains the claims granted to a role. | Improve this Doc View Source GetNormalizedRoleNameAsync(TRole, CancellationToken) Get a role's normalized name as an asynchronous operation. Declaration public virtual Task<string> GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose normalized name should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > A that contains the name of the role. | Improve this Doc View Source GetRoleIdAsync(TRole, CancellationToken) Gets the ID for a role from the store as an asynchronous operation. Declaration public virtual Task<string> GetRoleIdAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose ID should be returned. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > A that contains the ID of the role. | Improve this Doc View Source GetRoleNameAsync(TRole, CancellationToken) Gets the name of a role from the store as an asynchronous operation. Declaration public virtual Task<string> GetRoleNameAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose name should be returned. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > A that contains the name of the role. | Improve this Doc View Source RemoveClaimAsync(TRole, Claim, CancellationToken) Removes the claim given from the specified role . Declaration public virtual async Task RemoveClaimAsync(TRole role, Claim claim, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role to remove the claim from. System.Security.Claims.Claim claim The claim to remove from the role. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SaveChanges(CancellationToken) Saves the current store. Declaration protected virtual async Task SaveChanges(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetNormalizedRoleNameAsync(TRole, String, CancellationToken) Set a role's normalized name as an asynchronous operation. Declaration public virtual Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose normalized name should be set. System.String normalizedName The normalized name to set CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetRoleNameAsync(TRole, String, CancellationToken) Sets the name of a role in the store as an asynchronous operation. Declaration public virtual Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role whose name should be set. System.String roleName The name of the role. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source ThrowIfDisposed() Throws if this class has been disposed. Declaration protected void ThrowIfDisposed() | Improve this Doc View Source UpdateAsync(TRole, CancellationToken) Updates a role in a store as an asynchronous operation. Declaration public virtual async Task<IdentityResult> UpdateAsync(TRole role, CancellationToken cancellationToken = null) Parameters Type Name Description TRole role The role to update in the store. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > A that represents the Microsoft.AspNetCore.Identity.IdentityResult of the asynchronous query. Implements ISelectRoleStore<TRole> IDisposable Microsoft.AspNetCore.Identity.IRoleClaimStore<TRole> Microsoft.AspNetCore.Identity.IRoleStore<TRole> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-1.html",
    "title": "Class UserOnlyStore<TUser> | FreeKit API Docs",
    "keywords": "Class UserOnlyStore<TUser> Creates a new instance of a persistence store for the specified user type. Inheritance System.Object UserStoreBaseISelect <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserOnlyStore <TUser, FreeSql.DbContext , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserOnlyStore <TUser, FreeSql.DbContext , System.String > UserOnlyStore<TUser> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Context UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UsersSet UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserClaims UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserLogins UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserTokens UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AutoSaveChanges UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SaveChanges(CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserOnlyStore<TUser, DbContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ErrorDescriber UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdToString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Dispose() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserOnlyStore<TUser> : UserOnlyStore<TUser, DbContext, string>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<string>, new() Type Parameters Name Description TUser The type representing a user. Constructors | Improve this Doc View Source UserOnlyStore(DbContext, IdentityErrorDescriber) Constructs a new instance of UserOnlyStore<TUser> . Declaration public UserOnlyStore(DbContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description FreeSql.DbContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-2.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-2.html",
    "title": "Class UserOnlyStore<TUser, TContext> | FreeKit API Docs",
    "keywords": "Class UserOnlyStore<TUser, TContext> Represents a new instance of a persistence store for the specified user and role types. Inheritance System.Object UserStoreBaseISelect <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserOnlyStore <TUser, TContext, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserOnlyStore <TUser, TContext, System.String > UserOnlyStore<TUser, TContext> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Context UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UsersSet UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserClaims UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserLogins UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UserTokens UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AutoSaveChanges UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SaveChanges(CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserOnlyStore<TUser, TContext, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ErrorDescriber UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdToString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Dispose() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserOnlyStore<TUser, TContext> : UserOnlyStore<TUser, TContext, string>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<string> where TContext : DbContext Type Parameters Name Description TUser The type representing a user. TContext The type of the data context class used to access the store. Constructors | Improve this Doc View Source UserOnlyStore(TContext, IdentityErrorDescriber) Constructs a new instance of UserStore<TUser, TRole, TContext> . Declaration public UserOnlyStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-3.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-3.html",
    "title": "Class UserOnlyStore<TUser, TContext, TKey> | FreeKit API Docs",
    "keywords": "Class UserOnlyStore<TUser, TContext, TKey> Represents a new instance of a persistence store for the specified user and role types. Inheritance System.Object UserStoreBaseISelect <TUser, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> UserOnlyStore <TUser, TContext, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> UserOnlyStore<TUser, TContext, TKey> UserOnlyStore<TUser> UserOnlyStore<TUser, TContext> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Context UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UsersSet UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserClaims UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserLogins UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UserTokens UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AutoSaveChanges UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SaveChanges(CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UpdateAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.DeleteAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByIdAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByNameAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserAsync(TKey, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetClaimsAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLoginsAsync(TUser, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByLoginAsync(String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByEmailAsync(String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersForClaimAsync(Claim, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindTokenAsync(TUser, String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddUserTokenAsync(IdentityUserToken<TKey>) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ErrorDescriber UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdToString(TKey) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserAsync(TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Dispose() UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserOnlyStore<TUser, TContext, TKey> : UserOnlyStore<TUser, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TContext : DbContext where TKey : IEquatable<TKey> Type Parameters Name Description TUser The type representing a user. TContext The type of the data context class used to access the store. TKey The type of the primary key for a role. Constructors | Improve this Doc View Source UserOnlyStore(TContext, IdentityErrorDescriber) Constructs a new instance of UserStore<TUser, TRole, TContext, TKey> . Declaration public UserOnlyStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-6.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserOnlyStore-6.html",
    "title": "Class UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> | FreeKit API Docs",
    "keywords": "Class UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> Represents a new instance of a persistence store for the specified user and role types. Inheritance System.Object UserStoreBaseISelect <TUser, TKey, TUserClaim, TUserLogin, TUserToken> UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> UserOnlyStore<TUser, TContext, TKey> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ErrorDescriber UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString(TKey) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> : UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TContext : DbContext where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey>, new() where TUserLogin : IdentityUserLogin<TKey>, new() where TUserToken : IdentityUserToken<TKey>, new() Type Parameters Name Description TUser The type representing a user. TContext The type of the data context class used to access the store. TKey The type of the primary key for a role. TUserClaim The type representing a claim. TUserLogin The type representing a user external login. TUserToken The type representing a user token. Constructors | Improve this Doc View Source UserOnlyStore(TContext, IdentityErrorDescriber) Creates a new instance of the store. Declaration public UserOnlyStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The context used to access the store. Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber used to describe store errors. Properties | Improve this Doc View Source AutoSaveChanges Gets or sets a flag indicating if changes should be persisted after CreateAsync, UpdateAsync and DeleteAsync are called. Declaration public bool AutoSaveChanges { get; set; } Property Value Type Description System.Boolean True if changes should be automatically persisted, otherwise false. | Improve this Doc View Source Context Gets the database context for this store. Declaration public virtual TContext Context { get; } Property Value Type Description TContext | Improve this Doc View Source UserClaims DbSet of user claims. Declaration protected DbSet<TUserClaim> UserClaims { get; } Property Value Type Description FreeSql.DbSet <TUserClaim> | Improve this Doc View Source UserLogins DbSet of user logins. Declaration protected DbSet<TUserLogin> UserLogins { get; } Property Value Type Description FreeSql.DbSet <TUserLogin> | Improve this Doc View Source Users A navigation property for the users the store contains. Declaration public override ISelect<TUser> Users { get; } Property Value Type Description FreeSql.ISelect <TUser> Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users | Improve this Doc View Source UsersSet DbSet of users. Declaration protected DbSet<TUser> UsersSet { get; } Property Value Type Description FreeSql.DbSet <TUser> | Improve this Doc View Source UserTokens DbSet of user tokens. Declaration protected DbSet<TUserToken> UserTokens { get; } Property Value Type Description FreeSql.DbSet <TUserToken> Methods | Improve this Doc View Source AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Adds the claims given to the specified user . Declaration public override Task AddClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the claim to. IEnumerable < System.Security.Claims.Claim > claims The claim to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<System.Security.Claims.Claim>, CancellationToken) | Improve this Doc View Source AddLoginAsync(TUser, UserLoginInfo, CancellationToken) Adds the login given to the specified user . Declaration public override Task AddLoginAsync(TUser user, UserLoginInfo login, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the login to. Microsoft.AspNetCore.Identity.UserLoginInfo login The login to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, CancellationToken) | Improve this Doc View Source AddUserTokenAsync(TUserToken) Add a new user token. Declaration protected override Task AddUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be added. Returns Type Description Task Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken) | Improve this Doc View Source CreateAsync(TUser, CancellationToken) Creates the specified user in the user store. Declaration public override async Task<IdentityResult> CreateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to create. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the creation operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken) | Improve this Doc View Source DeleteAsync(TUser, CancellationToken) Deletes the specified user from the user store. Declaration public override async Task<IdentityResult> DeleteAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to delete. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken) | Improve this Doc View Source FindByEmailAsync(String, CancellationToken) Gets the user, if any, associated with the specified, normalized email address. Declaration public override async Task<TUser> FindByEmailAsync(string normalizedEmail, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedEmail The normalized email address to return the user for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The task object containing the results of the asynchronous lookup operation, the user if any associated with the specified normalized email address. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(System.String, CancellationToken) | Improve this Doc View Source FindByIdAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified userId . Declaration public override Task<TUser> FindByIdAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user ID to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified userId if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(System.String, CancellationToken) | Improve this Doc View Source FindByLoginAsync(String, String, CancellationToken) Retrieves the user associated with the specified login provider and login provider key. Declaration public override async Task<TUser> FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description System.String loginProvider The login provider who provided the providerKey . System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The for the asynchronous operation, containing the user, if any which matched the specified login provider and key. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(System.String, System.String, CancellationToken) | Improve this Doc View Source FindByNameAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified normalized user name. Declaration public override Task<TUser> FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedUserName The normalized user name to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified normalizedUserName if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(System.String, CancellationToken) | Improve this Doc View Source FindTokenAsync(TUser, String, String, CancellationToken) Find a user token if it exists. Declaration protected override Task<TUserToken> FindTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken) Parameters Type Name Description TUser user The token owner. System.String loginProvider The login provider for the token. System.String name The name of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserToken> The user token if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, System.String, System.String, CancellationToken) | Improve this Doc View Source FindUserAsync(TKey, CancellationToken) Return a user with the matching userId if it exists. Declaration protected override Task<TUser> FindUserAsync(TKey userId, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The user if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken) | Improve this Doc View Source FindUserLoginAsync(TKey, String, String, CancellationToken) Return a user login with the matching userId, provider, providerKey if it exists. Declaration protected override Task<TUserLogin> FindUserLoginAsync(TKey userId, string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, System.String, System.String, CancellationToken) | Improve this Doc View Source FindUserLoginAsync(String, String, CancellationToken) Return a user login with provider, providerKey if it exists. Declaration protected override Task<TUserLogin> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(System.String, System.String, CancellationToken) | Improve this Doc View Source GetClaimsAsync(TUser, CancellationToken) Get the claims associated with the specified user as an asynchronous operation. Declaration public override async Task<IList<Claim>> GetClaimsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose claims should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.Security.Claims.Claim >> A that contains the claims granted to a user. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken) | Improve this Doc View Source GetLoginsAsync(TUser, CancellationToken) Retrieves the associated logins for the specified . Declaration public override async Task<IList<UserLoginInfo>> GetLoginsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose associated logins to retrieve. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < Microsoft.AspNetCore.Identity.UserLoginInfo >> The for the asynchronous operation, containing a list of Microsoft.AspNetCore.Identity.UserLoginInfo for the specified user , if any. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken) | Improve this Doc View Source GetUsersForClaimAsync(Claim, CancellationToken) Retrieves all users with the specified claim. Declaration public override async Task<IList<TUser>> GetUsersForClaimAsync(Claim claim, CancellationToken cancellationToken = null) Parameters Type Name Description System.Security.Claims.Claim claim The claim whose users should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList <TUser>> The contains a list of users, if any, that contain the specified claim. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(System.Security.Claims.Claim, CancellationToken) | Improve this Doc View Source RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Removes the claims given from the specified user . Declaration public override async Task RemoveClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the claims from. IEnumerable < System.Security.Claims.Claim > claims The claim to remove. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<System.Security.Claims.Claim>, CancellationToken) | Improve this Doc View Source RemoveLoginAsync(TUser, String, String, CancellationToken) Removes the loginProvider given from the specified user . Declaration public override async Task RemoveLoginAsync(TUser user, string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the login from. System.String loginProvider The login to remove from the user. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, System.String, System.String, CancellationToken) | Improve this Doc View Source RemoveUserTokenAsync(TUserToken) Remove a new user token. Declaration protected override Task RemoveUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be removed. Returns Type Description Task Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken) | Improve this Doc View Source ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) Replaces the claim on the specified user , with the newClaim . Declaration public override async Task ReplaceClaimAsync(TUser user, Claim claim, Claim newClaim, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to replace the claim on. System.Security.Claims.Claim claim The claim replace. System.Security.Claims.Claim newClaim The new claim replacing the claim . CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, CancellationToken) | Improve this Doc View Source SaveChanges(CancellationToken) Saves the current store. Declaration protected Task SaveChanges(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetTokenAsync(TUser, String, String, String, CancellationToken) Sets the token value for a particular user. Declaration public override async Task SetTokenAsync(TUser user, string loginProvider, string name, string value, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user. System.String loginProvider The authentication provider for the token. System.String name The name of the token. System.String value The value of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, System.String, System.String, System.String, CancellationToken) | Improve this Doc View Source UpdateAsync(TUser, CancellationToken) Updates the specified user in the user store. Declaration public override async Task<IdentityResult> UpdateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to update. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken) Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore.html",
    "title": "Class UserStore | FreeKit API Docs",
    "keywords": "Class UserStore Represents a new instance of a persistence store for users, using the default implementation of Microsoft.AspNetCore.Identity.IdentityUser`1 with a string as a primary key. Inheritance System.Object UserStoreBaseISelect < Microsoft.AspNetCore.Identity.IdentityUser < System.String >, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserStoreBaseISelect < Microsoft.AspNetCore.Identity.IdentityUser < System.String >, Microsoft.AspNetCore.Identity.IdentityRole , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >, Microsoft.AspNetCore.Identity.IdentityRole , FreeSql.DbContext , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >, Microsoft.AspNetCore.Identity.IdentityRole , FreeSql.DbContext , System.String > UserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> UserStore Implements Microsoft.AspNetCore.Identity.IUserLoginStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserClaimStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserPasswordStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserSecurityStampStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserEmailStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserLockoutStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> ISelectUserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserRoleStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IProtectedUserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> Microsoft.AspNetCore.Identity.IUserStore < Microsoft.AspNetCore.Identity.IdentityUser < System.String >> System.IDisposable Inherited Members UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Context UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AutoSaveChanges UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SaveChanges(CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.UpdateAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.DeleteAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Users UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(IdentityUser<String>, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(IdentityUser<String>, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(IdentityUser<String>, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetClaimsAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddClaimsAsync(IdentityUser<String>, IEnumerable<Claim>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.ReplaceClaimAsync(IdentityUser<String>, Claim, Claim, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveClaimsAsync(IdentityUser<String>, IEnumerable<Claim>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddLoginAsync(IdentityUser<String>, UserLoginInfo, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveLoginAsync(IdentityUser<String>, String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetLoginsAsync(IdentityUser<String>, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByLoginAsync(String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByEmailAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindTokenAsync(IdentityUser<String>, String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SetTokenAsync(IdentityUser<String>, String, String, String, CancellationToken) UserStore<IdentityUser<String>, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateUserRole(IdentityUser<String>, IdentityRole) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ErrorDescriber UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserClaim(IdentityUser<String>, Claim) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserLogin(IdentityUser<String>, UserLoginInfo) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserToken(IdentityUser<String>, String, String, String) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserIdAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserNameAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetUserNameAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedUserNameAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedUserNameAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdFromString(String) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdToString(String) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPasswordHashAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPasswordHashAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.HasPasswordAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ThrowIfDisposed() UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Dispose() UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(IdentityUser<String>, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(IdentityUser<String>, Claim, Claim, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(IdentityUser<String>, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(IdentityUser<String>, UserLoginInfo, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(IdentityUser<String>, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailConfirmedAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailConfirmedAsync(IdentityUser<String>, Boolean, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedEmailAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedEmailAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEndDateAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEndDateAsync(IdentityUser<String>, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.IncrementAccessFailedCountAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ResetAccessFailedCountAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAccessFailedCountAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEnabledAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEnabledAsync(IdentityUser<String>, Boolean, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberConfirmedAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberConfirmedAsync(IdentityUser<String>, Boolean, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetSecurityStampAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetSecurityStampAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTwoFactorEnabledAsync(IdentityUser<String>, Boolean, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTwoFactorEnabledAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(IdentityUser<String>, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(IdentityUser<String>, String, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveTokenAsync(IdentityUser<String>, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTokenAsync(IdentityUser<String>, String, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetAuthenticatorKeyAsync(IdentityUser<String>, String, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAuthenticatorKeyAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CountCodesAsync(IdentityUser<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceCodesAsync(IdentityUser<String>, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<IdentityUser<String>, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RedeemCodeAsync(IdentityUser<String>, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserStore : UserStore<IdentityUser<string>>, IUserLoginStore<IdentityUser<string>>, IUserClaimStore<IdentityUser<string>>, IUserPasswordStore<IdentityUser<string>>, IUserSecurityStampStore<IdentityUser<string>>, IUserEmailStore<IdentityUser<string>>, IUserLockoutStore<IdentityUser<string>>, IUserPhoneNumberStore<IdentityUser<string>>, ISelectUserStore<IdentityUser<string>>, IUserTwoFactorStore<IdentityUser<string>>, IUserAuthenticationTokenStore<IdentityUser<string>>, IUserAuthenticatorKeyStore<IdentityUser<string>>, IUserTwoFactorRecoveryCodeStore<IdentityUser<string>>, IUserRoleStore<IdentityUser<string>>, IProtectedUserStore<IdentityUser<string>>, IUserStore<IdentityUser<string>>, IDisposable Constructors | Improve this Doc View Source UserStore(DbContext, IdentityErrorDescriber) Constructs a new instance of UserStore . Declaration public UserStore(DbContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description FreeSql.DbContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-1.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-1.html",
    "title": "Class UserStore<TUser> | FreeKit API Docs",
    "keywords": "Class UserStore<TUser> Creates a new instance of a persistence store for the specified user type. Inheritance System.Object UserStoreBaseISelect <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserStoreBaseISelect <TUser, Microsoft.AspNetCore.Identity.IdentityRole , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore <TUser, Microsoft.AspNetCore.Identity.IdentityRole , FreeSql.DbContext , System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore <TUser, Microsoft.AspNetCore.Identity.IdentityRole , FreeSql.DbContext , System.String > UserStore<TUser> UserStore Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserRoleStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Context UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AutoSaveChanges UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SaveChanges(CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.UpdateAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.DeleteAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Users UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(TUser, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(TUser, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetClaimsAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetLoginsAsync(TUser, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByLoginAsync(String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByEmailAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStore<TUser, IdentityRole, DbContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateUserRole(TUser, IdentityRole) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, IdentityRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ErrorDescriber UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdToString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Dispose() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserStore<TUser> : UserStore<TUser, IdentityRole, DbContext, string>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserRoleStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<string>, new() Type Parameters Name Description TUser The type representing a user. Constructors | Improve this Doc View Source UserStore(DbContext, IdentityErrorDescriber) Constructs a new instance of UserStore<TUser> . Declaration public UserStore(DbContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description FreeSql.DbContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-3.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-3.html",
    "title": "Class UserStore<TUser, TRole, TContext> | FreeKit API Docs",
    "keywords": "Class UserStore<TUser, TRole, TContext> Represents a new instance of a persistence store for the specified user and role types. Inheritance System.Object UserStoreBaseISelect <TUser, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >> UserStoreBaseISelect <TUser, TRole, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore <TUser, TRole, TContext, System.String , Microsoft.AspNetCore.Identity.IdentityUserClaim < System.String >, Microsoft.AspNetCore.Identity.IdentityUserRole < System.String >, Microsoft.AspNetCore.Identity.IdentityUserLogin < System.String >, Microsoft.AspNetCore.Identity.IdentityUserToken < System.String >, Microsoft.AspNetCore.Identity.IdentityRoleClaim < System.String >> UserStore <TUser, TRole, TContext, System.String > UserStore<TUser, TRole, TContext> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserRoleStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Context UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AutoSaveChanges UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SaveChanges(CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.UpdateAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.DeleteAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByIdAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByNameAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.Users UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetClaimsAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetLoginsAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByLoginAsync(String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindByEmailAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStore<TUser, TRole, TContext, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.CreateUserRole(TUser, TRole) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetUsersInRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.AddToRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.GetRolesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.IsInRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, String, IdentityUserClaim<String>, IdentityUserRole<String>, IdentityUserLogin<String>, IdentityUserToken<String>, IdentityRoleClaim<String>>.FindUserRoleAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ErrorDescriber UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ConvertIdToString(String) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Users UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.Dispose() UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.AddUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveUserTokenAsync(IdentityUserToken<String>) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, String, IdentityUserClaim<String>, IdentityUserLogin<String>, IdentityUserToken<String>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserStore<TUser, TRole, TContext> : UserStore<TUser, TRole, TContext, string>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserRoleStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<string> where TRole : IdentityRole<string> where TContext : DbContext Type Parameters Name Description TUser The type representing a user. TRole The type representing a role. TContext The type of the data context class used to access the store. Constructors | Improve this Doc View Source UserStore(TContext, IdentityErrorDescriber) Constructs a new instance of UserStore<TUser, TRole, TContext> . Declaration public UserStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-4.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-4.html",
    "title": "Class UserStore<TUser, TRole, TContext, TKey> | FreeKit API Docs",
    "keywords": "Class UserStore<TUser, TRole, TContext, TKey> Represents a new instance of a persistence store for the specified user and role types. Inheritance System.Object UserStoreBaseISelect <TUser, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>> UserStoreBaseISelect <TUser, TRole, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserRole <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>, Microsoft.AspNetCore.Identity.IdentityRoleClaim <TKey>> UserStore <TUser, TRole, TContext, TKey, Microsoft.AspNetCore.Identity.IdentityUserClaim <TKey>, Microsoft.AspNetCore.Identity.IdentityUserRole <TKey>, Microsoft.AspNetCore.Identity.IdentityUserLogin <TKey>, Microsoft.AspNetCore.Identity.IdentityUserToken <TKey>, Microsoft.AspNetCore.Identity.IdentityRoleClaim <TKey>> UserStore<TUser, TRole, TContext, TKey> UserStore<TUser> UserStore<TUser, TRole, TContext> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserRoleStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.Context UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AutoSaveChanges UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.SaveChanges(CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.CreateAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.UpdateAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.DeleteAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindByIdAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindByNameAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.Users UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindRoleAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindUserRoleAsync(TKey, TKey, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindUserAsync(TKey, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindUserLoginAsync(String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AddToRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetRolesAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.IsInRoleAsync(TUser, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetClaimsAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetLoginsAsync(TUser, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindByLoginAsync(String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindByEmailAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetUsersInRoleAsync(String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AddUserTokenAsync(IdentityUserToken<TKey>) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.RemoveUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.CreateUserRole(TUser, TRole) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetUsersInRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.AddToRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.GetRolesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.IsInRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>.FindUserRoleAsync(TKey, TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ErrorDescriber UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ConvertIdToString(TKey) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Users UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserAsync(TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ThrowIfDisposed() UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.Dispose() UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.AddUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveUserTokenAsync(IdentityUserToken<TKey>) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, TKey, IdentityUserClaim<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserStore<TUser, TRole, TContext, TKey> : UserStore<TUser, TRole, TContext, TKey, IdentityUserClaim<TKey>, IdentityUserRole<TKey>, IdentityUserLogin<TKey>, IdentityUserToken<TKey>, IdentityRoleClaim<TKey>>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserRoleStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey> Type Parameters Name Description TUser The type representing a user. TRole The type representing a role. TContext The type of the data context class used to access the store. TKey The type of the primary key for a role. Constructors | Improve this Doc View Source UserStore(TContext, IdentityErrorDescriber) Constructs a new instance of UserStore<TUser, TRole, TContext, TKey> . Declaration public UserStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The FreeSql.DbContext . Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-9.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStore-9.html",
    "title": "Class UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> | FreeKit API Docs",
    "keywords": "Class UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> Inheritance System.Object UserStoreBaseISelect <TUser, TKey, TUserClaim, TUserLogin, TUserToken> UserStoreBaseISelect <TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> UserStore<TUser, TRole, TContext, TKey> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserRoleStore <TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateUserRole(TUser, TRole) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ErrorDescriber UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString(TKey) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public class UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> : UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserRoleStore<TUser>, IProtectedUserStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TContext : DbContext where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey>, new() where TUserRole : IdentityUserRole<TKey>, new() where TUserLogin : IdentityUserLogin<TKey>, new() where TUserToken : IdentityUserToken<TKey>, new() where TRoleClaim : IdentityRoleClaim<TKey>, new() Type Parameters Name Description TUser TRole TContext TKey TUserClaim TUserRole TUserLogin TUserToken TRoleClaim Constructors | Improve this Doc View Source UserStore(TContext, IdentityErrorDescriber) Creates a new instance of the store. Declaration public UserStore(TContext context, IdentityErrorDescriber describer = null) Parameters Type Name Description TContext context The context used to access the store. Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber used to describe store errors. Properties | Improve this Doc View Source AutoSaveChanges Gets or sets a flag indicating if changes should be persisted after CreateAsync, UpdateAsync and DeleteAsync are called. Declaration public bool AutoSaveChanges { get; set; } Property Value Type Description System.Boolean True if changes should be automatically persisted, otherwise false. | Improve this Doc View Source Context Gets the database context for this store. Declaration public virtual TContext Context { get; } Property Value Type Description TContext | Improve this Doc View Source Users A navigation property for the users the store contains. Declaration public override ISelect<TUser> Users { get; } Property Value Type Description FreeSql.ISelect <TUser> Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users Methods | Improve this Doc View Source AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Adds the claims given to the specified user . Declaration public override Task AddClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the claim to. IEnumerable < System.Security.Claims.Claim > claims The claim to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<System.Security.Claims.Claim>, CancellationToken) | Improve this Doc View Source AddLoginAsync(TUser, UserLoginInfo, CancellationToken) Adds the login given to the specified user . Declaration public override Task AddLoginAsync(TUser user, UserLoginInfo login, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the login to. Microsoft.AspNetCore.Identity.UserLoginInfo login The login to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, CancellationToken) | Improve this Doc View Source AddToRoleAsync(TUser, String, CancellationToken) Adds the given normalizedRoleName to the specified user . Declaration public override async Task AddToRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the role to. System.String normalizedRoleName The role to add. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, System.String, CancellationToken) | Improve this Doc View Source AddUserTokenAsync(TUserToken) Add a new user token. Declaration protected override Task AddUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be added. Returns Type Description Task Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken) | Improve this Doc View Source CreateAsync(TUser, CancellationToken) Creates the specified user in the user store. Declaration public override async Task<IdentityResult> CreateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to create. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the creation operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken) | Improve this Doc View Source DeleteAsync(TUser, CancellationToken) Deletes the specified user from the user store. Declaration public override async Task<IdentityResult> DeleteAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to delete. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken) | Improve this Doc View Source FindByEmailAsync(String, CancellationToken) Gets the user, if any, associated with the specified, normalized email address. Declaration public override async Task<TUser> FindByEmailAsync(string normalizedEmail, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedEmail The normalized email address to return the user for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The task object containing the results of the asynchronous lookup operation, the user if any associated with the specified normalized email address. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(System.String, CancellationToken) | Improve this Doc View Source FindByIdAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified userId . Declaration public override Task<TUser> FindByIdAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user ID to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified userId if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(System.String, CancellationToken) | Improve this Doc View Source FindByLoginAsync(String, String, CancellationToken) Retrieves the user associated with the specified login provider and login provider key. Declaration public override async Task<TUser> FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description System.String loginProvider The login provider who provided the providerKey . System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The for the asynchronous operation, containing the user, if any which matched the specified login provider and key. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(System.String, System.String, CancellationToken) | Improve this Doc View Source FindByNameAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified normalized user name. Declaration public override Task<TUser> FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedUserName The normalized user name to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified normalizedUserName if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(System.String, CancellationToken) | Improve this Doc View Source FindRoleAsync(String, CancellationToken) Return a role with the normalized name if it exists. Declaration protected override Task<TRole> FindRoleAsync(string normalizedRoleName, CancellationToken cancellationToken) Parameters Type Name Description System.String normalizedRoleName The normalized role name. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TRole> The role if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(System.String, CancellationToken) | Improve this Doc View Source FindTokenAsync(TUser, String, String, CancellationToken) Find a user token if it exists. Declaration protected override Task<TUserToken> FindTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken) Parameters Type Name Description TUser user The token owner. System.String loginProvider The login provider for the token. System.String name The name of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserToken> The user token if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, System.String, System.String, CancellationToken) | Improve this Doc View Source FindUserAsync(TKey, CancellationToken) Return a user with the matching userId if it exists. Declaration protected override Task<TUser> FindUserAsync(TKey userId, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The user if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken) | Improve this Doc View Source FindUserLoginAsync(TKey, String, String, CancellationToken) Return a user login with the matching userId, provider, providerKey if it exists. Declaration protected override Task<TUserLogin> FindUserLoginAsync(TKey userId, string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, System.String, System.String, CancellationToken) | Improve this Doc View Source FindUserLoginAsync(String, String, CancellationToken) Return a user login with provider, providerKey if it exists. Declaration protected override Task<TUserLogin> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(System.String, System.String, CancellationToken) | Improve this Doc View Source FindUserRoleAsync(TKey, TKey, CancellationToken) Return a user role for the userId and roleId if it exists. Declaration protected override Task<TUserRole> FindUserRoleAsync(TKey userId, TKey roleId, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. TKey roleId The role's id. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserRole> The user role if it exists. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, CancellationToken) | Improve this Doc View Source GetClaimsAsync(TUser, CancellationToken) Get the claims associated with the specified user as an asynchronous operation. Declaration public override async Task<IList<Claim>> GetClaimsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose claims should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.Security.Claims.Claim >> A that contains the claims granted to a user. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken) | Improve this Doc View Source GetLoginsAsync(TUser, CancellationToken) Retrieves the associated logins for the specified . Declaration public override async Task<IList<UserLoginInfo>> GetLoginsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose associated logins to retrieve. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < Microsoft.AspNetCore.Identity.UserLoginInfo >> The for the asynchronous operation, containing a list of Microsoft.AspNetCore.Identity.UserLoginInfo for the specified user , if any. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken) | Improve this Doc View Source GetRolesAsync(TUser, CancellationToken) Retrieves the roles the specified user is a member of. Declaration public override async Task<IList<string>> GetRolesAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose roles should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.String >> A that contains the roles the user is a member of. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, CancellationToken) | Improve this Doc View Source GetUsersForClaimAsync(Claim, CancellationToken) Retrieves all users with the specified claim. Declaration public override async Task<IList<TUser>> GetUsersForClaimAsync(Claim claim, CancellationToken cancellationToken = null) Parameters Type Name Description System.Security.Claims.Claim claim The claim whose users should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList <TUser>> The contains a list of users, if any, that contain the specified claim. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(System.Security.Claims.Claim, CancellationToken) | Improve this Doc View Source GetUsersInRoleAsync(String, CancellationToken) Retrieves all users in the specified role. Declaration public override async Task<IList<TUser>> GetUsersInRoleAsync(string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedRoleName The role whose users should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList <TUser>> The contains a list of users, if any, that are in the specified role. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(System.String, CancellationToken) | Improve this Doc View Source IsInRoleAsync(TUser, String, CancellationToken) Returns a flag indicating if the specified user is a member of the give normalizedRoleName . Declaration public override async Task<bool> IsInRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose role membership should be checked. System.String normalizedRoleName The role to check membership of CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > A containing a flag indicating if the specified user is a member of the given group. If the user is a member of the group the returned value with be true, otherwise it will be false. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, System.String, CancellationToken) | Improve this Doc View Source RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Removes the claims given from the specified user . Declaration public override async Task RemoveClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the claims from. IEnumerable < System.Security.Claims.Claim > claims The claim to remove. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<System.Security.Claims.Claim>, CancellationToken) | Improve this Doc View Source RemoveFromRoleAsync(TUser, String, CancellationToken) Removes the given normalizedRoleName from the specified user . Declaration public override async Task RemoveFromRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the role from. System.String normalizedRoleName The role to remove. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, System.String, CancellationToken) | Improve this Doc View Source RemoveLoginAsync(TUser, String, String, CancellationToken) Removes the loginProvider given from the specified user . Declaration public override async Task RemoveLoginAsync(TUser user, string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the login from. System.String loginProvider The login to remove from the user. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, System.String, System.String, CancellationToken) | Improve this Doc View Source RemoveUserTokenAsync(TUserToken) Remove a new user token. Declaration protected override Task RemoveUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be removed. Returns Type Description Task Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken) | Improve this Doc View Source ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) Replaces the claim on the specified user , with the newClaim . Declaration public override async Task ReplaceClaimAsync(TUser user, Claim claim, Claim newClaim, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to replace the claim on. System.Security.Claims.Claim claim The claim replace. System.Security.Claims.Claim newClaim The new claim replacing the claim . CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, CancellationToken) | Improve this Doc View Source SaveChanges(CancellationToken) Saves the current store. Declaration protected Task SaveChanges(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetTokenAsync(TUser, String, String, String, CancellationToken) Sets the token value for a particular user. Declaration public override async Task SetTokenAsync(TUser user, string loginProvider, string name, string value, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user. System.String loginProvider The authentication provider for the token. System.String name The name of the token. System.String value The value of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, System.String, System.String, System.String, CancellationToken) | Improve this Doc View Source UpdateAsync(TUser, CancellationToken) Updates the specified user in the user store. Declaration public override async Task<IdentityResult> UpdateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to update. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Overrides IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken) Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect-5.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect-5.html",
    "title": "Class UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken> | FreeKit API Docs",
    "keywords": "Class UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken> Inheritance System.Object UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken> UserOnlyStore<TUser, TContext, TKey, TUserClaim, TUserLogin, TUserToken> UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public abstract class UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken> : IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey>, new() where TUserLogin : IdentityUserLogin<TKey>, new() where TUserToken : IdentityUserToken<TKey>, new() Type Parameters Name Description TUser TKey TUserClaim TUserLogin TUserToken Constructors | Improve this Doc View Source UserStoreBaseISelect(IdentityErrorDescriber) Creates a new instance. Declaration public UserStoreBaseISelect(IdentityErrorDescriber describer) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber used to describe store errors. Properties | Improve this Doc View Source ErrorDescriber Gets or sets the Microsoft.AspNetCore.Identity.IdentityErrorDescriber for any error that occurred with the current operation. Declaration public IdentityErrorDescriber ErrorDescriber { get; set; } Property Value Type Description Microsoft.AspNetCore.Identity.IdentityErrorDescriber | Improve this Doc View Source Users A navigation property for the users the store contains. Declaration public abstract ISelect<TUser> Users { get; } Property Value Type Description FreeSql.ISelect <TUser> Methods | Improve this Doc View Source AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Adds the claims given to the specified user . Declaration public abstract Task AddClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the claim to. IEnumerable < System.Security.Claims.Claim > claims The claim to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source AddLoginAsync(TUser, UserLoginInfo, CancellationToken) Adds the login given to the specified user . Declaration public abstract Task AddLoginAsync(TUser user, UserLoginInfo login, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the login to. Microsoft.AspNetCore.Identity.UserLoginInfo login The login to add to the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source AddUserTokenAsync(TUserToken) Add a new user token. Declaration protected abstract Task AddUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be added. Returns Type Description Task | Improve this Doc View Source ConvertIdFromString(String) Converts the provided id to a strongly typed key object. Declaration public virtual TKey ConvertIdFromString(string id) Parameters Type Name Description System.String id The id to convert. Returns Type Description TKey An instance of TKey representing the provided id . | Improve this Doc View Source ConvertIdToString(TKey) Converts the provided id to its string representation. Declaration public virtual string ConvertIdToString(TKey id) Parameters Type Name Description TKey id The id to convert. Returns Type Description System.String An System.String representation of the provided id . | Improve this Doc View Source CountCodesAsync(TUser, CancellationToken) Returns how many recovery code are still valid for a user. Declaration public virtual async Task<int> CountCodesAsync(TUser user, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user who owns the recovery code. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Int32 > The number of valid recovery codes for the user.. | Improve this Doc View Source CreateAsync(TUser, CancellationToken) Creates the specified user in the user store. Declaration public abstract Task<IdentityResult> CreateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to create. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the creation operation. | Improve this Doc View Source CreateUserClaim(TUser, Claim) Called to create a new instance of a Microsoft.AspNetCore.Identity.IdentityUserClaim`1 . Declaration protected virtual TUserClaim CreateUserClaim(TUser user, Claim claim) Parameters Type Name Description TUser user The associated user. System.Security.Claims.Claim claim The associated claim. Returns Type Description TUserClaim | Improve this Doc View Source CreateUserLogin(TUser, UserLoginInfo) Called to create a new instance of a Microsoft.AspNetCore.Identity.IdentityUserLogin`1 . Declaration protected virtual TUserLogin CreateUserLogin(TUser user, UserLoginInfo login) Parameters Type Name Description TUser user The associated user. Microsoft.AspNetCore.Identity.UserLoginInfo login The associated login. Returns Type Description TUserLogin | Improve this Doc View Source CreateUserToken(TUser, String, String, String) Called to create a new instance of a Microsoft.AspNetCore.Identity.IdentityUserToken`1 . Declaration protected virtual TUserToken CreateUserToken(TUser user, string loginProvider, string name, string value) Parameters Type Name Description TUser user The associated user. System.String loginProvider The associated login provider. System.String name The name of the user token. System.String value The value of the user token. Returns Type Description TUserToken | Improve this Doc View Source DeleteAsync(TUser, CancellationToken) Deletes the specified user from the user store. Declaration public abstract Task<IdentityResult> DeleteAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to delete. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. | Improve this Doc View Source Dispose() Dispose the store Declaration public void Dispose() | Improve this Doc View Source FindByEmailAsync(String, CancellationToken) Gets the user, if any, associated with the specified, normalized email address. Declaration public abstract Task<TUser> FindByEmailAsync(string normalizedEmail, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedEmail The normalized email address to return the user for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The task object containing the results of the asynchronous lookup operation, the user if any associated with the specified normalized email address. | Improve this Doc View Source FindByIdAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified userId . Declaration public abstract Task<TUser> FindByIdAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user ID to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified userId if it exists. | Improve this Doc View Source FindByLoginAsync(String, String, CancellationToken) Retrieves the user associated with the specified login provider and login provider key.. Declaration public virtual async Task<TUser> FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description System.String loginProvider The login provider who provided the providerKey . System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The for the asynchronous operation, containing the user, if any which matched the specified login provider and key. | Improve this Doc View Source FindByNameAsync(String, CancellationToken) Finds and returns a user, if any, who has the specified normalized user name. Declaration public abstract Task<TUser> FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedUserName The normalized user name to search for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The that represents the asynchronous operation, containing the user matching the specified normalizedUserName if it exists. | Improve this Doc View Source FindTokenAsync(TUser, String, String, CancellationToken) Find a user token if it exists. Declaration protected abstract Task<TUserToken> FindTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken) Parameters Type Name Description TUser user The token owner. System.String loginProvider The login provider for the token. System.String name The name of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserToken> The user token if it exists. | Improve this Doc View Source FindUserAsync(TKey, CancellationToken) Return a user with the matching userId if it exists. Declaration protected abstract Task<TUser> FindUserAsync(TKey userId, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUser> The user if it exists. | Improve this Doc View Source FindUserLoginAsync(TKey, String, String, CancellationToken) Return a user login with the matching userId, provider, providerKey if it exists. Declaration protected abstract Task<TUserLogin> FindUserLoginAsync(TKey userId, string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. | Improve this Doc View Source FindUserLoginAsync(String, String, CancellationToken) Return a user login with provider, providerKey if it exists. Declaration protected abstract Task<TUserLogin> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken) Parameters Type Name Description System.String loginProvider The login provider name. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserLogin> The user login if it exists. | Improve this Doc View Source GetAccessFailedCountAsync(TUser, CancellationToken) Retrieves the current failed access count for the specified user .. Declaration public virtual Task<int> GetAccessFailedCountAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose failed access count should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Int32 > The that represents the asynchronous operation, containing the failed access count. | Improve this Doc View Source GetAuthenticatorKeyAsync(TUser, CancellationToken) Get the authenticator key for the specified user . Declaration public virtual Task<string> GetAuthenticatorKeyAsync(TUser user, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user whose security stamp should be set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the security stamp for the specified user . | Improve this Doc View Source GetClaimsAsync(TUser, CancellationToken) Get the claims associated with the specified user as an asynchronous operation. Declaration public abstract Task<IList<Claim>> GetClaimsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose claims should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.Security.Claims.Claim >> A that contains the claims granted to a user. | Improve this Doc View Source GetEmailAsync(TUser, CancellationToken) Gets the email address for the specified user . Declaration public virtual Task<string> GetEmailAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email should be returned. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The task object containing the results of the asynchronous operation, the email address for the specified user . | Improve this Doc View Source GetEmailConfirmedAsync(TUser, CancellationToken) Gets a flag indicating whether the email address for the specified user has been verified, true if the email address is verified otherwise false. Declaration public virtual Task<bool> GetEmailConfirmedAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email confirmation status should be returned. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > The task object containing the results of the asynchronous operation, a flag indicating whether the email address for the specified user has been confirmed or not. | Improve this Doc View Source GetLockoutEnabledAsync(TUser, CancellationToken) Retrieves a flag indicating whether user lockout can enabled for the specified user. Declaration public virtual Task<bool> GetLockoutEnabledAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose ability to be locked out should be returned. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > The that represents the asynchronous operation, true if a user can be locked out, otherwise false. | Improve this Doc View Source GetLockoutEndDateAsync(TUser, CancellationToken) Gets the last a user's last lockout expired, if any. Any time in the past should be indicates a user is not locked out. Declaration public virtual Task<DateTimeOffset?> GetLockoutEndDateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose lockout date should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Nullable < DateTimeOffset >> A that represents the result of the asynchronous query, a containing the last time a user's lockout expired, if any. | Improve this Doc View Source GetLoginsAsync(TUser, CancellationToken) Retrieves the associated logins for the specified user . Declaration public abstract Task<IList<UserLoginInfo>> GetLoginsAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose associated logins to retrieve. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < Microsoft.AspNetCore.Identity.UserLoginInfo >> The for the asynchronous operation, containing a list of Microsoft.AspNetCore.Identity.UserLoginInfo for the specified user , if any. | Improve this Doc View Source GetNormalizedEmailAsync(TUser, CancellationToken) Returns the normalized email for the specified user . Declaration public virtual Task<string> GetNormalizedEmailAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email address to retrieve. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The task object containing the results of the asynchronous lookup operation, the normalized email address if any associated with the specified user. | Improve this Doc View Source GetNormalizedUserNameAsync(TUser, CancellationToken) Gets the normalized user name for the specified user . Declaration public virtual Task<string> GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose normalized name should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the normalized user name for the specified user . | Improve this Doc View Source GetPasswordHashAsync(TUser, CancellationToken) Gets the password hash for a user. Declaration public virtual Task<string> GetPasswordHashAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to retrieve the password hash for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > A that contains the password hash for the user. | Improve this Doc View Source GetPhoneNumberAsync(TUser, CancellationToken) Gets the telephone number, if any, for the specified user . Declaration public virtual Task<string> GetPhoneNumberAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose telephone number should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the user's telephone number, if any. | Improve this Doc View Source GetPhoneNumberConfirmedAsync(TUser, CancellationToken) Gets a flag indicating whether the specified user 's telephone number has been confirmed. Declaration public virtual Task<bool> GetPhoneNumberConfirmedAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to return a flag for, indicating whether their telephone number is confirmed. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > The that represents the asynchronous operation, returning true if the specified user has a confirmed telephone number otherwise false. | Improve this Doc View Source GetSecurityStampAsync(TUser, CancellationToken) Get the security stamp for the specified user . Declaration public virtual Task<string> GetSecurityStampAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose security stamp should be set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the security stamp for the specified user . | Improve this Doc View Source GetTokenAsync(TUser, String, String, CancellationToken) Returns the token value. Declaration public virtual async Task<string> GetTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user. System.String loginProvider The authentication provider for the token. System.String name The name of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation. | Improve this Doc View Source GetTwoFactorEnabledAsync(TUser, CancellationToken) Returns a flag indicating whether the specified user has two factor authentication enabled or not, as an asynchronous operation. Declaration public virtual Task<bool> GetTwoFactorEnabledAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose two factor authentication enabled status should be set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > The that represents the asynchronous operation, containing a flag indicating whether the specified user has two factor authentication enabled or not. | Improve this Doc View Source GetUserIdAsync(TUser, CancellationToken) Gets the user identifier for the specified user . Declaration public virtual Task<string> GetUserIdAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose identifier should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the identifier for the specified user . | Improve this Doc View Source GetUserNameAsync(TUser, CancellationToken) Gets the user name for the specified user . Declaration public virtual Task<string> GetUserNameAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose name should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.String > The that represents the asynchronous operation, containing the name for the specified user . | Improve this Doc View Source GetUsersForClaimAsync(Claim, CancellationToken) Retrieves all users with the specified claim. Declaration public abstract Task<IList<TUser>> GetUsersForClaimAsync(Claim claim, CancellationToken cancellationToken = null) Parameters Type Name Description System.Security.Claims.Claim claim The claim whose users should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList <TUser>> The contains a list of users, if any, that contain the specified claim. | Improve this Doc View Source HasPasswordAsync(TUser, CancellationToken) Returns a flag indicating if the specified user has a password. Declaration public virtual Task<bool> HasPasswordAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to retrieve the password hash for. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > A containing a flag indicating if the specified user has a password. If the user has a password the returned value with be true, otherwise it will be false. | Improve this Doc View Source IncrementAccessFailedCountAsync(TUser, CancellationToken) Records that a failed access has occurred, incrementing the failed access count. Declaration public virtual Task<int> IncrementAccessFailedCountAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose cancellation count should be incremented. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Int32 > The that represents the asynchronous operation, containing the incremented failed access count. | Improve this Doc View Source RedeemCodeAsync(TUser, String, CancellationToken) Returns whether a recovery code is valid for a user. Note: recovery codes are only valid once, and will be invalid after use. Declaration public virtual async Task<bool> RedeemCodeAsync(TUser user, string code, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user who owns the recovery code. System.String code The recovery code to use. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > True if the recovery code was found for the user. | Improve this Doc View Source RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) Removes the claims given from the specified user . Declaration public abstract Task RemoveClaimsAsync(TUser user, IEnumerable<Claim> claims, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the claims from. IEnumerable < System.Security.Claims.Claim > claims The claim to remove. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source RemoveLoginAsync(TUser, String, String, CancellationToken) Removes the loginProvider given from the specified user . Declaration public abstract Task RemoveLoginAsync(TUser user, string loginProvider, string providerKey, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the login from. System.String loginProvider The login to remove from the user. System.String providerKey The key provided by the loginProvider to identify a user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source RemoveTokenAsync(TUser, String, String, CancellationToken) Deletes a token for a user. Declaration public virtual async Task RemoveTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user. System.String loginProvider The authentication provider for the token. System.String name The name of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source RemoveUserTokenAsync(TUserToken) Remove a new user token. Declaration protected abstract Task RemoveUserTokenAsync(TUserToken token) Parameters Type Name Description TUserToken token The token to be removed. Returns Type Description Task | Improve this Doc View Source ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) Replaces the claim on the specified user , with the newClaim . Declaration public abstract Task ReplaceClaimAsync(TUser user, Claim claim, Claim newClaim, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to replace the claim on. System.Security.Claims.Claim claim The claim replace. System.Security.Claims.Claim newClaim The new claim replacing the claim . CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) Updates the recovery codes for the user while invalidating any previous recovery codes. Declaration public virtual Task ReplaceCodesAsync(TUser user, IEnumerable<string> recoveryCodes, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user to store new recovery codes for. IEnumerable < System.String > recoveryCodes The new recovery codes for the user. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The new recovery codes for the user. | Improve this Doc View Source ResetAccessFailedCountAsync(TUser, CancellationToken) Resets a user's failed access count. Declaration public virtual Task ResetAccessFailedCountAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose failed access count should be reset. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Remarks This is typically called after the account is successfully accessed. | Improve this Doc View Source SetAuthenticatorKeyAsync(TUser, String, CancellationToken) Sets the authenticator key for the specified user . Declaration public virtual Task SetAuthenticatorKeyAsync(TUser user, string key, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user whose authenticator key should be set. System.String key The authenticator key to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetEmailAsync(TUser, String, CancellationToken) Sets the email address for a user . Declaration public virtual Task SetEmailAsync(TUser user, string email, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email should be set. System.String email The email to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The task object representing the asynchronous operation. | Improve this Doc View Source SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) Sets the flag indicating whether the specified user 's email address has been confirmed or not. Declaration public virtual Task SetEmailConfirmedAsync(TUser user, bool confirmed, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email confirmation status should be set. System.Boolean confirmed A flag indicating if the email address has been confirmed, true if the address is confirmed otherwise false. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The task object representing the asynchronous operation. | Improve this Doc View Source SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) Set the flag indicating if the specified user can be locked out.. Declaration public virtual Task SetLockoutEnabledAsync(TUser user, bool enabled, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose ability to be locked out should be set. System.Boolean enabled A flag indicating if lock out can be enabled for the specified user . CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) Locks out a user until the specified end date has passed. Setting a end date in the past immediately unlocks a user. Declaration public virtual Task SetLockoutEndDateAsync(TUser user, DateTimeOffset? lockoutEnd, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose lockout date should be set. System.Nullable < DateTimeOffset > lockoutEnd The after which the user 's lockout should end. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetNormalizedEmailAsync(TUser, String, CancellationToken) Sets the normalized email for the specified user . Declaration public virtual Task SetNormalizedEmailAsync(TUser user, string normalizedEmail, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose email address to set. System.String normalizedEmail The normalized email to set for the specified user . CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The task object representing the asynchronous operation. | Improve this Doc View Source SetNormalizedUserNameAsync(TUser, String, CancellationToken) Sets the given normalized name for the specified user . Declaration public virtual Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose name should be set. System.String normalizedName The normalized name to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetPasswordHashAsync(TUser, String, CancellationToken) Sets the password hash for a user. Declaration public virtual Task SetPasswordHashAsync(TUser user, string passwordHash, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to set the password hash for. System.String passwordHash The password hash to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetPhoneNumberAsync(TUser, String, CancellationToken) Sets the telephone number for the specified user . Declaration public virtual Task SetPhoneNumberAsync(TUser user, string phoneNumber, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose telephone number should be set. System.String phoneNumber The telephone number to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) Sets a flag indicating if the specified user 's phone number has been confirmed.. Declaration public virtual Task SetPhoneNumberConfirmedAsync(TUser user, bool confirmed, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose telephone number confirmation status should be set. System.Boolean confirmed A flag indicating whether the user's telephone number has been confirmed. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetSecurityStampAsync(TUser, String, CancellationToken) Sets the provided security stamp for the specified user . Declaration public virtual Task SetSecurityStampAsync(TUser user, string stamp, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose security stamp should be set. System.String stamp The security stamp to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetTokenAsync(TUser, String, String, String, CancellationToken) Sets the token value for a particular user. Declaration public abstract Task SetTokenAsync(TUser user, string loginProvider, string name, string value, CancellationToken cancellationToken) Parameters Type Name Description TUser user The user. System.String loginProvider The authentication provider for the token. System.String name The name of the token. System.String value The value of the token. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) Sets a flag indicating whether the specified user has two factor authentication enabled or not, as an asynchronous operation. Declaration public virtual Task SetTwoFactorEnabledAsync(TUser user, bool enabled, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose two factor authentication enabled status should be set. System.Boolean enabled A flag indicating whether the specified user has two factor authentication enabled. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source SetUserNameAsync(TUser, String, CancellationToken) Sets the given userName for the specified user . Declaration public virtual Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose name should be set. System.String userName The user name to set. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source ThrowIfDisposed() Throws if this class has been disposed. Declaration protected void ThrowIfDisposed() | Improve this Doc View Source UpdateAsync(TUser, CancellationToken) Updates the specified user in the user store. Declaration public abstract Task<IdentityResult> UpdateAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to update. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < Microsoft.AspNetCore.Identity.IdentityResult > The that represents the asynchronous operation, containing the Microsoft.AspNetCore.Identity.IdentityResult of the update operation. Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect-8.html": {
    "href": "api/IGeekFan.AspNetCore.Identity.FreeSql.UserStoreBaseISelect-8.html",
    "title": "Class UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> | FreeKit API Docs",
    "keywords": "Class UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> Inheritance System.Object UserStoreBaseISelect <TUser, TKey, TUserClaim, TUserLogin, TUserToken> UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> Implements Microsoft.AspNetCore.Identity.IUserLoginStore <TUser> Microsoft.AspNetCore.Identity.IUserClaimStore <TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore <TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore <TUser> Microsoft.AspNetCore.Identity.IUserEmailStore <TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore <TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore <TUser> ISelectUserStore <TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore <TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore <TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore <TUser> Microsoft.AspNetCore.Identity.IUserRoleStore <TUser> Microsoft.AspNetCore.Identity.IUserStore <TUser> System.IDisposable Inherited Members UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ErrorDescriber UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim(TUser, Claim) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin(TUser, UserLoginInfo) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken(TUser, String, String, String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString(String) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString(TKey) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose() UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(Claim, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, String, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync(TUser, String, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync(TUser, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken) UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync(TUser, String, CancellationToken) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.AspNetCore.Identity.FreeSql Assembly : IGeekFan.AspNetCore.Identity.FreeSql.dll Syntax public abstract class UserStoreBaseISelect<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim> : UserStoreBaseISelect<TUser, TKey, TUserClaim, TUserLogin, TUserToken>, IUserLoginStore<TUser>, IUserClaimStore<TUser>, IUserPasswordStore<TUser>, IUserSecurityStampStore<TUser>, IUserEmailStore<TUser>, IUserLockoutStore<TUser>, IUserPhoneNumberStore<TUser>, ISelectUserStore<TUser>, IUserTwoFactorStore<TUser>, IUserAuthenticationTokenStore<TUser>, IUserAuthenticatorKeyStore<TUser>, IUserTwoFactorRecoveryCodeStore<TUser>, IUserRoleStore<TUser>, IUserStore<TUser>, IDisposable where TUser : IdentityUser<TKey> where TRole : IdentityRole<TKey> where TKey : IEquatable<TKey> where TUserClaim : IdentityUserClaim<TKey>, new() where TUserRole : IdentityUserRole<TKey>, new() where TUserLogin : IdentityUserLogin<TKey>, new() where TUserToken : IdentityUserToken<TKey>, new() where TRoleClaim : IdentityRoleClaim<TKey>, new() Type Parameters Name Description TUser TRole TKey TUserClaim TUserRole TUserLogin TUserToken TRoleClaim Constructors | Improve this Doc View Source UserStoreBaseISelect(IdentityErrorDescriber) Creates a new instance. Declaration public UserStoreBaseISelect(IdentityErrorDescriber describer) Parameters Type Name Description Microsoft.AspNetCore.Identity.IdentityErrorDescriber describer The Microsoft.AspNetCore.Identity.IdentityErrorDescriber used to describe store errors. Methods | Improve this Doc View Source AddToRoleAsync(TUser, String, CancellationToken) Adds the given normalizedRoleName to the specified user . Declaration public abstract Task AddToRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to add the role to. System.String normalizedRoleName The role to add. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. | Improve this Doc View Source CreateUserRole(TUser, TRole) Called to create a new instance of a Microsoft.AspNetCore.Identity.IdentityUserRole`1 . Declaration protected virtual TUserRole CreateUserRole(TUser user, TRole role) Parameters Type Name Description TUser user The associated user. TRole role The associated role. Returns Type Description TUserRole | Improve this Doc View Source FindRoleAsync(String, CancellationToken) Return a role with the normalized name if it exists. Declaration protected abstract Task<TRole> FindRoleAsync(string normalizedRoleName, CancellationToken cancellationToken) Parameters Type Name Description System.String normalizedRoleName The normalized role name. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TRole> The role if it exists. | Improve this Doc View Source FindUserRoleAsync(TKey, TKey, CancellationToken) Return a user role for the userId and roleId if it exists. Declaration protected abstract Task<TUserRole> FindUserRoleAsync(TKey userId, TKey roleId, CancellationToken cancellationToken) Parameters Type Name Description TKey userId The user's id. TKey roleId The role's id. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task <TUserRole> The user role if it exists. | Improve this Doc View Source GetRolesAsync(TUser, CancellationToken) Retrieves the roles the specified user is a member of. Declaration public abstract Task<IList<string>> GetRolesAsync(TUser user, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose roles should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList < System.String >> A that contains the roles the user is a member of. | Improve this Doc View Source GetUsersInRoleAsync(String, CancellationToken) Retrieves all users in the specified role. Declaration public abstract Task<IList<TUser>> GetUsersInRoleAsync(string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String normalizedRoleName The role whose users should be retrieved. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < IList <TUser>> The contains a list of users, if any, that are in the specified role. | Improve this Doc View Source IsInRoleAsync(TUser, String, CancellationToken) Returns a flag indicating if the specified user is a member of the give normalizedRoleName . Declaration public abstract Task<bool> IsInRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user whose role membership should be checked. System.String normalizedRoleName The role to check membership of CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task < System.Boolean > A containing a flag indicating if the specified user is a member of the given group. If the user is a member of the group the returned value with be true, otherwise it will be false. | Improve this Doc View Source RemoveFromRoleAsync(TUser, String, CancellationToken) Removes the given normalizedRoleName from the specified user . Declaration public abstract Task RemoveFromRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken = null) Parameters Type Name Description TUser user The user to remove the role from. System.String normalizedRoleName The role to remove. CancellationToken cancellationToken The used to propagate notifications that the operation should be canceled. Returns Type Description Task The that represents the asynchronous operation. Implements Microsoft.AspNetCore.Identity.IUserLoginStore<TUser> Microsoft.AspNetCore.Identity.IUserClaimStore<TUser> Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser> Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser> Microsoft.AspNetCore.Identity.IUserEmailStore<TUser> Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser> Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser> ISelectUserStore<TUser> IDisposable Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser> Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser> Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser> Microsoft.AspNetCore.Identity.IUserRoleStore<TUser> Microsoft.AspNetCore.Identity.IUserStore<TUser> System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Email.EmailSender.html": {
    "href": "api/IGeekFan.FreeKit.Email.EmailSender.html",
    "title": "Class EmailSender | FreeKit API Docs",
    "keywords": "Class EmailSender Inheritance System.Object EmailSender Implements IEmailSender Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Email Assembly : IGeekFan.FreeKit.Email.dll Syntax public class EmailSender : IEmailSender Constructors | Improve this Doc View Source EmailSender(IOptionsMonitor<MailKitOptions>) Declaration public EmailSender(IOptionsMonitor<MailKitOptions> options) Parameters Type Name Description Microsoft.Extensions.Options.IOptionsMonitor < MailKitOptions > options Methods | Improve this Doc View Source Send(MimeMessage) Declaration public void Send(MimeMessage message) Parameters Type Name Description MimeKit.MimeMessage message | Improve this Doc View Source SendAsync(MimeMessage, CancellationToken) Declaration public async Task SendAsync(MimeMessage message, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeKit.MimeMessage message System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task Implements IEmailSender"
  },
  "api/IGeekFan.FreeKit.Email.EmailSenderDependencyInjection.html": {
    "href": "api/IGeekFan.FreeKit.Email.EmailSenderDependencyInjection.html",
    "title": "Class EmailSenderDependencyInjection | FreeKit API Docs",
    "keywords": "Class EmailSenderDependencyInjection Inheritance System.Object EmailSenderDependencyInjection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Email Assembly : IGeekFan.FreeKit.Email.dll Syntax public static class EmailSenderDependencyInjection Methods | Improve this Doc View Source AddEmailSender(IServiceCollection, IConfiguration) 配置Email服务 Declaration public static IServiceCollection AddEmailSender(this IServiceCollection services, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Microsoft.Extensions.Configuration.IConfiguration configuration Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddEmailSender(IServiceCollection, Action<MailKitOptions>) Declaration public static IServiceCollection AddEmailSender(this IServiceCollection services, Action<MailKitOptions> configureOptions) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Action < MailKitOptions > configureOptions Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection"
  },
  "api/IGeekFan.FreeKit.Email.html": {
    "href": "api/IGeekFan.FreeKit.Email.html",
    "title": "Namespace IGeekFan.FreeKit.Email | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Email Classes EmailSender EmailSenderDependencyInjection MailKitOptions 邮件配置项 Interfaces IEmailSender"
  },
  "api/IGeekFan.FreeKit.Email.IEmailSender.html": {
    "href": "api/IGeekFan.FreeKit.Email.IEmailSender.html",
    "title": "Interface IEmailSender | FreeKit API Docs",
    "keywords": "Interface IEmailSender Namespace : IGeekFan.FreeKit.Email Assembly : IGeekFan.FreeKit.Email.dll Syntax public interface IEmailSender Methods | Improve this Doc View Source Send(MimeMessage) Send an Email. Declaration void Send(MimeMessage message) Parameters Type Name Description MimeKit.MimeMessage message | Improve this Doc View Source SendAsync(MimeMessage, CancellationToken) Sends an Email. Declaration Task SendAsync(MimeMessage message, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeKit.MimeMessage message Mail to be sent System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "api/IGeekFan.FreeKit.Email.MailKitOptions.html": {
    "href": "api/IGeekFan.FreeKit.Email.MailKitOptions.html",
    "title": "Class MailKitOptions | FreeKit API Docs",
    "keywords": "Class MailKitOptions 邮件配置项 Inheritance System.Object MailKitOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Email Assembly : IGeekFan.FreeKit.Email.dll Syntax public class MailKitOptions Properties | Improve this Doc View Source DisplayName 发送用户显示名称 send user display name Declaration public string DisplayName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Domain 要登录SMTP服务器的域名 Domain name to login to SMTP server. Declaration public string Domain { get; set; } Property Value Type Description System.String | Improve this Doc View Source EnableSsl 是否启用ssl，默认值为false enable ssl,default is false Declaration public bool EnableSsl { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Host SMTP主机服务器地址 SMTP Host Server address Declaration public string Host { get; set; } Property Value Type Description System.String | Improve this Doc View Source Password 发件人授权密码 send user password Declaration public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source Port SMTP主机服务器端口，默认值为25 SMTP Host Server Port ,default is 25 Declaration public int Port { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UserName 发件人邮件 send user name Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.CreateAuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.CreateAuditEntity.html",
    "title": "Class CreateAuditEntity | FreeKit API Docs",
    "keywords": "Class CreateAuditEntity Inheritance System.Object Entity < Guid > CreateAuditEntity < Guid , Guid > CreateAuditEntity Implements IEntity < Guid > ICreateAuditEntity < Guid > ICreateAuditEntity ICreateAuditEntity < Guid > Inherited Members CreateAuditEntity<Guid, Guid>.CreateUserId CreateAuditEntity<Guid, Guid>.CreateUserName CreateAuditEntity<Guid, Guid>.CreateTime Entity<Guid>.Id Entity<Guid>.GetKeys() Entity<Guid>.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CreateAuditEntity : CreateAuditEntity<Guid, Guid>, IEntity<Guid>, ICreateAuditEntity<Guid>, ICreateAuditEntity, ICreateAuditEntity<Guid> Implements IEntity<T> ICreateAuditEntity<T> ICreateAuditEntity ICreateAuditEntity<T>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.CreateAuditEntity-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.CreateAuditEntity-2.html",
    "title": "Class CreateAuditEntity<TKey, TUKey> | FreeKit API Docs",
    "keywords": "Class CreateAuditEntity<TKey, TUKey> 审计信息-新增 Inheritance System.Object Entity <TKey> CreateAuditEntity<TKey, TUKey> CreateAuditEntity Implements IEntity <TKey> ICreateAuditEntity <TUKey> Inherited Members Entity<TKey>.Id Entity<TKey>.GetKeys() Entity<TKey>.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CreateAuditEntity<TKey, TUKey> : Entity<TKey>, IEntity<TKey>, ICreateAuditEntity<TUKey> where TKey : IEquatable<TKey> where TUKey : struct, IEquatable<TUKey> Type Parameters Name Description TKey 主键类型 TUKey 用户表类型 Properties | Improve this Doc View Source CreateTime 创建时间 Declaration public virtual DateTime CreateTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source CreateUserId 创建者ID Declaration public virtual TUKey? CreateUserId { get; set; } Property Value Type Description System.Nullable <TUKey> | Improve this Doc View Source CreateUserName 创建人 Declaration public virtual string CreateUserName { get; set; } Property Value Type Description System.String Implements IEntity<T> ICreateAuditEntity<T>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.Entity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.Entity.html",
    "title": "Class Entity | FreeKit API Docs",
    "keywords": "Class Entity Inheritance System.Object Entity < Guid > Entity Implements IEntity < Guid > Inherited Members Entity<Guid>.Id Entity<Guid>.GetKeys() Entity<Guid>.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public abstract class Entity : Entity<Guid>, IEntity<Guid> Implements IEntity<T>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.Entity-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.Entity-1.html",
    "title": "Class Entity<T> | FreeKit API Docs",
    "keywords": "Class Entity<T> Inheritance System.Object Entity<T> CreateAuditEntity<TKey, TUKey> Entity FullAuditEntity<T, U> Implements IEntity <T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public abstract class Entity<T> : IEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties | Improve this Doc View Source Id 主键Id Declaration [Column(IsPrimary = true, IsIdentity = true, Position = (short)1)] public virtual T Id { get; set; } Property Value Type Description T Methods | Improve this Doc View Source GetKeys() Declaration public virtual object[] GetKeys() Returns Type Description System.Object [] | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements IEntity<T>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.EntityDto.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.EntityDto.html",
    "title": "Class EntityDto | FreeKit API Docs",
    "keywords": "Class EntityDto Inheritance System.Object EntityDto < Guid > EntityDto Implements IEntityDto < Guid > IEntityDto Inherited Members EntityDto<Guid>.Id System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public abstract class EntityDto : EntityDto<Guid>, IEntityDto<Guid>, IEntityDto Implements IEntityDto<TKey> IEntityDto"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.EntityDto-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.EntityDto-1.html",
    "title": "Class EntityDto<TKey> | FreeKit API Docs",
    "keywords": "Class EntityDto<TKey> Inheritance System.Object EntityDto<TKey> EntityDto Implements IEntityDto <TKey> IEntityDto Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public abstract class EntityDto<TKey> : IEntityDto<TKey>, IEntityDto where TKey : IEquatable<TKey> Type Parameters Name Description TKey Properties | Improve this Doc View Source Id 主键Id Declaration public TKey Id { get; set; } Property Value Type Description TKey Implements IEntityDto<TKey> IEntityDto"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.FullAuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.FullAuditEntity.html",
    "title": "Class FullAuditEntity | FreeKit API Docs",
    "keywords": "Class FullAuditEntity Inheritance System.Object Entity < Guid > FullAuditEntity < Guid , Guid > FullAuditEntity Implements IFullAuditEntity < Guid , Guid > IEntity < Guid > ICreateAuditEntity < Guid > IUpdateAuditEntity < Guid > IDeleteAuditEntity < Guid > ISoftDelete Inherited Members FullAuditEntity<Guid, Guid>.CreateUserId FullAuditEntity<Guid, Guid>.CreateUserName FullAuditEntity<Guid, Guid>.CreateTime FullAuditEntity<Guid, Guid>.UpdateUserId FullAuditEntity<Guid, Guid>.UpdateUserName FullAuditEntity<Guid, Guid>.UpdateTime FullAuditEntity<Guid, Guid>.DeleteUserId FullAuditEntity<Guid, Guid>.DeleteUserName FullAuditEntity<Guid, Guid>.DeleteTime FullAuditEntity<Guid, Guid>.IsDeleted Entity<Guid>.Id Entity<Guid>.GetKeys() Entity<Guid>.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class FullAuditEntity : FullAuditEntity<Guid, Guid>, IFullAuditEntity<Guid, Guid>, IEntity<Guid>, ICreateAuditEntity<Guid>, IUpdateAuditEntity<Guid>, IDeleteAuditEntity<Guid>, ISoftDelete Implements IFullAuditEntity<TKey, UKey> IEntity<T> ICreateAuditEntity<T> IUpdateAuditEntity<T> IDeleteAuditEntity<T> ISoftDelete"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.FullAuditEntity-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.FullAuditEntity-2.html",
    "title": "Class FullAuditEntity<T, U> | FreeKit API Docs",
    "keywords": "Class FullAuditEntity<T, U> 包含审计实体基类,包含 创建、修改、删除加主键等10个字段，其实T为当前主键类型，U为用户表主键类型 Inheritance System.Object Entity <T> FullAuditEntity<T, U> FullAuditEntity Implements IEntity <T> ICreateAuditEntity <U> IUpdateAuditEntity <U> IDeleteAuditEntity <U> ISoftDelete Inherited Members Entity<T>.Id Entity<T>.GetKeys() Entity<T>.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class FullAuditEntity<T, U> : Entity<T>, IEntity<T>, ICreateAuditEntity<U>, IUpdateAuditEntity<U>, IDeleteAuditEntity<U>, ISoftDelete where T : IEquatable<T> where U : struct, IEquatable<U> Type Parameters Name Description T 当前主键类型 U 用户表主键类型 Properties | Improve this Doc View Source CreateTime 创建时间 Declaration [Column(Position = (short)-4)] public virtual DateTime CreateTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source CreateUserId 创建者ID Declaration [Column(Position = (short)-4)] public virtual U? CreateUserId { get; set; } Property Value Type Description System.Nullable <U> | Improve this Doc View Source CreateUserName 创建人 Declaration [Column(Position = (short)-4)] public virtual string CreateUserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DeleteTime 删除时间 Declaration [Column(Position = (short)-2)] public virtual DateTime? DeleteTime { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DeleteUserId 删除人id Declaration [Column(Position = (short)-2)] public virtual U? DeleteUserId { get; set; } Property Value Type Description System.Nullable <U> | Improve this Doc View Source DeleteUserName 删除人 Declaration [Column(Position = (short)-2)] public virtual string DeleteUserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsDeleted 是否删除 Declaration [Column(Position = (short)-1)] public virtual bool IsDeleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UpdateTime 修改时间 Declaration [Column(Position = (short)-3)] public virtual DateTime? UpdateTime { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source UpdateUserId 最后修改人Id Declaration [Column(Position = (short)-3)] public virtual U? UpdateUserId { get; set; } Property Value Type Description System.Nullable <U> | Improve this Doc View Source UpdateUserName 修改人 Declaration [Column(Position = (short)-3)] public virtual string UpdateUserName { get; set; } Property Value Type Description System.String Implements IEntity<T> ICreateAuditEntity<T> IUpdateAuditEntity<T> IDeleteAuditEntity<T> ISoftDelete"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.AuditEntity | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.AuditEntity Classes CreateAuditEntity CreateAuditEntity<TKey, TUKey> 审计信息-新增 Entity Entity<T> EntityDto EntityDto<TKey> FullAuditEntity FullAuditEntity<T, U> 包含审计实体基类,包含 创建、修改、删除加主键等10个字段，其实T为当前主键类型，U为用户表主键类型 Interfaces ICreateAuditEntity 使用此接口可存储创建者信息（创建者id，创建人，创建时间） ICreateAuditEntity<T> 参考 ICreateAuditEntity IDeleteAuditEntity 使用此接口可存储删除信息（删除人id，删除人，删除时间） IDeleteAuditEntity<T> 参考 IDeleteAuditEntity IEntity IEntity<T> IEntityDto IEntityDto<TKey> IFullAuditEntity<TKey, UKey> ISoftDelete 软删除标志 ITenant 多租户 IUpdateAuditEntity 使用此接口可存储最后更新信息（最后修改人Id，修改人，修改时间） IUpdateAuditEntity<T> 参考 IUpdateAuditEntity"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.ICreateAuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.ICreateAuditEntity.html",
    "title": "Interface ICreateAuditEntity | FreeKit API Docs",
    "keywords": "Interface ICreateAuditEntity 使用此接口可存储创建者信息（创建者id，创建人，创建时间） Inherited Members ICreateAuditEntity<Guid>.CreateUserId ICreateAuditEntity<Guid>.CreateUserName ICreateAuditEntity<Guid>.CreateTime Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface ICreateAuditEntity : ICreateAuditEntity<Guid>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.ICreateAuditEntity-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.ICreateAuditEntity-1.html",
    "title": "Interface ICreateAuditEntity<T> | FreeKit API Docs",
    "keywords": "Interface ICreateAuditEntity<T> 参考 ICreateAuditEntity Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface ICreateAuditEntity<T> where T : struct, IEquatable<T> Type Parameters Name Description T 用户表主键 Properties | Improve this Doc View Source CreateTime 创建时间 Declaration DateTime CreateTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source CreateUserId 创建者ID Declaration T? CreateUserId { get; set; } Property Value Type Description System.Nullable <T> | Improve this Doc View Source CreateUserName 创建人 Declaration string CreateUserName { get; set; } Property Value Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IDeleteAuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IDeleteAuditEntity.html",
    "title": "Interface IDeleteAuditEntity | FreeKit API Docs",
    "keywords": "Interface IDeleteAuditEntity 使用此接口可存储删除信息（删除人id，删除人，删除时间） Inherited Members IDeleteAuditEntity<Guid>.DeleteUserId IDeleteAuditEntity<Guid>.DeleteUserName IDeleteAuditEntity<Guid>.DeleteTime ISoftDelete.IsDeleted Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IDeleteAuditEntity : IDeleteAuditEntity<Guid>, ISoftDelete"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IDeleteAuditEntity-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IDeleteAuditEntity-1.html",
    "title": "Interface IDeleteAuditEntity<T> | FreeKit API Docs",
    "keywords": "Interface IDeleteAuditEntity<T> 参考 IDeleteAuditEntity Inherited Members ISoftDelete.IsDeleted Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IDeleteAuditEntity<T> : ISoftDelete where T : struct, IEquatable<T> Type Parameters Name Description T 用户表主键 Properties | Improve this Doc View Source DeleteTime 删除时间 Declaration DateTime? DeleteTime { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DeleteUserId 删除人id Declaration T? DeleteUserId { get; set; } Property Value Type Description System.Nullable <T> | Improve this Doc View Source DeleteUserName 删除人 Declaration string DeleteUserName { get; set; } Property Value Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntity.html",
    "title": "Interface IEntity | FreeKit API Docs",
    "keywords": "Interface IEntity Inherited Members IEntity<Guid>.Id IEntity<Guid>.GetKeys() Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IEntity : IEntity<Guid>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntity-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntity-1.html",
    "title": "Interface IEntity<T> | FreeKit API Docs",
    "keywords": "Interface IEntity<T> Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IEntity<T> where T : IEquatable<T> Type Parameters Name Description T Properties | Improve this Doc View Source Id 主键Id Declaration T Id { get; set; } Property Value Type Description T Methods | Improve this Doc View Source GetKeys() Returns an array of ordered keys for this entity. Declaration object[] GetKeys() Returns Type Description System.Object []"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntityDto.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntityDto.html",
    "title": "Interface IEntityDto | FreeKit API Docs",
    "keywords": "Interface IEntityDto Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IEntityDto"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntityDto-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IEntityDto-1.html",
    "title": "Interface IEntityDto<TKey> | FreeKit API Docs",
    "keywords": "Interface IEntityDto<TKey> Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IEntityDto<TKey> : IEntityDto where TKey : IEquatable<TKey> Type Parameters Name Description TKey Properties | Improve this Doc View Source Id 主键Id Declaration TKey Id { get; set; } Property Value Type Description TKey"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IFullAuditEntity-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IFullAuditEntity-2.html",
    "title": "Interface IFullAuditEntity<TKey, UKey> | FreeKit API Docs",
    "keywords": "Interface IFullAuditEntity<TKey, UKey> Inherited Members IEntity<TKey>.Id IEntity<TKey>.GetKeys() ICreateAuditEntity<UKey>.CreateUserId ICreateAuditEntity<UKey>.CreateUserName ICreateAuditEntity<UKey>.CreateTime IUpdateAuditEntity<UKey>.UpdateUserId IUpdateAuditEntity<UKey>.UpdateUserName IUpdateAuditEntity<UKey>.UpdateTime IDeleteAuditEntity<UKey>.DeleteUserId IDeleteAuditEntity<UKey>.DeleteUserName IDeleteAuditEntity<UKey>.DeleteTime ISoftDelete.IsDeleted Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IFullAuditEntity<TKey, UKey> : IEntity<TKey>, ICreateAuditEntity<UKey>, IUpdateAuditEntity<UKey>, IDeleteAuditEntity<UKey>, ISoftDelete where TKey : IEquatable<TKey> where UKey : struct, IEquatable<UKey> Type Parameters Name Description TKey 当前表主键类型 UKey 用户表id类型"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.ISoftDelete.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.ISoftDelete.html",
    "title": "Interface ISoftDelete | FreeKit API Docs",
    "keywords": "Interface ISoftDelete 软删除标志 Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface ISoftDelete Properties | Improve this Doc View Source IsDeleted 是否删除 Declaration bool IsDeleted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.ITenant.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.ITenant.html",
    "title": "Interface ITenant | FreeKit API Docs",
    "keywords": "Interface ITenant 多租户 Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface ITenant Properties | Improve this Doc View Source TenantId 租户的Id Declaration Guid? TenantId { get; set; } Property Value Type Description System.Nullable < Guid >"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IUpdateAuditEntity.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IUpdateAuditEntity.html",
    "title": "Interface IUpdateAuditEntity | FreeKit API Docs",
    "keywords": "Interface IUpdateAuditEntity 使用此接口可存储最后更新信息（最后修改人Id，修改人，修改时间） Inherited Members IUpdateAuditEntity<Guid>.UpdateUserId IUpdateAuditEntity<Guid>.UpdateUserName IUpdateAuditEntity<Guid>.UpdateTime Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IUpdateAuditEntity : IUpdateAuditEntity<Guid>"
  },
  "api/IGeekFan.FreeKit.Extras.AuditEntity.IUpdateAuditEntity-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.AuditEntity.IUpdateAuditEntity-1.html",
    "title": "Interface IUpdateAuditEntity<T> | FreeKit API Docs",
    "keywords": "Interface IUpdateAuditEntity<T> 参考 IUpdateAuditEntity Namespace : IGeekFan.FreeKit.Extras.AuditEntity Assembly : IGeekFan.FreeKit.dll Syntax public interface IUpdateAuditEntity<T> where T : struct, IEquatable<T> Type Parameters Name Description T 用户表主键 Properties | Improve this Doc View Source UpdateTime 修改时间 Declaration DateTime? UpdateTime { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source UpdateUserId 最后修改人Id Declaration T? UpdateUserId { get; set; } Property Value Type Description System.Nullable <T> | Improve this Doc View Source UpdateUserName 修改人 Declaration string UpdateUserName { get; set; } Property Value Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseApiDescriptionProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseApiDescriptionProvider.html",
    "title": "Class CamelCaseApiDescriptionProvider | FreeKit API Docs",
    "keywords": "Class CamelCaseApiDescriptionProvider Inheritance System.Object CamelCaseApiDescriptionProvider Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CamelCaseApiDescriptionProvider : IApiDescriptionProvider Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnProvidersExecuted(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuted(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context | Improve this Doc View Source OnProvidersExecuting(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuting(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseQueryValueProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseQueryValueProvider.html",
    "title": "Class CamelCaseQueryValueProvider | FreeKit API Docs",
    "keywords": "Class CamelCaseQueryValueProvider Inheritance System.Object Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider CamelCaseQueryValueProvider Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider Inherited Members Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetKeysFromPrefix(System.String) Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.Culture Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.PrefixContainer Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource) Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CamelCaseQueryValueProvider : QueryStringValueProvider, IBindingSourceValueProvider, IEnumerableValueProvider, IValueProvider Constructors | Improve this Doc View Source CamelCaseQueryValueProvider(BindingSource, IQueryCollection, CultureInfo) Declaration public CamelCaseQueryValueProvider(BindingSource bindingSource, IQueryCollection values, CultureInfo culture) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource bindingSource Microsoft.AspNetCore.Http.IQueryCollection values System.Globalization.CultureInfo culture Methods | Improve this Doc View Source ContainsPrefix(String) Declaration public override bool ContainsPrefix(string prefix) Parameters Type Name Description System.String prefix Returns Type Description System.Boolean Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.ContainsPrefix(System.String) | Improve this Doc View Source GetValue(String) Declaration public override ValueProviderResult GetValue(string key) Parameters Type Name Description System.String key Returns Type Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetValue(System.String) Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseValueProviderFactory.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.CamelCaseValueProviderFactory.html",
    "title": "Class CamelCaseValueProviderFactory | FreeKit API Docs",
    "keywords": "Class CamelCaseValueProviderFactory Inheritance System.Object CamelCaseValueProviderFactory Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CamelCaseValueProviderFactory : IValueProviderFactory Methods | Improve this Doc View Source CreateValueProviderAsync(ValueProviderFactoryContext) Declaration public Task CreateValueProviderAsync(ValueProviderFactoryContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext context Returns Type Description Task Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.CaseQuery | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.CaseQuery Classes CamelCaseApiDescriptionProvider CamelCaseQueryValueProvider CamelCaseValueProviderFactory LowerApiDescriptionProvider LowerCaseQueryValueProvider LowerCaseValueProviderFactory SnakeApiDescriptionProvider SnakeCaseQueryValueProvider 下划线写法（SnakeCase） SnakeCaseValueProviderFactory"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerApiDescriptionProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerApiDescriptionProvider.html",
    "title": "Class LowerApiDescriptionProvider | FreeKit API Docs",
    "keywords": "Class LowerApiDescriptionProvider Inheritance System.Object LowerApiDescriptionProvider Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class LowerApiDescriptionProvider : IApiDescriptionProvider Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnProvidersExecuted(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuted(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context | Improve this Doc View Source OnProvidersExecuting(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuting(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerCaseQueryValueProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerCaseQueryValueProvider.html",
    "title": "Class LowerCaseQueryValueProvider | FreeKit API Docs",
    "keywords": "Class LowerCaseQueryValueProvider Inheritance System.Object Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider LowerCaseQueryValueProvider Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider Inherited Members Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetKeysFromPrefix(System.String) Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.Culture Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.PrefixContainer Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource) Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class LowerCaseQueryValueProvider : QueryStringValueProvider, IBindingSourceValueProvider, IEnumerableValueProvider, IValueProvider Constructors | Improve this Doc View Source LowerCaseQueryValueProvider(BindingSource, IQueryCollection, CultureInfo) Declaration public LowerCaseQueryValueProvider(BindingSource bindingSource, IQueryCollection values, CultureInfo culture) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource bindingSource Microsoft.AspNetCore.Http.IQueryCollection values System.Globalization.CultureInfo culture Methods | Improve this Doc View Source ContainsPrefix(String) Declaration public override bool ContainsPrefix(string prefix) Parameters Type Name Description System.String prefix Returns Type Description System.Boolean Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.ContainsPrefix(System.String) | Improve this Doc View Source GetValue(String) Declaration public override ValueProviderResult GetValue(string key) Parameters Type Name Description System.String key Returns Type Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetValue(System.String) Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerCaseValueProviderFactory.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.LowerCaseValueProviderFactory.html",
    "title": "Class LowerCaseValueProviderFactory | FreeKit API Docs",
    "keywords": "Class LowerCaseValueProviderFactory Inheritance System.Object LowerCaseValueProviderFactory Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class LowerCaseValueProviderFactory : IValueProviderFactory Methods | Improve this Doc View Source CreateValueProviderAsync(ValueProviderFactoryContext) Declaration public Task CreateValueProviderAsync(ValueProviderFactoryContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext context Returns Type Description Task Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeApiDescriptionProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeApiDescriptionProvider.html",
    "title": "Class SnakeApiDescriptionProvider | FreeKit API Docs",
    "keywords": "Class SnakeApiDescriptionProvider Inheritance System.Object SnakeApiDescriptionProvider Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class SnakeApiDescriptionProvider : IApiDescriptionProvider Properties | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnProvidersExecuted(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuted(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context | Improve this Doc View Source OnProvidersExecuting(ApiDescriptionProviderContext) Declaration public void OnProvidersExecuting(ApiDescriptionProviderContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApiExplorer.ApiDescriptionProviderContext context Implements Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeCaseQueryValueProvider.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeCaseQueryValueProvider.html",
    "title": "Class SnakeCaseQueryValueProvider | FreeKit API Docs",
    "keywords": "Class SnakeCaseQueryValueProvider 下划线写法（SnakeCase） Inheritance System.Object Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider SnakeCaseQueryValueProvider Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider Inherited Members Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetKeysFromPrefix(System.String) Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.Culture Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.PrefixContainer Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource) Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class SnakeCaseQueryValueProvider : QueryStringValueProvider, IBindingSourceValueProvider, IEnumerableValueProvider, IValueProvider Constructors | Improve this Doc View Source SnakeCaseQueryValueProvider(BindingSource, IQueryCollection, CultureInfo) Declaration public SnakeCaseQueryValueProvider(BindingSource bindingSource, IQueryCollection values, CultureInfo culture) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource bindingSource Microsoft.AspNetCore.Http.IQueryCollection values System.Globalization.CultureInfo culture Methods | Improve this Doc View Source ContainsPrefix(String) Declaration public override bool ContainsPrefix(string prefix) Parameters Type Name Description System.String prefix Returns Type Description System.Boolean Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.ContainsPrefix(System.String) | Improve this Doc View Source GetValue(String) Declaration public override ValueProviderResult GetValue(string key) Parameters Type Name Description System.String key Returns Type Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult Overrides Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetValue(System.String) Implements Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"
  },
  "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeCaseValueProviderFactory.html": {
    "href": "api/IGeekFan.FreeKit.Extras.CaseQuery.SnakeCaseValueProviderFactory.html",
    "title": "Class SnakeCaseValueProviderFactory | FreeKit API Docs",
    "keywords": "Class SnakeCaseValueProviderFactory Inheritance System.Object SnakeCaseValueProviderFactory Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.CaseQuery Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class SnakeCaseValueProviderFactory : IValueProviderFactory Methods | Improve this Doc View Source CreateValueProviderAsync(ValueProviderFactoryContext) Declaration public Task CreateValueProviderAsync(ValueProviderFactoryContext context) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext context Returns Type Description Task Implements Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.DisableConventionalRegistrationAttribute.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.DisableConventionalRegistrationAttribute.html",
    "title": "Class DisableConventionalRegistrationAttribute | FreeKit API Docs",
    "keywords": "Class DisableConventionalRegistrationAttribute 禁用默认注册机制 Inheritance System.Object DisableConventionalRegistrationAttribute Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.dll Syntax public class DisableConventionalRegistrationAttribute : Attribute"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.FreeKitModule.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.FreeKitModule.html",
    "title": "Class FreeKitModule | FreeKit API Docs",
    "keywords": "Class FreeKitModule 批量注册:只需要继承接口ITransientDependency/IScopedDependency/ISingletonDependency，即可自动加入DI中 Inheritance System.Object Autofac.Module FreeKitModule Implements Autofac.Core.IModule Inherited Members Autofac.Module.Configure(Autofac.Core.Registration.IComponentRegistryBuilder) Autofac.Module.AttachToComponentRegistration(Autofac.Core.Registration.IComponentRegistryBuilder, Autofac.Core.IComponentRegistration) Autofac.Module.AttachToRegistrationSource(Autofac.Core.Registration.IComponentRegistryBuilder, Autofac.Core.IRegistrationSource) Autofac.Module.ThisAssembly System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class FreeKitModule : Module, IModule Constructors | Improve this Doc View Source FreeKitModule(Assembly[]) Declaration public FreeKitModule(Assembly[] currentAssemblies) Parameters Type Name Description System.Reflection.Assembly [] currentAssemblies | Improve this Doc View Source FreeKitModule(Assembly[], Nullable<List<Type>>) 根据程序集批量注册服务 Declaration public FreeKitModule(Assembly[] currentAssemblies, List<Type>? interceptorServiceTypes) Parameters Type Name Description System.Reflection.Assembly [] currentAssemblies 需要处理的程序集 System.Nullable < List < Type >> interceptorServiceTypes | Improve this Doc View Source FreeKitModule(Type[], Nullable<List<Type>>) 根据Type批量注册其程序集下所有继承ITransientDependency/IScopedDependency/ISingletonDependency的类 Declaration public FreeKitModule(Type[] typeAssemblies, List<Type>? interceptorServiceTypes) Parameters Type Name Description Type [] typeAssemblies System.Nullable < List < Type >> interceptorServiceTypes Methods | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description Autofac.ContainerBuilder builder Overrides Autofac.Module.Load(Autofac.ContainerBuilder) Implements Autofac.Core.IModule"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.Dependency | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.Dependency Classes DisableConventionalRegistrationAttribute 禁用默认注册机制 FreeKitModule 批量注册:只需要继承接口ITransientDependency/IScopedDependency/ISingletonDependency，即可自动加入DI中 UnitOfWorkModule Interfaces IScopedDependency 实现该接口将自动注册到Ioc容器，生命周期为每次请求创建一个实例 ISingletonDependency 单例 ITransientDependency 瞬时"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.IScopedDependency.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.IScopedDependency.html",
    "title": "Interface IScopedDependency | FreeKit API Docs",
    "keywords": "Interface IScopedDependency 实现该接口将自动注册到Ioc容器，生命周期为每次请求创建一个实例 Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.dll Syntax public interface IScopedDependency"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.ISingletonDependency.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.ISingletonDependency.html",
    "title": "Interface ISingletonDependency | FreeKit API Docs",
    "keywords": "Interface ISingletonDependency 单例 Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.dll Syntax public interface ISingletonDependency"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.ITransientDependency.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.ITransientDependency.html",
    "title": "Interface ITransientDependency | FreeKit API Docs",
    "keywords": "Interface ITransientDependency 瞬时 Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.dll Syntax public interface ITransientDependency"
  },
  "api/IGeekFan.FreeKit.Extras.Dependency.UnitOfWorkModule.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dependency.UnitOfWorkModule.html",
    "title": "Class UnitOfWorkModule | FreeKit API Docs",
    "keywords": "Class UnitOfWorkModule Inheritance System.Object Autofac.Module UnitOfWorkModule Implements Autofac.Core.IModule Inherited Members Autofac.Module.Configure(Autofac.Core.Registration.IComponentRegistryBuilder) Autofac.Module.AttachToComponentRegistration(Autofac.Core.Registration.IComponentRegistryBuilder, Autofac.Core.IComponentRegistration) Autofac.Module.AttachToRegistrationSource(Autofac.Core.Registration.IComponentRegistryBuilder, Autofac.Core.IRegistrationSource) Autofac.Module.ThisAssembly System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Dependency Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class UnitOfWorkModule : Module, IModule Constructors | Improve this Doc View Source UnitOfWorkModule(Assembly[]) Declaration public UnitOfWorkModule(Assembly[] currentAssemblies) Parameters Type Name Description System.Reflection.Assembly [] currentAssemblies | Improve this Doc View Source UnitOfWorkModule(Assembly[], Nullable<List<Type>>) Declaration public UnitOfWorkModule(Assembly[] currentAssemblies, List<Type>? interceptorServiceTypes) Parameters Type Name Description System.Reflection.Assembly [] currentAssemblies System.Nullable < List < Type >> interceptorServiceTypes | Improve this Doc View Source UnitOfWorkModule(Type[], Nullable<List<Type>>) Declaration public UnitOfWorkModule(Type[] typeAssemblies, List<Type>? interceptorServiceTypes) Parameters Type Name Description Type [] typeAssemblies System.Nullable < List < Type >> interceptorServiceTypes Methods | Improve this Doc View Source Load(ContainerBuilder) Declaration protected override void Load(ContainerBuilder builder) Parameters Type Name Description Autofac.ContainerBuilder builder Overrides Autofac.Module.Load(Autofac.ContainerBuilder) Implements Autofac.Core.IModule"
  },
  "api/IGeekFan.FreeKit.Extras.Dto.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dto.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.Dto | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.Dto Classes PagedResultDto<T>"
  },
  "api/IGeekFan.FreeKit.Extras.Dto.PagedResultDto-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Dto.PagedResultDto-1.html",
    "title": "Class PagedResultDto<T> | FreeKit API Docs",
    "keywords": "Class PagedResultDto<T> Inheritance System.Object FreeSql.Internal.Model.BasePagingInfo PagedResultDto<T> Inherited Members FreeSql.Internal.Model.BasePagingInfo.PageNumber FreeSql.Internal.Model.BasePagingInfo.PageSize FreeSql.Internal.Model.BasePagingInfo.Count System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Dto Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class PagedResultDto<T> : BasePagingInfo where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source PagedResultDto(IReadOnlyList<T>) Declaration public PagedResultDto(IReadOnlyList<T> data) Parameters Type Name Description IReadOnlyList <T> data | Improve this Doc View Source PagedResultDto(IReadOnlyList<T>, BasePagingInfo) Declaration public PagedResultDto(IReadOnlyList<T> data, BasePagingInfo page) Parameters Type Name Description IReadOnlyList <T> data FreeSql.Internal.Model.BasePagingInfo page | Improve this Doc View Source PagedResultDto(IReadOnlyList<T>, Int64) Declaration public PagedResultDto(IReadOnlyList<T> data, long count) Parameters Type Name Description IReadOnlyList <T> data System.Int64 count | Improve this Doc View Source PagedResultDto(IReadOnlyList<T>, Int64, Int32, Int32) Declaration public PagedResultDto(IReadOnlyList<T> data, long count, int pageNumber, int pageSize) Parameters Type Name Description IReadOnlyList <T> data System.Int64 count System.Int32 pageNumber System.Int32 pageSize Properties | Improve this Doc View Source Data Declaration public IReadOnlyList<T> Data { get; } Property Value Type Description IReadOnlyList <T>"
  },
  "api/IGeekFan.FreeKit.Extras.Extensions.DateTimeExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | FreeKit API Docs",
    "keywords": "Class DateTimeExtensions 系统扩展 - 日期 Inheritance System.Object DateTimeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Extensions Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class DateTimeExtensions Methods | Improve this Doc View Source Description(TimeSpan) 获取描述 Declaration public static string Description(this TimeSpan span) Parameters Type Name Description TimeSpan span 时间间隔 Returns Type Description System.String | Improve this Doc View Source ToChineseDateString(DateTime) 获取格式化字符串，不带时分秒，格式：\"yyyy年MM月dd日\" Declaration public static string ToChineseDateString(this DateTime dateTime) Parameters Type Name Description DateTime dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToChineseDateString(Nullable<DateTime>) 获取格式化字符串，不带时分秒，格式：\"yyyy年MM月dd日\" Declaration public static string ToChineseDateString(this DateTime? dateTime) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToChineseDateTimeString(DateTime, Boolean) 获取格式化字符串，带时分秒，格式：\"yyyy年MM月dd日 HH时mm分\" Declaration public static string ToChineseDateTimeString(this DateTime dateTime, bool removeSecond = false) Parameters Type Name Description DateTime dateTime 日期 System.Boolean removeSecond 是否移除秒 Returns Type Description System.String | Improve this Doc View Source ToChineseDateTimeString(Nullable<DateTime>, Boolean) 获取格式化字符串，带时分秒，格式：\"yyyy年MM月dd日 HH时mm分\" Declaration public static string ToChineseDateTimeString(this DateTime? dateTime, bool removeSecond = false) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 System.Boolean removeSecond 是否移除秒 Returns Type Description System.String | Improve this Doc View Source ToDateString(DateTime) 获取格式化字符串，不带时分秒，格式：\"yyyy-MM-dd\" Declaration public static string ToDateString(this DateTime dateTime) Parameters Type Name Description DateTime dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToDateString(Nullable<DateTime>) 获取格式化字符串，不带时分秒，格式：\"yyyy-MM-dd\" Declaration public static string ToDateString(this DateTime? dateTime) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToDateTimeString(DateTime, Boolean) 获取格式化字符串，带时分秒，格式：\"yyyy-MM-dd HH:mm:ss\" Declaration public static string ToDateTimeString(this DateTime dateTime, bool removeSecond = false) Parameters Type Name Description DateTime dateTime 日期 System.Boolean removeSecond 是否移除秒 Returns Type Description System.String | Improve this Doc View Source ToDateTimeString(Nullable<DateTime>, Boolean) 获取格式化字符串，带时分秒，格式：\"yyyy-MM-dd HH:mm:ss\" Declaration public static string ToDateTimeString(this DateTime? dateTime, bool removeSecond = false) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 System.Boolean removeSecond 是否移除秒 Returns Type Description System.String | Improve this Doc View Source ToMillisecondString(DateTime) 获取格式化字符串，带毫秒，格式：\"yyyy-MM-dd HH:mm:ss.fff\" Declaration public static string ToMillisecondString(this DateTime dateTime) Parameters Type Name Description DateTime dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToMillisecondString(Nullable<DateTime>) 获取格式化字符串，带毫秒，格式：\"yyyy-MM-dd HH:mm:ss.fff\" Declaration public static string ToMillisecondString(this DateTime? dateTime) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToTimeString(DateTime) 获取格式化字符串，不带年月日，格式：\"HH:mm:ss\" Declaration public static string ToTimeString(this DateTime dateTime) Parameters Type Name Description DateTime dateTime 日期 Returns Type Description System.String | Improve this Doc View Source ToTimeString(Nullable<DateTime>) 获取格式化字符串，不带年月日，格式：\"HH:mm:ss\" Declaration public static string ToTimeString(this DateTime? dateTime) Parameters Type Name Description System.Nullable < DateTime > dateTime 日期 Returns Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.Extensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Extensions.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.Extensions | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.Extensions Classes DateTimeExtensions 系统扩展 - 日期 StringExtensions TypeExtensions"
  },
  "api/IGeekFan.FreeKit.Extras.Extensions.StringExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | FreeKit API Docs",
    "keywords": "Class StringExtensions Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Extensions Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source IsNotNullOrEmpty(String) Indicates whether this string is not null or an System.String.Empty string. Declaration public static bool IsNotNullOrEmpty(this string str) Parameters Type Name Description System.String str Returns Type Description System.Boolean | Improve this Doc View Source IsNotNullOrWhiteSpace(String) indicates whether this string is not null, empty, or consists only of white-space characters. Declaration public static bool IsNotNullOrWhiteSpace(this string str) Parameters Type Name Description System.String str Returns Type Description System.Boolean | Improve this Doc View Source IsNullOrEmpty(String) Indicates whether this string is null or an System.String.Empty string. Declaration public static bool IsNullOrEmpty(this string str) Parameters Type Name Description System.String str Returns Type Description System.Boolean | Improve this Doc View Source IsNullOrWhiteSpace(String) indicates whether this string is null, empty, or consists only of white-space characters. Declaration public static bool IsNullOrWhiteSpace(this string str) Parameters Type Name Description System.String str Returns Type Description System.Boolean | Improve this Doc View Source ToCamelCase(String) 小驼峰命名 Declaration public static string ToCamelCase(this string source) Parameters Type Name Description System.String source Returns Type Description System.String | Improve this Doc View Source ToKebabCase(String) 短横线 Declaration public static string ToKebabCase(this string source) Parameters Type Name Description System.String source Returns Type Description System.String | Improve this Doc View Source ToLong(String) Declaration public static long ToLong(this string this) Parameters Type Name Description System.String this Returns Type Description System.Int64 | Improve this Doc View Source ToPascalCase(String) 帕斯卡命名法：大驼峰 Declaration public static string ToPascalCase(this string source) Parameters Type Name Description System.String source Returns Type Description System.String | Improve this Doc View Source ToSnakeCase(String) 蛇形命名法 Declaration public static string ToSnakeCase(this string source) Parameters Type Name Description System.String source Returns Type Description System.String | Improve this Doc View Source ToTrainCase(String) Declaration public static string ToTrainCase(this string source) Parameters Type Name Description System.String source Returns Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.Extensions.TypeExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | FreeKit API Docs",
    "keywords": "Class TypeExtensions Inheritance System.Object TypeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Extensions Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source HasImplementedRawGeneric(Type, Type) 判断某个类型是否继承了某个泛型接口 Declaration public static bool HasImplementedRawGeneric(this Type type, Type generic) Parameters Type Name Description Type type Type generic Returns Type Description System.Boolean"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditBaseRepository-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditBaseRepository-2.html",
    "title": "Class AuditBaseRepository<TEntity, TKey> | FreeKit API Docs",
    "keywords": "Class AuditBaseRepository<TEntity, TKey> 审计仓储：实现如果实体类 继承了ICreateAuditEntity 则自动增加创建时间/人信息 继承了IUpdateAuditEntity，更新时，修改更新时间/人 继承了IDeleteAuditEntity，删除时，自动改成软删除。仅注入此仓储或继承此仓储的实现才能实现如上功能。 Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, TKey> FreeSql.DefaultRepository <TEntity, TKey> AuditBaseRepository<TEntity, TKey> AuditDefaultRepository<TEntity, TKey, TUkey> Implements IAuditBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.BaseRepository<TEntity, TKey>.Find(TKey) FreeSql.BaseRepository<TEntity, TKey>.Get(TKey) FreeSql.BaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public abstract class AuditBaseRepository<TEntity, TKey> : DefaultRepository<TEntity, TKey>, IAuditBaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source AuditBaseRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditBaseRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Fields | Improve this Doc View Source CurrentUser 当前登录人信息 Declaration protected readonly ICurrentUser CurrentUser Field Value Type Description ICurrentUser | Improve this Doc View Source IsDeleteAudit 是否开户软删除审计 Declaration protected readonly bool IsDeleteAudit Field Value Type Description System.Boolean | Improve this Doc View Source IsUpdateAudit 是否开启修改审计 Declaration protected readonly bool IsUpdateAudit Field Value Type Description System.Boolean Methods | Improve this Doc View Source BeforeDelete(TEntity) 删除数据方法 Declaration protected abstract void BeforeDelete(TEntity entity) Parameters Type Name Description TEntity entity | Improve this Doc View Source BeforeInsert(TEntity) 插入数据前方法 Declaration protected abstract void BeforeInsert(TEntity entity) Parameters Type Name Description TEntity entity | Improve this Doc View Source BeforeUpdate(TEntity) 修改数据前方法 Declaration protected abstract void BeforeUpdate(TEntity entity) Parameters Type Name Description TEntity entity | Improve this Doc View Source Delete(TEntity) Declaration public override int Delete(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 Overrides FreeSql.BaseRepository<TEntity>.Delete(TEntity) | Improve this Doc View Source Delete(TKey) Declaration public override int Delete(TKey id) Parameters Type Name Description TKey id Returns Type Description System.Int32 Overrides FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) | Improve this Doc View Source Delete(IEnumerable<TEntity>) Declaration public override int Delete(IEnumerable<TEntity> entities) Parameters Type Name Description IEnumerable <TEntity> entities Returns Type Description System.Int32 | Improve this Doc View Source Delete(Expression<Func<TEntity, Boolean>>) Declaration public override int Delete(Expression<Func<TEntity, bool>> predicate) Parameters Type Name Description System.Linq.Expressions.Expression < Func <TEntity, System.Boolean >> predicate Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TEntity, CancellationToken) Declaration public override Task<int> DeleteAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source DeleteAsync(TKey, CancellationToken) Declaration public override async Task<int> DeleteAsync(TKey id, CancellationToken cancellationToken = null) Parameters Type Name Description TKey id CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source DeleteAsync(IEnumerable<TEntity>, CancellationToken) Declaration public override Task<int> DeleteAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable <TEntity> entities CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) Declaration public override async Task<int> DeleteAsync(Expression<Func<TEntity, bool>> predicate, CancellationToken cancellationToken = null) Parameters Type Name Description System.Linq.Expressions.Expression < Func <TEntity, System.Boolean >> predicate CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source Insert(TEntity) Declaration public override TEntity Insert(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity Overrides FreeSql.BaseRepository<TEntity>.Insert(TEntity) | Improve this Doc View Source Insert(IEnumerable<TEntity>) Declaration public override List<TEntity> Insert(IEnumerable<TEntity> entities) Parameters Type Name Description IEnumerable <TEntity> entities Returns Type Description List <TEntity> | Improve this Doc View Source InsertAsync(TEntity, CancellationToken) Declaration public override Task<TEntity> InsertAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source InsertAsync(IEnumerable<TEntity>, CancellationToken) Declaration public override Task<List<TEntity>> InsertAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable <TEntity> entities CancellationToken cancellationToken Returns Type Description Task < List <TEntity>> | Improve this Doc View Source InsertOrUpdate(TEntity) Declaration public override TEntity InsertOrUpdate(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description TEntity Overrides FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) | Improve this Doc View Source InsertOrUpdateAsync(TEntity, CancellationToken) Declaration public override async Task<TEntity> InsertOrUpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task <TEntity> | Improve this Doc View Source Update(TEntity) Declaration public override int Update(TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Int32 Overrides FreeSql.BaseRepository<TEntity>.Update(TEntity) | Improve this Doc View Source Update(IEnumerable<TEntity>) Declaration public override int Update(IEnumerable<TEntity> entities) Parameters Type Name Description IEnumerable <TEntity> entities Returns Type Description System.Int32 | Improve this Doc View Source UpdateAsync(TEntity, CancellationToken) Declaration public override Task<int> UpdateAsync(TEntity entity, CancellationToken cancellationToken = null) Parameters Type Name Description TEntity entity CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source UpdateAsync(IEnumerable<TEntity>, CancellationToken) Declaration public override Task<int> UpdateAsync(IEnumerable<TEntity> entities, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable <TEntity> entities CancellationToken cancellationToken Returns Type Description Task < System.Int32 > Implements IAuditBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditDefaultRepository-3.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditDefaultRepository-3.html",
    "title": "Class AuditDefaultRepository<TEntity, TKey, TUkey> | FreeKit API Docs",
    "keywords": "Class AuditDefaultRepository<TEntity, TKey, TUkey> Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, TKey> FreeSql.DefaultRepository <TEntity, TKey> AuditBaseRepository <TEntity, TKey> AuditDefaultRepository<TEntity, TKey, TUkey> AuditGuidRepository<TEntity> AuditIntRepository<TEntity> AuditLongRepository<TEntity> AuditTKeyGuidRepository<TEntity, TKey> AuditTKeyIntRepository<TEntity, TKey> AuditTKeyLongRepository<TEntity, TKey> Implements IAuditBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditBaseRepository<TEntity, TKey>.CurrentUser AuditBaseRepository<TEntity, TKey>.IsDeleteAudit AuditBaseRepository<TEntity, TKey>.IsUpdateAudit AuditBaseRepository<TEntity, TKey>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.Insert(TEntity) AuditBaseRepository<TEntity, TKey>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(TEntity) AuditBaseRepository<TEntity, TKey>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(TKey) AuditBaseRepository<TEntity, TKey>.Delete(TEntity) AuditBaseRepository<TEntity, TKey>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TKey, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, TKey>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.BaseRepository<TEntity, TKey>.Find(TKey) FreeSql.BaseRepository<TEntity, TKey>.Get(TKey) FreeSql.BaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditDefaultRepository<TEntity, TKey, TUkey> : AuditBaseRepository<TEntity, TKey>, IAuditBaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() where TUkey : struct, IEquatable<TUkey> Type Parameters Name Description TEntity TKey TUkey Constructors | Improve this Doc View Source AuditDefaultRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditDefaultRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Methods | Improve this Doc View Source BeforeDelete(TEntity) Declaration protected override void BeforeDelete(TEntity entity) Parameters Type Name Description TEntity entity Overrides IGeekFan.FreeKit.Extras.FreeSql.AuditBaseRepository<TEntity, TKey>.BeforeDelete(TEntity) | Improve this Doc View Source BeforeInsert(TEntity) Declaration protected override void BeforeInsert(TEntity entity) Parameters Type Name Description TEntity entity Overrides IGeekFan.FreeKit.Extras.FreeSql.AuditBaseRepository<TEntity, TKey>.BeforeInsert(TEntity) | Improve this Doc View Source BeforeUpdate(TEntity) Declaration protected override void BeforeUpdate(TEntity entity) Parameters Type Name Description TEntity entity Overrides IGeekFan.FreeKit.Extras.FreeSql.AuditBaseRepository<TEntity, TKey>.BeforeUpdate(TEntity) Implements IAuditBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditGuidRepository-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditGuidRepository-1.html",
    "title": "Class AuditGuidRepository<TEntity> | FreeKit API Docs",
    "keywords": "Class AuditGuidRepository<TEntity> 审计仓储，表的主键/用户主键类型都为Guid Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, Guid > FreeSql.DefaultRepository <TEntity, Guid > AuditBaseRepository <TEntity, Guid > AuditDefaultRepository <TEntity, Guid , Guid > AuditGuidRepository<TEntity> Implements IAuditBaseRepository <TEntity, Guid > IAuditBaseRepository <TEntity> FreeSql.IBaseRepository <TEntity, Guid > FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, Guid, Guid>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, Guid, Guid>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, Guid, Guid>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.CurrentUser AuditBaseRepository<TEntity, Guid>.IsDeleteAudit AuditBaseRepository<TEntity, Guid>.IsUpdateAudit AuditBaseRepository<TEntity, Guid>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.Insert(TEntity) AuditBaseRepository<TEntity, Guid>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(TEntity) AuditBaseRepository<TEntity, Guid>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Guid) AuditBaseRepository<TEntity, Guid>.Delete(TEntity) AuditBaseRepository<TEntity, Guid>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Guid, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, Guid>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.Delete(Guid) FreeSql.BaseRepository<TEntity, Guid>.Find(Guid) FreeSql.BaseRepository<TEntity, Guid>.Get(Guid) FreeSql.BaseRepository<TEntity, Guid>.DeleteAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.FindAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.GetAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditGuidRepository<TEntity> : AuditDefaultRepository<TEntity, Guid, Guid>, IAuditBaseRepository<TEntity, Guid>, IAuditBaseRepository<TEntity>, IBaseRepository<TEntity, Guid>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity Constructors | Improve this Doc View Source AuditGuidRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditGuidRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> IAuditBaseRepository<TEntity> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditIntRepository-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditIntRepository-1.html",
    "title": "Class AuditIntRepository<TEntity> | FreeKit API Docs",
    "keywords": "Class AuditIntRepository<TEntity> 审计仓储实现，用户主键类型为Int、表的主键为Guid Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, Guid > FreeSql.DefaultRepository <TEntity, Guid > AuditBaseRepository <TEntity, Guid > AuditDefaultRepository <TEntity, Guid , System.Int64 > AuditIntRepository<TEntity> Implements IAuditBaseRepository <TEntity, Guid > IAuditBaseRepository <TEntity> FreeSql.IBaseRepository <TEntity, Guid > FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, Guid, Int64>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, Guid, Int64>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, Guid, Int64>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.CurrentUser AuditBaseRepository<TEntity, Guid>.IsDeleteAudit AuditBaseRepository<TEntity, Guid>.IsUpdateAudit AuditBaseRepository<TEntity, Guid>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.Insert(TEntity) AuditBaseRepository<TEntity, Guid>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(TEntity) AuditBaseRepository<TEntity, Guid>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Guid) AuditBaseRepository<TEntity, Guid>.Delete(TEntity) AuditBaseRepository<TEntity, Guid>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Guid, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, Guid>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.Delete(Guid) FreeSql.BaseRepository<TEntity, Guid>.Find(Guid) FreeSql.BaseRepository<TEntity, Guid>.Get(Guid) FreeSql.BaseRepository<TEntity, Guid>.DeleteAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.FindAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.GetAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditIntRepository<TEntity> : AuditDefaultRepository<TEntity, Guid, long>, IAuditBaseRepository<TEntity, Guid>, IAuditBaseRepository<TEntity>, IBaseRepository<TEntity, Guid>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity Constructors | Improve this Doc View Source AuditIntRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditIntRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> IAuditBaseRepository<TEntity> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditLongRepository-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditLongRepository-1.html",
    "title": "Class AuditLongRepository<TEntity> | FreeKit API Docs",
    "keywords": "Class AuditLongRepository<TEntity> 审计仓储实现，用户主键类型为long、表的主键为Guid Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, Guid > FreeSql.DefaultRepository <TEntity, Guid > AuditBaseRepository <TEntity, Guid > AuditDefaultRepository <TEntity, Guid , System.Int64 > AuditLongRepository<TEntity> Implements IAuditBaseRepository <TEntity, Guid > IAuditBaseRepository <TEntity> FreeSql.IBaseRepository <TEntity, Guid > FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, Guid, Int64>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, Guid, Int64>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, Guid, Int64>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.CurrentUser AuditBaseRepository<TEntity, Guid>.IsDeleteAudit AuditBaseRepository<TEntity, Guid>.IsUpdateAudit AuditBaseRepository<TEntity, Guid>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, Guid>.Insert(TEntity) AuditBaseRepository<TEntity, Guid>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(TEntity) AuditBaseRepository<TEntity, Guid>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Guid) AuditBaseRepository<TEntity, Guid>.Delete(TEntity) AuditBaseRepository<TEntity, Guid>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Guid, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, Guid>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, Guid>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, Guid>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, Guid>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, Guid>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.Delete(Guid) FreeSql.BaseRepository<TEntity, Guid>.Find(Guid) FreeSql.BaseRepository<TEntity, Guid>.Get(Guid) FreeSql.BaseRepository<TEntity, Guid>.DeleteAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.FindAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, Guid>.GetAsync(Guid, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditLongRepository<TEntity> : AuditDefaultRepository<TEntity, Guid, long>, IAuditBaseRepository<TEntity, Guid>, IAuditBaseRepository<TEntity>, IBaseRepository<TEntity, Guid>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity Constructors | Improve this Doc View Source AuditLongRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditLongRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> IAuditBaseRepository<TEntity> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyGuidRepository-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyGuidRepository-2.html",
    "title": "Class AuditTKeyGuidRepository<TEntity, TKey> | FreeKit API Docs",
    "keywords": "Class AuditTKeyGuidRepository<TEntity, TKey> 审计仓储，用户主键类型为Guid Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, TKey> FreeSql.DefaultRepository <TEntity, TKey> AuditBaseRepository <TEntity, TKey> AuditDefaultRepository <TEntity, TKey, Guid > AuditTKeyGuidRepository<TEntity, TKey> Implements IAuditBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, TKey, Guid>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, TKey, Guid>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, TKey, Guid>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.CurrentUser AuditBaseRepository<TEntity, TKey>.IsDeleteAudit AuditBaseRepository<TEntity, TKey>.IsUpdateAudit AuditBaseRepository<TEntity, TKey>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.Insert(TEntity) AuditBaseRepository<TEntity, TKey>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(TEntity) AuditBaseRepository<TEntity, TKey>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(TKey) AuditBaseRepository<TEntity, TKey>.Delete(TEntity) AuditBaseRepository<TEntity, TKey>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TKey, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, TKey>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.BaseRepository<TEntity, TKey>.Find(TKey) FreeSql.BaseRepository<TEntity, TKey>.Get(TKey) FreeSql.BaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditTKeyGuidRepository<TEntity, TKey> : AuditDefaultRepository<TEntity, TKey, Guid>, IAuditBaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source AuditTKeyGuidRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditTKeyGuidRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyIntRepository-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyIntRepository-2.html",
    "title": "Class AuditTKeyIntRepository<TEntity, TKey> | FreeKit API Docs",
    "keywords": "Class AuditTKeyIntRepository<TEntity, TKey> 审计仓储，用户主键类型为Int Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, TKey> FreeSql.DefaultRepository <TEntity, TKey> AuditBaseRepository <TEntity, TKey> AuditDefaultRepository <TEntity, TKey, System.Int64 > AuditTKeyIntRepository<TEntity, TKey> Implements IAuditBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, TKey, Int64>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, TKey, Int64>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, TKey, Int64>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.CurrentUser AuditBaseRepository<TEntity, TKey>.IsDeleteAudit AuditBaseRepository<TEntity, TKey>.IsUpdateAudit AuditBaseRepository<TEntity, TKey>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.Insert(TEntity) AuditBaseRepository<TEntity, TKey>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(TEntity) AuditBaseRepository<TEntity, TKey>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(TKey) AuditBaseRepository<TEntity, TKey>.Delete(TEntity) AuditBaseRepository<TEntity, TKey>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TKey, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, TKey>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.BaseRepository<TEntity, TKey>.Find(TKey) FreeSql.BaseRepository<TEntity, TKey>.Get(TKey) FreeSql.BaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditTKeyIntRepository<TEntity, TKey> : AuditDefaultRepository<TEntity, TKey, long>, IAuditBaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source AuditTKeyIntRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditTKeyIntRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyLongRepository-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.AuditTKeyLongRepository-2.html",
    "title": "Class AuditTKeyLongRepository<TEntity, TKey> | FreeKit API Docs",
    "keywords": "Class AuditTKeyLongRepository<TEntity, TKey> 审计仓储，用户主键类型为long Inheritance System.Object FreeSql.BaseRepository <TEntity> FreeSql.BaseRepository <TEntity, TKey> FreeSql.DefaultRepository <TEntity, TKey> AuditBaseRepository <TEntity, TKey> AuditDefaultRepository <TEntity, TKey, System.Int64 > AuditTKeyLongRepository<TEntity, TKey> Implements IAuditBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity, TKey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members AuditDefaultRepository<TEntity, TKey, Int64>.BeforeInsert(TEntity) AuditDefaultRepository<TEntity, TKey, Int64>.BeforeUpdate(TEntity) AuditDefaultRepository<TEntity, TKey, Int64>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.CurrentUser AuditBaseRepository<TEntity, TKey>.IsDeleteAudit AuditBaseRepository<TEntity, TKey>.IsUpdateAudit AuditBaseRepository<TEntity, TKey>.BeforeInsert(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.BeforeDelete(TEntity) AuditBaseRepository<TEntity, TKey>.Insert(TEntity) AuditBaseRepository<TEntity, TKey>.InsertAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Insert(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.InsertAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(TEntity) AuditBaseRepository<TEntity, TKey>.UpdateAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Update(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.UpdateAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(TKey) AuditBaseRepository<TEntity, TKey>.Delete(TEntity) AuditBaseRepository<TEntity, TKey>.Delete(IEnumerable<TEntity>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TKey, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(IEnumerable<TEntity>, CancellationToken) AuditBaseRepository<TEntity, TKey>.DeleteAsync(TEntity, CancellationToken) AuditBaseRepository<TEntity, TKey>.Delete(Expression<Func<TEntity, Boolean>>) AuditBaseRepository<TEntity, TKey>.DeleteAsync(Expression<Func<TEntity, Boolean>>, CancellationToken) AuditBaseRepository<TEntity, TKey>.InsertOrUpdate(TEntity) AuditBaseRepository<TEntity, TKey>.InsertOrUpdateAsync(TEntity, CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.BaseRepository<TEntity, TKey>.Find(TKey) FreeSql.BaseRepository<TEntity, TKey>.Get(TKey) FreeSql.BaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class AuditTKeyLongRepository<TEntity, TKey> : AuditDefaultRepository<TEntity, TKey, long>, IAuditBaseRepository<TEntity, TKey>, IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class, new() Type Parameters Name Description TEntity TKey Constructors | Improve this Doc View Source AuditTKeyLongRepository(UnitOfWorkManager, ICurrentUser) Declaration public AuditTKeyLongRepository(UnitOfWorkManager unitOfWorkManager, ICurrentUser currentUser) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager ICurrentUser currentUser Implements IAuditBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity, TKey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.BaseRepository-3.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.BaseRepository-3.html",
    "title": "Class BaseRepository<TEntity, TKey, Ukey> | FreeKit API Docs",
    "keywords": "Class BaseRepository<TEntity, TKey, Ukey> Inheritance System.Object FreeSql.BaseRepository <TEntity> BaseRepository<TEntity, TKey, Ukey> DefaultRepository<TEntity, TKey, Ukey> Implements IBaseRepository <TEntity, TKey, Ukey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public abstract class BaseRepository<TEntity, TKey, Ukey> : BaseRepository<TEntity>, IBaseRepository<TEntity, TKey, Ukey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Ukey Constructors | Improve this Doc View Source BaseRepository(IFreeSql, Expression<Func<TEntity, Boolean>>, Func<String, String>) Declaration protected BaseRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter, Func<string, string> asTable = null) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < Func <TEntity, System.Boolean >> filter Func < System.String , System.String > asTable Methods | Improve this Doc View Source Delete(TKey, Ukey) Declaration public virtual int Delete(TKey id, Ukey uid) Parameters Type Name Description TKey id Ukey uid Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TKey, Ukey, CancellationToken) Declaration public virtual Task<int> DeleteAsync(TKey id, Ukey uid, CancellationToken cancellationToken = null) Parameters Type Name Description TKey id Ukey uid CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source Get(TKey, Ukey) Declaration public virtual TEntity Get(TKey id, Ukey uid) Parameters Type Name Description TKey id Ukey uid Returns Type Description TEntity | Improve this Doc View Source GetAsync(TKey, Ukey, CancellationToken) Declaration public virtual Task<TEntity> GetAsync(TKey id, Ukey uid, CancellationToken cancellationToken = null) Parameters Type Name Description TKey id Ukey uid CancellationToken cancellationToken Returns Type Description Task <TEntity> Implements IBaseRepository<TEntity, TKey, Ukey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.DefaultRepository-3.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.DefaultRepository-3.html",
    "title": "Class DefaultRepository<TEntity, TKey, Ukey> | FreeKit API Docs",
    "keywords": "Class DefaultRepository<TEntity, TKey, Ukey> Inheritance System.Object FreeSql.BaseRepository <TEntity> BaseRepository <TEntity, TKey, Ukey> DefaultRepository<TEntity, TKey, Ukey> Implements IBaseRepository <TEntity, TKey, Ukey> FreeSql.IBaseRepository <TEntity> FreeSql.IBaseRepository System.IDisposable Inherited Members BaseRepository<TEntity, TKey, Ukey>.Delete(TKey, Ukey) BaseRepository<TEntity, TKey, Ukey>.Get(TKey, Ukey) BaseRepository<TEntity, TKey, Ukey>.GetAsync(TKey, Ukey, CancellationToken) BaseRepository<TEntity, TKey, Ukey>.DeleteAsync(TKey, Ukey, CancellationToken) FreeSql.BaseRepository<TEntity>.ApplyDataFilter(System.String, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Dispose() FreeSql.BaseRepository<TEntity>.AsType(System.Type) FreeSql.BaseRepository<TEntity>.AsTable(System.Func<System.String, System.String>) FreeSql.BaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Delete(TEntity) FreeSql.BaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.BaseRepository<TEntity>.Insert(TEntity) FreeSql.BaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Update(TEntity) FreeSql.BaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.Attach(TEntity) FreeSql.BaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.BaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.BaseRepository<TEntity>.FlushState() FreeSql.BaseRepository<TEntity>.CompareState(TEntity) FreeSql.BaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.BaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.BaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.BaseRepository<TEntity>.DataFilter FreeSql.BaseRepository<TEntity>.EntityType FreeSql.BaseRepository<TEntity>.DbContextOptions FreeSql.BaseRepository<TEntity>.Orm FreeSql.BaseRepository<TEntity>.UnitOfWork FreeSql.BaseRepository<TEntity>.UpdateDiy FreeSql.BaseRepository<TEntity>.Select System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class DefaultRepository<TEntity, TKey, Ukey> : BaseRepository<TEntity, TKey, Ukey>, IBaseRepository<TEntity, TKey, Ukey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Ukey Constructors | Improve this Doc View Source DefaultRepository(IFreeSql) Declaration public DefaultRepository(IFreeSql fsql) Parameters Type Name Description IFreeSql fsql | Improve this Doc View Source DefaultRepository(IFreeSql, UnitOfWorkManager) Declaration public DefaultRepository(IFreeSql fsql, UnitOfWorkManager uowManger) Parameters Type Name Description IFreeSql fsql FreeSql.UnitOfWorkManager uowManger | Improve this Doc View Source DefaultRepository(IFreeSql, Expression<Func<TEntity, Boolean>>) Declaration public DefaultRepository(IFreeSql fsql, Expression<Func<TEntity, bool>> filter) Parameters Type Name Description IFreeSql fsql System.Linq.Expressions.Expression < Func <TEntity, System.Boolean >> filter Implements IBaseRepository<TEntity, TKey, Ukey> FreeSql.IBaseRepository<TEntity> FreeSql.IBaseRepository System.IDisposable"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.FreeSql | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.FreeSql Classes AuditBaseRepository<TEntity, TKey> 审计仓储：实现如果实体类 继承了ICreateAuditEntity 则自动增加创建时间/人信息 继承了IUpdateAuditEntity，更新时，修改更新时间/人 继承了IDeleteAuditEntity，删除时，自动改成软删除。仅注入此仓储或继承此仓储的实现才能实现如上功能。 AuditDefaultRepository<TEntity, TKey, TUkey> AuditGuidRepository<TEntity> 审计仓储，表的主键/用户主键类型都为Guid AuditIntRepository<TEntity> 审计仓储实现，用户主键类型为Int、表的主键为Guid AuditLongRepository<TEntity> 审计仓储实现，用户主键类型为long、表的主键为Guid AuditTKeyGuidRepository<TEntity, TKey> 审计仓储，用户主键类型为Guid AuditTKeyIntRepository<TEntity, TKey> 审计仓储，用户主键类型为Int AuditTKeyLongRepository<TEntity, TKey> 审计仓储，用户主键类型为long BaseRepository<TEntity, TKey, Ukey> DefaultRepository<TEntity, TKey, Ukey> MethodInfoExtensions ReflexHelper TransactionalAttribute 事务特性标签 UnitOfWorkActionFilter 工作单元过滤器 UnitOfWorkAsyncInterceptor 异步事务方法拦截 UnitOfWorkDefaultOptions 默认事务配置 UnitOfWorkInterceptor 同步Uow拦截 Interfaces IAuditBaseRepository<TEntity> 审计仓储，表的主键为Guid IAuditBaseRepository<TEntity, TKey> 审计仓储 IBaseRepository<TEntity, TKey, Ukey>"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.IAuditBaseRepository-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.IAuditBaseRepository-1.html",
    "title": "Interface IAuditBaseRepository<TEntity> | FreeKit API Docs",
    "keywords": "Interface IAuditBaseRepository<TEntity> 审计仓储，表的主键为Guid Inherited Members FreeSql.IBaseRepository<TEntity, Guid>.Get(Guid) FreeSql.IBaseRepository<TEntity, Guid>.Find(Guid) FreeSql.IBaseRepository<TEntity, Guid>.Delete(Guid) FreeSql.IBaseRepository<TEntity, Guid>.GetAsync(Guid, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity, Guid>.FindAsync(Guid, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity, Guid>.DeleteAsync(Guid, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.Insert(TEntity) FreeSql.IBaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.FlushState() FreeSql.IBaseRepository<TEntity>.Attach(TEntity) FreeSql.IBaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.IBaseRepository<TEntity>.CompareState(TEntity) FreeSql.IBaseRepository<TEntity>.Update(TEntity) FreeSql.IBaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.IBaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.IBaseRepository<TEntity>.Delete(TEntity) FreeSql.IBaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DataFilter FreeSql.IBaseRepository<TEntity>.Select FreeSql.IBaseRepository<TEntity>.UpdateDiy FreeSql.IBaseRepository.AsType(System.Type) FreeSql.IBaseRepository.AsTable(System.Func<System.String, System.String>) FreeSql.IBaseRepository.EntityType FreeSql.IBaseRepository.UnitOfWork FreeSql.IBaseRepository.Orm FreeSql.IBaseRepository.DbContextOptions System.IDisposable.Dispose() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface IAuditBaseRepository<TEntity> : IBaseRepository<TEntity, Guid>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity 实体"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.IAuditBaseRepository-2.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.IAuditBaseRepository-2.html",
    "title": "Interface IAuditBaseRepository<TEntity, TKey> | FreeKit API Docs",
    "keywords": "Interface IAuditBaseRepository<TEntity, TKey> 审计仓储 Inherited Members FreeSql.IBaseRepository<TEntity, TKey>.Get(TKey) FreeSql.IBaseRepository<TEntity, TKey>.Find(TKey) FreeSql.IBaseRepository<TEntity, TKey>.Delete(TKey) FreeSql.IBaseRepository<TEntity, TKey>.GetAsync(TKey, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity, TKey>.FindAsync(TKey, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity, TKey>.DeleteAsync(TKey, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.Insert(TEntity) FreeSql.IBaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.FlushState() FreeSql.IBaseRepository<TEntity>.Attach(TEntity) FreeSql.IBaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.IBaseRepository<TEntity>.CompareState(TEntity) FreeSql.IBaseRepository<TEntity>.Update(TEntity) FreeSql.IBaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.IBaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.IBaseRepository<TEntity>.Delete(TEntity) FreeSql.IBaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DataFilter FreeSql.IBaseRepository<TEntity>.Select FreeSql.IBaseRepository<TEntity>.UpdateDiy FreeSql.IBaseRepository.AsType(System.Type) FreeSql.IBaseRepository.AsTable(System.Func<System.String, System.String>) FreeSql.IBaseRepository.EntityType FreeSql.IBaseRepository.UnitOfWork FreeSql.IBaseRepository.Orm FreeSql.IBaseRepository.DbContextOptions System.IDisposable.Dispose() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface IAuditBaseRepository<TEntity, TKey> : IBaseRepository<TEntity, TKey>, IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity 实体 TKey 主键类型"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.IBaseRepository-3.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.IBaseRepository-3.html",
    "title": "Interface IBaseRepository<TEntity, TKey, Ukey> | FreeKit API Docs",
    "keywords": "Interface IBaseRepository<TEntity, TKey, Ukey> Inherited Members FreeSql.IBaseRepository<TEntity>.Where(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.WhereIf(System.Boolean, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.Insert(TEntity) FreeSql.IBaseRepository<TEntity>.Insert(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.FlushState() FreeSql.IBaseRepository<TEntity>.Attach(TEntity) FreeSql.IBaseRepository<TEntity>.Attach(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.AttachOnlyPrimary(TEntity) FreeSql.IBaseRepository<TEntity>.CompareState(TEntity) FreeSql.IBaseRepository<TEntity>.Update(TEntity) FreeSql.IBaseRepository<TEntity>.Update(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertOrUpdate(TEntity) FreeSql.IBaseRepository<TEntity>.SaveMany(TEntity, System.String) FreeSql.IBaseRepository<TEntity>.Delete(TEntity) FreeSql.IBaseRepository<TEntity>.Delete(System.Collections.Generic.IEnumerable<TEntity>) FreeSql.IBaseRepository<TEntity>.Delete(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabase(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>) FreeSql.IBaseRepository<TEntity>.BeginEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.EndEdit(System.Collections.Generic.List<TEntity>) FreeSql.IBaseRepository<TEntity>.InsertAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.UpdateAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.InsertOrUpdateAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.SaveManyAsync(TEntity, System.String, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(TEntity, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Collections.Generic.IEnumerable<TEntity>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DeleteCascadeByDatabaseAsync(System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, System.Threading.CancellationToken) FreeSql.IBaseRepository<TEntity>.DataFilter FreeSql.IBaseRepository<TEntity>.Select FreeSql.IBaseRepository<TEntity>.UpdateDiy FreeSql.IBaseRepository.AsType(System.Type) FreeSql.IBaseRepository.AsTable(System.Func<System.String, System.String>) FreeSql.IBaseRepository.EntityType FreeSql.IBaseRepository.UnitOfWork FreeSql.IBaseRepository.Orm FreeSql.IBaseRepository.DbContextOptions System.IDisposable.Dispose() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface IBaseRepository<TEntity, TKey, Ukey> : IBaseRepository<TEntity>, IBaseRepository, IDisposable where TEntity : class Type Parameters Name Description TEntity TKey Ukey Methods | Improve this Doc View Source Delete(TKey, Ukey) Declaration int Delete(TKey id, Ukey uid) Parameters Type Name Description TKey id Ukey uid Returns Type Description System.Int32 | Improve this Doc View Source DeleteAsync(TKey, Ukey, CancellationToken) Declaration Task<int> DeleteAsync(TKey id, Ukey uid, CancellationToken cancellationToken = null) Parameters Type Name Description TKey id Ukey uid CancellationToken cancellationToken Returns Type Description Task < System.Int32 > | Improve this Doc View Source Get(TKey, Ukey) Declaration TEntity Get(TKey id, Ukey uid) Parameters Type Name Description TKey id Ukey uid Returns Type Description TEntity | Improve this Doc View Source GetAsync(TKey, Ukey, CancellationToken) Declaration Task<TEntity> GetAsync(TKey id, Ukey uid, CancellationToken cancellationToken = null) Parameters Type Name Description TKey id Ukey uid CancellationToken cancellationToken Returns Type Description Task <TEntity>"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.MethodInfoExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.MethodInfoExtensions.html",
    "title": "Class MethodInfoExtensions | FreeKit API Docs",
    "keywords": "Class MethodInfoExtensions Inheritance System.Object MethodInfoExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class MethodInfoExtensions Methods | Improve this Doc View Source GetUnitOfWorkAttributeOrNull(MethodInfo) 判断方法上或类上是否有TransactionalAttribute特性标签 Declaration public static TransactionalAttribute GetUnitOfWorkAttributeOrNull(this MethodInfo methodInfo) Parameters Type Name Description System.Reflection.MethodInfo methodInfo Returns Type Description TransactionalAttribute"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.ReflexHelper.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.ReflexHelper.html",
    "title": "Class ReflexHelper | FreeKit API Docs",
    "keywords": "Class ReflexHelper Inheritance System.Object ReflexHelper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class ReflexHelper Methods | Improve this Doc View Source GetTypesByNameSpace(Type, List<String>) 扫描type所在程序集，反射得到某命名空间下的所有类 Declaration public static Type[] GetTypesByNameSpace(Type assemblyType, List<string> entitiesFullName) Parameters Type Name Description Type assemblyType List < System.String > entitiesFullName Returns Type Description Type [] | Improve this Doc View Source GetTypesByTableAttribute(Type) 扫描type所在程序集，反射得到类上有特性标签为TableAttribute 的所有类 Declaration public static Type[] GetTypesByTableAttribute(Type type) Parameters Type Name Description Type type Returns Type Description Type []"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.TransactionalAttribute.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.TransactionalAttribute.html",
    "title": "Class TransactionalAttribute | FreeKit API Docs",
    "keywords": "Class TransactionalAttribute 事务特性标签 Inheritance System.Object TransactionalAttribute Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class TransactionalAttribute : Attribute Constructors | Improve this Doc View Source TransactionalAttribute() Declaration public TransactionalAttribute() | Improve this Doc View Source TransactionalAttribute(Propagation) Declaration public TransactionalAttribute(Propagation propagation) Parameters Type Name Description FreeSql.Propagation propagation | Improve this Doc View Source TransactionalAttribute(Propagation, IsolationLevel) Declaration public TransactionalAttribute(Propagation propagation, IsolationLevel isolationLevel) Parameters Type Name Description FreeSql.Propagation propagation System.Data.IsolationLevel isolationLevel | Improve this Doc View Source TransactionalAttribute(Propagation, IsolationLevel, Boolean) Declaration public TransactionalAttribute(Propagation propagation, IsolationLevel isolationLevel, bool isDisabled) Parameters Type Name Description FreeSql.Propagation propagation System.Data.IsolationLevel isolationLevel System.Boolean isDisabled | Improve this Doc View Source TransactionalAttribute(Boolean) Declaration public TransactionalAttribute(bool isDisabled) Parameters Type Name Description System.Boolean isDisabled | Improve this Doc View Source TransactionalAttribute(Nullable<IsolationLevel>) Declaration public TransactionalAttribute(IsolationLevel? isolationLevel) Parameters Type Name Description System.Nullable < System.Data.IsolationLevel > isolationLevel Properties | Improve this Doc View Source IsDisabled 是否禁用，默认为false Declaration public bool IsDisabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsolationLevel 事务隔离级别 Declaration public IsolationLevel? IsolationLevel { get; set; } Property Value Type Description System.Nullable < System.Data.IsolationLevel > | Improve this Doc View Source Propagation 事务传播方式 Declaration public Propagation? Propagation { get; set; } Property Value Type Description System.Nullable < FreeSql.Propagation >"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkActionFilter.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkActionFilter.html",
    "title": "Class UnitOfWorkActionFilter | FreeKit API Docs",
    "keywords": "Class UnitOfWorkActionFilter 工作单元过滤器 Inheritance System.Object UnitOfWorkActionFilter Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class UnitOfWorkActionFilter : IAsyncActionFilter, IFilterMetadata Methods | Improve this Doc View Source OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) 方法执行前执行UnitOfWorkManager工作单元 Declaration public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) Parameters Type Name Description Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext context Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate next Returns Type Description Task Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncActionFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkAsyncInterceptor.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkAsyncInterceptor.html",
    "title": "Class UnitOfWorkAsyncInterceptor | FreeKit API Docs",
    "keywords": "Class UnitOfWorkAsyncInterceptor 异步事务方法拦截 Inheritance System.Object UnitOfWorkAsyncInterceptor Implements Castle.DynamicProxy.IAsyncInterceptor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class UnitOfWorkAsyncInterceptor : IAsyncInterceptor Constructors | Improve this Doc View Source UnitOfWorkAsyncInterceptor(UnitOfWorkManager, IOptionsMonitor<UnitOfWorkDefaultOptions>) Declaration public UnitOfWorkAsyncInterceptor(UnitOfWorkManager unitOfWorkManager, IOptionsMonitor<UnitOfWorkDefaultOptions> unitOfWorkDefaultOptions) Parameters Type Name Description FreeSql.UnitOfWorkManager unitOfWorkManager Microsoft.Extensions.Options.IOptionsMonitor < UnitOfWorkDefaultOptions > unitOfWorkDefaultOptions Methods | Improve this Doc View Source InterceptAsynchronous(IInvocation) 拦截返回结果为Task的方法 Declaration public void InterceptAsynchronous(IInvocation invocation) Parameters Type Name Description Castle.DynamicProxy.IInvocation invocation | Improve this Doc View Source InterceptAsynchronous<TResult>(IInvocation) 拦截返回结果为Task<TResult>的方法 Declaration public void InterceptAsynchronous<TResult>(IInvocation invocation) Parameters Type Name Description Castle.DynamicProxy.IInvocation invocation Type Parameters Name Description TResult | Improve this Doc View Source InterceptSynchronous(IInvocation) 拦截同步执行的方法 Declaration public void InterceptSynchronous(IInvocation invocation) Parameters Type Name Description Castle.DynamicProxy.IInvocation invocation Implements Castle.DynamicProxy.IAsyncInterceptor"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkDefaultOptions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkDefaultOptions.html",
    "title": "Class UnitOfWorkDefaultOptions | FreeKit API Docs",
    "keywords": "Class UnitOfWorkDefaultOptions 默认事务配置 Inheritance System.Object UnitOfWorkDefaultOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class UnitOfWorkDefaultOptions Properties | Improve this Doc View Source IsolationLevel 事务隔离级别 Declaration public IsolationLevel? IsolationLevel { get; set; } Property Value Type Description System.Nullable < System.Data.IsolationLevel > | Improve this Doc View Source Propagation 事务传播方式 Declaration public Propagation? Propagation { get; set; } Property Value Type Description System.Nullable < FreeSql.Propagation >"
  },
  "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkInterceptor.html": {
    "href": "api/IGeekFan.FreeKit.Extras.FreeSql.UnitOfWorkInterceptor.html",
    "title": "Class UnitOfWorkInterceptor | FreeKit API Docs",
    "keywords": "Class UnitOfWorkInterceptor 同步Uow拦截 Inheritance System.Object UnitOfWorkInterceptor Implements Castle.DynamicProxy.IInterceptor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.FreeSql Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class UnitOfWorkInterceptor : IInterceptor Constructors | Improve this Doc View Source UnitOfWorkInterceptor(UnitOfWorkAsyncInterceptor) Declaration public UnitOfWorkInterceptor(UnitOfWorkAsyncInterceptor interceptor) Parameters Type Name Description UnitOfWorkAsyncInterceptor interceptor Methods | Improve this Doc View Source Intercept(IInvocation) Declaration public void Intercept(IInvocation invocation) Parameters Type Name Description Castle.DynamicProxy.IInvocation invocation Implements Castle.DynamicProxy.IInterceptor"
  },
  "api/IGeekFan.FreeKit.Extras.Security.ClaimsPrincipalExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | FreeKit API Docs",
    "keywords": "Class ClaimsPrincipalExtensions ClaimsPrincipal 扩展方法 Inheritance System.Object ClaimsPrincipalExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class ClaimsPrincipalExtensions Methods | Improve this Doc View Source FindTenantId(ClaimsPrincipal) 租户Id Declaration public static Guid? FindTenantId(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.Nullable < Guid > | Improve this Doc View Source FindUserId(ClaimsPrincipal) 用户Id Declaration public static string FindUserId(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String | Improve this Doc View Source FindUserId<T>(ClaimsPrincipal) Declaration public static T FindUserId<T>(this ClaimsPrincipal currentUser) where T : IEquatable<T> Parameters Type Name Description System.Security.Claims.ClaimsPrincipal currentUser Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source FindUserIdToGuid(ClaimsPrincipal) Declaration public static Guid? FindUserIdToGuid(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.Nullable < Guid > | Improve this Doc View Source FindUserIdToInt(ClaimsPrincipal) Declaration public static int? FindUserIdToInt(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source FindUserIdToLong(ClaimsPrincipal) Declaration public static long? FindUserIdToLong(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.Nullable < System.Int64 > | Improve this Doc View Source FindUserName(ClaimsPrincipal) 登录名 Declaration public static string FindUserName(this ClaimsPrincipal principal) Parameters Type Name Description System.Security.Claims.ClaimsPrincipal principal Returns Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.Security.CurrentUser.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.CurrentUser.html",
    "title": "Class CurrentUser | FreeKit API Docs",
    "keywords": "Class CurrentUser 默认的string 当前用户 Inheritance System.Object CurrentUser < System.String > CurrentUser Implements ICurrentUser ICurrentUser < System.String > ITransientDependency Inherited Members CurrentUser<String>.ClaimsPrincipal CurrentUser<String>.IsAuthenticated CurrentUser<String>.Id CurrentUser<String>.UserName CurrentUser<String>.Email CurrentUser<String>.Roles CurrentUser<String>.TenantId CurrentUser<String>.TenantName CurrentUser<String>.FindClaim(String) CurrentUser<String>.FindClaims(String) CurrentUser<String>.GetAllClaims() CurrentUser<String>.IsInRole(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CurrentUser : CurrentUser<string>, ICurrentUser, ICurrentUser<string>, ITransientDependency Constructors | Improve this Doc View Source CurrentUser(IHttpContextAccessor) Declaration public CurrentUser(IHttpContextAccessor httpContextAccessor) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Implements ICurrentUser ICurrentUser<T> ITransientDependency Extension Methods CurrentUserExtensions.FindUserId<T>(ICurrentUser) CurrentUserExtensions.FindUserIdToLong(ICurrentUser) CurrentUserExtensions.FindUserIdToInt(ICurrentUser) CurrentUserExtensions.FindUserIdToGuid(ICurrentUser) CurrentUserExtensions.FindName(ICurrentUser) CurrentUserExtensions.FindPhoneNumber(ICurrentUser)"
  },
  "api/IGeekFan.FreeKit.Extras.Security.CurrentUser-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.CurrentUser-1.html",
    "title": "Class CurrentUser<T> | FreeKit API Docs",
    "keywords": "Class CurrentUser<T> 当前用户上下文 Inheritance System.Object CurrentUser<T> CurrentUser Implements ICurrentUser <T> ITransientDependency Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CurrentUser<T> : ICurrentUser<T>, ITransientDependency where T : IEquatable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source CurrentUser(IHttpContextAccessor) Declaration public CurrentUser(IHttpContextAccessor httpContextAccessor) Parameters Type Name Description Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor Fields | Improve this Doc View Source ClaimsPrincipal 证件持有者 Declaration protected readonly ClaimsPrincipal ClaimsPrincipal Field Value Type Description System.Security.Claims.ClaimsPrincipal Properties | Improve this Doc View Source Email 邮件 Declaration public virtual string Email { get; } Property Value Type Description System.String | Improve this Doc View Source Id 用户Id Declaration public virtual T Id { get; } Property Value Type Description T | Improve this Doc View Source IsAuthenticated 是否认证（即已登录） Declaration public virtual bool IsAuthenticated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Roles 角色 Declaration public virtual string[] Roles { get; } Property Value Type Description System.String [] | Improve this Doc View Source TenantId 租户Id Declaration public virtual Guid? TenantId { get; } Property Value Type Description System.Nullable < Guid > | Improve this Doc View Source TenantName 租户名 Declaration public virtual string TenantName { get; } Property Value Type Description System.String | Improve this Doc View Source UserName 登录名，用户名，唯一值 Declaration public virtual string UserName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source FindClaim(String) 根据声明类别获取声明 Declaration public virtual Claim FindClaim(string claimType) Parameters Type Name Description System.String claimType Returns Type Description System.Security.Claims.Claim | Improve this Doc View Source FindClaims(String) 根据声明类别获取所有声明 Declaration public virtual Claim[] FindClaims(string claimType) Parameters Type Name Description System.String claimType Returns Type Description System.Security.Claims.Claim [] | Improve this Doc View Source GetAllClaims() 获取所有声明 Declaration public virtual Claim[] GetAllClaims() Returns Type Description System.Security.Claims.Claim [] | Improve this Doc View Source IsInRole(String) 判断用户是否拥有此角色 Declaration public virtual bool IsInRole(string roleId) Parameters Type Name Description System.String roleId Returns Type Description System.Boolean Implements ICurrentUser<T> ITransientDependency"
  },
  "api/IGeekFan.FreeKit.Extras.Security.CurrentUserAccessor.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.CurrentUserAccessor.html",
    "title": "Class CurrentUserAccessor | FreeKit API Docs",
    "keywords": "Class CurrentUserAccessor Provides an implementation of ICurrentUserAccessor based on the current execution context. Inheritance System.Object CurrentUserAccessor Implements ICurrentUserAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CurrentUserAccessor : ICurrentUserAccessor Properties | Improve this Doc View Source CurrentUser 当前用户信息上下文 Declaration public ICurrentUser CurrentUser { get; set; } Property Value Type Description ICurrentUser Implements ICurrentUserAccessor"
  },
  "api/IGeekFan.FreeKit.Extras.Security.CurrentUserAccessorMiddleware.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.CurrentUserAccessorMiddleware.html",
    "title": "Class CurrentUserAccessorMiddleware | FreeKit API Docs",
    "keywords": "Class CurrentUserAccessorMiddleware 提供一个给当前 ICurrentUserAccessor 赋值 ICurrentUser 的实现。 Inheritance System.Object CurrentUserAccessorMiddleware Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class CurrentUserAccessorMiddleware Constructors | Improve this Doc View Source CurrentUserAccessorMiddleware(RequestDelegate) Declaration public CurrentUserAccessorMiddleware(RequestDelegate next) Parameters Type Name Description Microsoft.AspNetCore.Http.RequestDelegate next Methods | Improve this Doc View Source InvokeAsync(HttpContext) 通过中间件给当前 ICurrentUserAccessor 赋值 ICurrentUser Declaration public async Task InvokeAsync(HttpContext context) Parameters Type Name Description Microsoft.AspNetCore.Http.HttpContext context Returns Type Description Task"
  },
  "api/IGeekFan.FreeKit.Extras.Security.CurrentUserExtensions.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.CurrentUserExtensions.html",
    "title": "Class CurrentUserExtensions | FreeKit API Docs",
    "keywords": "Class CurrentUserExtensions CurrentUser扩展 Inheritance System.Object CurrentUserExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class CurrentUserExtensions Methods | Improve this Doc View Source FindName(ICurrentUser) 姓名 Declaration public static string FindName(this ICurrentUser currentUser) Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.String | Improve this Doc View Source FindPhoneNumber(ICurrentUser) 手机号 Declaration public static string FindPhoneNumber(this ICurrentUser currentUser) Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.String | Improve this Doc View Source FindUserId<T>(ICurrentUser) 获取泛型用户Id Declaration public static T? FindUserId<T>(this ICurrentUser currentUser) where T : struct Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.Nullable <T> Type Parameters Name Description T | Improve this Doc View Source FindUserIdToGuid(ICurrentUser) Declaration public static Guid? FindUserIdToGuid(this ICurrentUser currentUser) Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.Nullable < Guid > | Improve this Doc View Source FindUserIdToInt(ICurrentUser) Declaration public static int? FindUserIdToInt(this ICurrentUser currentUser) Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source FindUserIdToLong(ICurrentUser) Declaration public static long? FindUserIdToLong(this ICurrentUser currentUser) Parameters Type Name Description ICurrentUser currentUser Returns Type Description System.Nullable < System.Int64 >"
  },
  "api/IGeekFan.FreeKit.Extras.Security.FreeKitClaimTypes.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.FreeKitClaimTypes.html",
    "title": "Class FreeKitClaimTypes | FreeKit API Docs",
    "keywords": "Class FreeKitClaimTypes 统一ClaimTypes Inheritance System.Object FreeKitClaimTypes Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class FreeKitClaimTypes Fields | Improve this Doc View Source Email 邮件 Declaration public const string Email = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\" Field Value Type Description System.String | Improve this Doc View Source Name 姓名 Declaration public const string Name = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname\" Field Value Type Description System.String | Improve this Doc View Source NameIdentifier 用户Id Declaration public const string NameIdentifier = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\" Field Value Type Description System.String | Improve this Doc View Source PhoneNumber 手机号 Declaration public const string PhoneNumber = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobilephone\" Field Value Type Description System.String | Improve this Doc View Source Role 角色 Declaration public const string Role = \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\" Field Value Type Description System.String | Improve this Doc View Source TenantId 租户Id Declaration public const string TenantId = \"tenantid\" Field Value Type Description System.String | Improve this Doc View Source TenantName 租户 Declaration public const string TenantName = \"tenantname\" Field Value Type Description System.String | Improve this Doc View Source UserName 登录名 Declaration public const string UserName = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\" Field Value Type Description System.String"
  },
  "api/IGeekFan.FreeKit.Extras.Security.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.html",
    "title": "Namespace IGeekFan.FreeKit.Extras.Security | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Extras.Security Classes ClaimsPrincipalExtensions ClaimsPrincipal 扩展方法 CurrentUser 默认的string 当前用户 CurrentUser<T> 当前用户上下文 CurrentUserAccessor Provides an implementation of ICurrentUserAccessor based on the current execution context. CurrentUserAccessorMiddleware 提供一个给当前 ICurrentUserAccessor 赋值 ICurrentUser 的实现。 CurrentUserExtensions CurrentUser扩展 FreeKitClaimTypes 统一ClaimTypes Tokens 访问令牌 Interfaces ICurrentUser ICurrentUser<T> 登录人信息上下文 ICurrentUserAccessor Provides access to the current ICurrentUser , if one is available."
  },
  "api/IGeekFan.FreeKit.Extras.Security.ICurrentUser.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.ICurrentUser.html",
    "title": "Interface ICurrentUser | FreeKit API Docs",
    "keywords": "Interface ICurrentUser Inherited Members ICurrentUser<String>.IsAuthenticated ICurrentUser<String>.Id ICurrentUser<String>.UserName ICurrentUser<String>.Email ICurrentUser<String>.Roles ICurrentUser<String>.TenantId ICurrentUser<String>.TenantName ICurrentUser<String>.FindClaim(String) ICurrentUser<String>.FindClaims(String) ICurrentUser<String>.GetAllClaims() ICurrentUser<String>.IsInRole(String) Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface ICurrentUser : ICurrentUser<string>, ITransientDependency Extension Methods CurrentUserExtensions.FindUserId<T>(ICurrentUser) CurrentUserExtensions.FindUserIdToLong(ICurrentUser) CurrentUserExtensions.FindUserIdToInt(ICurrentUser) CurrentUserExtensions.FindUserIdToGuid(ICurrentUser) CurrentUserExtensions.FindName(ICurrentUser) CurrentUserExtensions.FindPhoneNumber(ICurrentUser)"
  },
  "api/IGeekFan.FreeKit.Extras.Security.ICurrentUser-1.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.ICurrentUser-1.html",
    "title": "Interface ICurrentUser<T> | FreeKit API Docs",
    "keywords": "Interface ICurrentUser<T> 登录人信息上下文 Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface ICurrentUser<T> : ITransientDependency where T : IEquatable<T> Type Parameters Name Description T Properties | Improve this Doc View Source Email 邮件 Declaration string Email { get; } Property Value Type Description System.String | Improve this Doc View Source Id 用户Id Declaration T Id { get; } Property Value Type Description T | Improve this Doc View Source IsAuthenticated 是否认证（即已登录） Declaration bool IsAuthenticated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Roles 角色 Declaration string[] Roles { get; } Property Value Type Description System.String [] | Improve this Doc View Source TenantId 租户Id Declaration Guid? TenantId { get; } Property Value Type Description System.Nullable < Guid > | Improve this Doc View Source TenantName 租户名 Declaration string TenantName { get; } Property Value Type Description System.String | Improve this Doc View Source UserName 登录名，用户名，唯一值 Declaration string UserName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source FindClaim(String) 根据声明类别获取声明 Declaration Claim FindClaim(string claimType) Parameters Type Name Description System.String claimType Returns Type Description System.Security.Claims.Claim | Improve this Doc View Source FindClaims(String) 根据声明类别获取所有声明 Declaration Claim[] FindClaims(string claimType) Parameters Type Name Description System.String claimType Returns Type Description System.Security.Claims.Claim [] | Improve this Doc View Source GetAllClaims() 获取所有声明 Declaration Claim[] GetAllClaims() Returns Type Description System.Security.Claims.Claim [] | Improve this Doc View Source IsInRole(String) 判断用户是否拥有此角色 Declaration bool IsInRole(string roleId) Parameters Type Name Description System.String roleId Returns Type Description System.Boolean"
  },
  "api/IGeekFan.FreeKit.Extras.Security.ICurrentUserAccessor.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.ICurrentUserAccessor.html",
    "title": "Interface ICurrentUserAccessor | FreeKit API Docs",
    "keywords": "Interface ICurrentUserAccessor Provides access to the current ICurrentUser , if one is available. Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public interface ICurrentUserAccessor Remarks This interface should be used with caution. It relies on System.Threading.AsyncLocal`1 which can have a negative performance impact on async calls. It also creates a dependency on \"ambient state\" which can make testing more difficult. Properties | Improve this Doc View Source CurrentUser Gets or sets the current user ICurrentUser Declaration ICurrentUser CurrentUser { get; set; } Property Value Type Description ICurrentUser"
  },
  "api/IGeekFan.FreeKit.Extras.Security.Tokens.html": {
    "href": "api/IGeekFan.FreeKit.Extras.Security.Tokens.html",
    "title": "Class Tokens | FreeKit API Docs",
    "keywords": "Class Tokens 访问令牌 Inheritance System.Object Tokens Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : IGeekFan.FreeKit.Extras.Security Assembly : IGeekFan.FreeKit.Extras.dll Syntax public class Tokens Constructors | Improve this Doc View Source Tokens(String, String) Declaration public Tokens(string accessToken, string refreshToken) Parameters Type Name Description System.String accessToken System.String refreshToken Properties | Improve this Doc View Source AccessToken 授权接口调用凭证 Declaration public string AccessToken { get; } Property Value Type Description System.String | Improve this Doc View Source RefreshToken 用户刷新AccessToken Declaration public string RefreshToken { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/IGeekFan.FreeKit.Modularity.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.html",
    "title": "Namespace IGeekFan.FreeKit.Modularity | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.FreeKit.Modularity Classes ModuleInfo Contains information about a module ModuleRoutingConvention Adds the route prefix to all actions ModuleRoutingMvcOptionsPostConfigure ModuleServiceCollection Interfaces IModuleStartup"
  },
  "api/IGeekFan.FreeKit.Modularity.IModuleStartup.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.IModuleStartup.html",
    "title": "Interface IModuleStartup | FreeKit API Docs",
    "keywords": "Interface IModuleStartup Namespace : IGeekFan.FreeKit.Modularity Assembly : IGeekFan.FreeKit.Modularity.dll Syntax public interface IModuleStartup Methods | Improve this Doc View Source Configure(IApplicationBuilder, IWebHostEnvironment) Declaration void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app Microsoft.AspNetCore.Hosting.IWebHostEnvironment env | Improve this Doc View Source ConfigureServices(IServiceCollection) Declaration void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services"
  },
  "api/IGeekFan.FreeKit.Modularity.ModuleInfo.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.ModuleInfo.html",
    "title": "Class ModuleInfo | FreeKit API Docs",
    "keywords": "Class ModuleInfo Contains information about a module Inheritance System.Object ModuleInfo Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Modularity Assembly : IGeekFan.FreeKit.Modularity.dll Syntax public class ModuleInfo Constructors | Improve this Doc View Source ModuleInfo(String, IModuleStartup) Declaration public ModuleInfo(string routePrefix, IModuleStartup startup) Parameters Type Name Description System.String routePrefix IModuleStartup startup Properties | Improve this Doc View Source Assembly Gets the assembly of the module. Declaration public Assembly Assembly { get; } Property Value Type Description System.Reflection.Assembly | Improve this Doc View Source RoutePrefix Gets the route prefix to all controller and endpoints in the module. Declaration public string RoutePrefix { get; } Property Value Type Description System.String | Improve this Doc View Source Startup Gets the startup class of the module. Declaration public IModuleStartup Startup { get; } Property Value Type Description IModuleStartup"
  },
  "api/IGeekFan.FreeKit.Modularity.ModuleRoutingConvention.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.ModuleRoutingConvention.html",
    "title": "Class ModuleRoutingConvention | FreeKit API Docs",
    "keywords": "Class ModuleRoutingConvention Adds the route prefix to all actions Inheritance System.Object ModuleRoutingConvention Implements Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Modularity Assembly : IGeekFan.FreeKit.Modularity.dll Syntax public class ModuleRoutingConvention : IActionModelConvention Constructors | Improve this Doc View Source ModuleRoutingConvention(IEnumerable<ModuleInfo>) Declaration public ModuleRoutingConvention(IEnumerable<ModuleInfo> modules) Parameters Type Name Description IEnumerable < ModuleInfo > modules Methods | Improve this Doc View Source Apply(ActionModel) Declaration public void Apply(ActionModel action) Parameters Type Name Description Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel action Implements Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"
  },
  "api/IGeekFan.FreeKit.Modularity.ModuleRoutingMvcOptionsPostConfigure.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.ModuleRoutingMvcOptionsPostConfigure.html",
    "title": "Class ModuleRoutingMvcOptionsPostConfigure | FreeKit API Docs",
    "keywords": "Class ModuleRoutingMvcOptionsPostConfigure Inheritance System.Object ModuleRoutingMvcOptionsPostConfigure Implements Microsoft.Extensions.Options.IPostConfigureOptions < Microsoft.AspNetCore.Mvc.MvcOptions > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Modularity Assembly : IGeekFan.FreeKit.Modularity.dll Syntax public class ModuleRoutingMvcOptionsPostConfigure : IPostConfigureOptions<MvcOptions> Constructors | Improve this Doc View Source ModuleRoutingMvcOptionsPostConfigure(IEnumerable<ModuleInfo>) Declaration public ModuleRoutingMvcOptionsPostConfigure(IEnumerable<ModuleInfo> modules) Parameters Type Name Description IEnumerable < ModuleInfo > modules Methods | Improve this Doc View Source PostConfigure(String, MvcOptions) Declaration public void PostConfigure(string name, MvcOptions options) Parameters Type Name Description System.String name Microsoft.AspNetCore.Mvc.MvcOptions options Implements Microsoft.Extensions.Options.IPostConfigureOptions<TOptions>"
  },
  "api/IGeekFan.FreeKit.Modularity.ModuleServiceCollection.html": {
    "href": "api/IGeekFan.FreeKit.Modularity.ModuleServiceCollection.html",
    "title": "Class ModuleServiceCollection | FreeKit API Docs",
    "keywords": "Class ModuleServiceCollection Inheritance System.Object ModuleServiceCollection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.FreeKit.Modularity Assembly : IGeekFan.FreeKit.Modularity.dll Syntax public static class ModuleServiceCollection Methods | Improve this Doc View Source AddModule<TStartup>(IServiceCollection, String) Adds a module. Declaration public static IServiceCollection AddModule<TStartup>(this IServiceCollection services, string routePrefix) where TStartup : IModuleStartup, new() Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.String routePrefix The prefix of the routes to the module. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Type Parameters Name Description TStartup The type of the startup class of the module."
  },
  "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizer.html": {
    "href": "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizer.html",
    "title": "Class FreeSqlStringLocalizer | FreeKit API Docs",
    "keywords": "Class FreeSqlStringLocalizer Inheritance System.Object FreeSqlStringLocalizer Implements Microsoft.Extensions.Localization.IStringLocalizer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.Localization.FreeSql Assembly : IGeekFan.Localization.FreeSql.dll Syntax public class FreeSqlStringLocalizer : IStringLocalizer Constructors | Improve this Doc View Source FreeSqlStringLocalizer(IFreeSql) Declaration public FreeSqlStringLocalizer(IFreeSql db) Parameters Type Name Description IFreeSql db Properties | Improve this Doc View Source Item[String] Declaration public LocalizedString this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description Microsoft.Extensions.Localization.LocalizedString | Improve this Doc View Source Item[String, Object[]] Declaration public LocalizedString this[string name, params object[] arguments] { get; } Parameters Type Name Description System.String name System.Object [] arguments Property Value Type Description Microsoft.Extensions.Localization.LocalizedString Methods | Improve this Doc View Source GetAllStrings(Boolean) Declaration public IEnumerable<LocalizedString> GetAllStrings(bool includeAncestorCultures) Parameters Type Name Description System.Boolean includeAncestorCultures Returns Type Description System.Collections.Generic.IEnumerable < Microsoft.Extensions.Localization.LocalizedString > | Improve this Doc View Source WithCulture(CultureInfo) Declaration public IStringLocalizer WithCulture(CultureInfo culture) Parameters Type Name Description System.Globalization.CultureInfo culture Returns Type Description Microsoft.Extensions.Localization.IStringLocalizer Implements Microsoft.Extensions.Localization.IStringLocalizer"
  },
  "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizer-1.html": {
    "href": "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizer-1.html",
    "title": "Class FreeSqlStringLocalizer<T> | FreeKit API Docs",
    "keywords": "Class FreeSqlStringLocalizer<T> Inheritance System.Object FreeSqlStringLocalizer<T> Implements Microsoft.Extensions.Localization.IStringLocalizer <T> Microsoft.Extensions.Localization.IStringLocalizer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.Localization.FreeSql Assembly : IGeekFan.Localization.FreeSql.dll Syntax public class FreeSqlStringLocalizer<T> : IStringLocalizer<T>, IStringLocalizer Type Parameters Name Description T Constructors | Improve this Doc View Source FreeSqlStringLocalizer(IFreeSql) Declaration public FreeSqlStringLocalizer(IFreeSql db) Parameters Type Name Description IFreeSql db Properties | Improve this Doc View Source Item[String] Declaration public LocalizedString this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description Microsoft.Extensions.Localization.LocalizedString | Improve this Doc View Source Item[String, Object[]] Declaration public LocalizedString this[string name, params object[] arguments] { get; } Parameters Type Name Description System.String name System.Object [] arguments Property Value Type Description Microsoft.Extensions.Localization.LocalizedString Methods | Improve this Doc View Source GetAllStrings(Boolean) Declaration public IEnumerable<LocalizedString> GetAllStrings(bool includeAncestorCultures) Parameters Type Name Description System.Boolean includeAncestorCultures Returns Type Description System.Collections.Generic.IEnumerable < Microsoft.Extensions.Localization.LocalizedString > | Improve this Doc View Source WithCulture(CultureInfo) Declaration public IStringLocalizer WithCulture(CultureInfo culture) Parameters Type Name Description System.Globalization.CultureInfo culture Returns Type Description Microsoft.Extensions.Localization.IStringLocalizer Implements Microsoft.Extensions.Localization.IStringLocalizer<T> Microsoft.Extensions.Localization.IStringLocalizer"
  },
  "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizerFactory.html": {
    "href": "api/IGeekFan.Localization.FreeSql.FreeSqlStringLocalizerFactory.html",
    "title": "Class FreeSqlStringLocalizerFactory | FreeKit API Docs",
    "keywords": "Class FreeSqlStringLocalizerFactory Inheritance System.Object FreeSqlStringLocalizerFactory Implements Microsoft.Extensions.Localization.IStringLocalizerFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.Localization.FreeSql Assembly : IGeekFan.Localization.FreeSql.dll Syntax public class FreeSqlStringLocalizerFactory : IStringLocalizerFactory Constructors | Improve this Doc View Source FreeSqlStringLocalizerFactory(IFreeSql) Declaration public FreeSqlStringLocalizerFactory(IFreeSql db) Parameters Type Name Description IFreeSql db Methods | Improve this Doc View Source Create(String, String) Declaration public IStringLocalizer Create(string baseName, string location) Parameters Type Name Description System.String baseName System.String location Returns Type Description Microsoft.Extensions.Localization.IStringLocalizer | Improve this Doc View Source Create(Type) Declaration public IStringLocalizer Create(Type resourceSource) Parameters Type Name Description System.Type resourceSource Returns Type Description Microsoft.Extensions.Localization.IStringLocalizer Implements Microsoft.Extensions.Localization.IStringLocalizerFactory"
  },
  "api/IGeekFan.Localization.FreeSql.html": {
    "href": "api/IGeekFan.Localization.FreeSql.html",
    "title": "Namespace IGeekFan.Localization.FreeSql | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.Localization.FreeSql Classes FreeSqlStringLocalizer FreeSqlStringLocalizer<T> FreeSqlStringLocalizerFactory"
  },
  "api/IGeekFan.Localization.FreeSql.Models.html": {
    "href": "api/IGeekFan.Localization.FreeSql.Models.html",
    "title": "Namespace IGeekFan.Localization.FreeSql.Models | FreeKit API Docs",
    "keywords": "Namespace IGeekFan.Localization.FreeSql.Models Classes LocalCulture LocalResource"
  },
  "api/IGeekFan.Localization.FreeSql.Models.LocalCulture.html": {
    "href": "api/IGeekFan.Localization.FreeSql.Models.LocalCulture.html",
    "title": "Class LocalCulture | FreeKit API Docs",
    "keywords": "Class LocalCulture Inheritance System.Object LocalCulture Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.Localization.FreeSql.Models Assembly : IGeekFan.Localization.FreeSql.dll Syntax public class LocalCulture Constructors | Improve this Doc View Source LocalCulture() Declaration public LocalCulture() | Improve this Doc View Source LocalCulture(String, String) Declaration public LocalCulture(string name, string displayName) Parameters Type Name Description System.String name System.String displayName | Improve this Doc View Source LocalCulture(String, String, ICollection<LocalResource>) Declaration public LocalCulture(string name, string displayName, ICollection<LocalResource> resources) Parameters Type Name Description System.String name System.String displayName System.Collections.Generic.ICollection < LocalResource > resources Properties | Improve this Doc View Source DisplayName Declaration [Column(StringLength = 50)] public string DisplayName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration [Column(IsIdentity = true, IsPrimary = true)] public long Id { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Name Declaration [Column(StringLength = 50)] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Resources Declaration public virtual ICollection<LocalResource> Resources { get; set; } Property Value Type Description System.Collections.Generic.ICollection < LocalResource >"
  },
  "api/IGeekFan.Localization.FreeSql.Models.LocalResource.html": {
    "href": "api/IGeekFan.Localization.FreeSql.Models.LocalResource.html",
    "title": "Class LocalResource | FreeKit API Docs",
    "keywords": "Class LocalResource Inheritance System.Object LocalResource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : IGeekFan.Localization.FreeSql.Models Assembly : IGeekFan.Localization.FreeSql.dll Syntax public class LocalResource Constructors | Improve this Doc View Source LocalResource() Declaration public LocalResource() | Improve this Doc View Source LocalResource(String, String) Declaration public LocalResource(string key, string value) Parameters Type Name Description System.String key System.String value Properties | Improve this Doc View Source Culture Declaration public virtual LocalCulture Culture { get; set; } Property Value Type Description LocalCulture | Improve this Doc View Source CultureId Declaration public long CultureId { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Id Declaration [Column(IsIdentity = true, IsPrimary = true)] public long Id { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Key Declaration [Column(StringLength = 50)] public string Key { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Declaration [Column(StringLength = 500)] public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Docs | FreeKit API Docs",
    "keywords": "API Docs"
  },
  "api/Microsoft.AspNetCore.DataProtection.FreeRedisDataProtectionBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.DataProtection.FreeRedisDataProtectionBuilderExtensions.html",
    "title": "Class FreeRedisDataProtectionBuilderExtensions | FreeKit API Docs",
    "keywords": "Class FreeRedisDataProtectionBuilderExtensions Contains Redis-specific extension methods for modifying a Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder . Inheritance System.Object FreeRedisDataProtectionBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.DataProtection Assembly : IGeekFan.AspNetCore.DataProtection.FreeRedis.dll Syntax public static class FreeRedisDataProtectionBuilderExtensions Methods | Improve this Doc View Source PersistKeysToStackExchangeRedis(IDataProtectionBuilder, IRedisClient) Configures the data protection system to persist keys to the default key ('DataProtection-Keys') in Redis database Declaration public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(this IDataProtectionBuilder builder, IRedisClient connectionMultiplexer) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder builder The builder instance to modify. FreeRedis.IRedisClient connectionMultiplexer The FreeRedis.IRedisClient for database access. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder A reference to the Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder after this operation has completed. | Improve this Doc View Source PersistKeysToStackExchangeRedis(IDataProtectionBuilder, IRedisClient, String) Configures the data protection system to persist keys to the specified key in Redis database Declaration public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(this IDataProtectionBuilder builder, IRedisClient connectionMultiplexer, string key) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder builder The builder instance to modify. FreeRedis.IRedisClient connectionMultiplexer The FreeRedis.IRedisClient for database access. System.String key The key used to store key list. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder A reference to the Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder after this operation has completed. | Improve this Doc View Source PersistKeysToStackExchangeRedis(IDataProtectionBuilder, Func<IRedisClient>, String) Configures the data protection system to persist keys to specified key in Redis database Declaration public static IDataProtectionBuilder PersistKeysToStackExchangeRedis(this IDataProtectionBuilder builder, Func<IRedisClient> databaseFactory, string key) Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder builder The builder instance to modify. System.Func < FreeRedis.IRedisClient > databaseFactory The delegate used to create FreeRedis.IRedisClient instances. System.String key The key used to store key list. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder A reference to the Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder after this operation has completed."
  },
  "api/Microsoft.AspNetCore.DataProtection.FreeSqlDataProtectionExtensions.html": {
    "href": "api/Microsoft.AspNetCore.DataProtection.FreeSqlDataProtectionExtensions.html",
    "title": "Class FreeSqlDataProtectionExtensions | FreeKit API Docs",
    "keywords": "Class FreeSqlDataProtectionExtensions Extension method class for configuring instances of FreeSqlXmlRepository<TContext> Inheritance System.Object FreeSqlDataProtectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.DataProtection Assembly : IGeekFan.AspNetCore.DataProtection.FreeSql.dll Syntax public static class FreeSqlDataProtectionExtensions Methods | Improve this Doc View Source PersistKeysToDbContext<TContext>(IDataProtectionBuilder) Configures the data protection system to persist keys to an FreeSql datastore Declaration public static IDataProtectionBuilder PersistKeysToDbContext<TContext>(this IDataProtectionBuilder builder) where TContext : DbContext, IDataProtectionKeyContext Parameters Type Name Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder builder The Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder instance to modify. Returns Type Description Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder The value builder . Type Parameters Name Description TContext"
  },
  "api/Microsoft.AspNetCore.DataProtection.html": {
    "href": "api/Microsoft.AspNetCore.DataProtection.html",
    "title": "Namespace Microsoft.AspNetCore.DataProtection | FreeKit API Docs",
    "keywords": "Namespace Microsoft.AspNetCore.DataProtection Classes FreeRedisDataProtectionBuilderExtensions Contains Redis-specific extension methods for modifying a Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder . FreeSqlDataProtectionExtensions Extension method class for configuring instances of FreeSqlXmlRepository<TContext>"
  },
  "api/Microsoft.Extensions.DependencyInjection.FreeSqlHealthChecksBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.FreeSqlHealthChecksBuilderExtensions.html",
    "title": "Class FreeSqlHealthChecksBuilderExtensions | FreeKit API Docs",
    "keywords": "Class FreeSqlHealthChecksBuilderExtensions Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder extension methods for Entity Framework Core. Inheritance System.Object FreeSqlHealthChecksBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : IGeekFan.Extensions.Diagnostics.HealthChecks.FreeSql.dll Syntax public static class FreeSqlHealthChecksBuilderExtensions Methods | Improve this Doc View Source AddDbContextCheck<TContext>(IHealthChecksBuilder, String, Nullable<HealthStatus>, Nullable<IEnumerable<String>>, Nullable<Func<TContext, CancellationToken, Task<Boolean>>>) Adds a health check for the specified FreeSql.DbContext type. Declaration public static IHealthChecksBuilder AddDbContextCheck<TContext>(this IHealthChecksBuilder builder, string name = null, HealthStatus? failureStatus = null, IEnumerable<string>? tags = null, Func<TContext, CancellationToken, Task<bool>>? customTestQuery = null) where TContext : DbContext Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder builder The Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder . System.String name The health check name. Optional. If null the type name of TContext will be used for the name. System.Nullable < Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus > failureStatus The Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus that should be reported when the health check fails. Optional. If null then the default status of Microsoft.Extensions.Diagnostics.HealthChecks.HealthStatus.Unhealthy will be reported. System.Nullable < IEnumerable < System.String >> tags A list of tags that can be used to filter sets of health checks. Optional. System.Nullable < Func <TContext, CancellationToken , Task < System.Boolean >>> customTestQuery A custom test query that will be executed when the health check executes to test the health of the database connection and configurations. Returns Type Description Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder The Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder . Type Parameters Name Description TContext The FreeSql.DbContext type. Remarks The health check implementation added by this method will use the dependency injection container to create an instance of TContext . By default the health check implementation will use the method to test connectivity to the database. This method requires that the database provider has correctly implemented the FreeSql.IAdo interface. If the database provide has not implemented this interface then the health check will report a failure. Providing a customTestQuery will replace the use of to test database connectivity. An implementation of a test query should handle exceptions that can arise due to connectivity failure, and should return a pass/fail result. The test query should be be designed to complete in a short and predicatable amount of time."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | FreeKit API Docs",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes FreeSqlHealthChecksBuilderExtensions Microsoft.Extensions.DependencyInjection.IHealthChecksBuilder extension methods for Entity Framework Core. ServiceCollectionExtensions"
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | FreeKit API Docs",
    "keywords": "Class ServiceCollectionExtensions Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : IGeekFan.FreeKit.Extras.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddAuditRepostiory(IServiceCollection, Nullable<Type>) 用户Id是Guid或long类型的审计仓储批量注入,默认注入用户主键为Guid类型 Declaration public static IServiceCollection AddAuditRepostiory(this IServiceCollection services, Type? typeUserkey = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Nullable < Type > typeUserkey 支持typeof(Guid)/typeof(long)指定用户的主键类型，方便绑定 CreateUserId\\UpdateUserId等字段 Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddCompositeRepostiory(IServiceCollection) 批量注入复合主键的 Repository Declaration public static IServiceCollection AddCompositeRepostiory(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddCurrentUser(IServiceCollection) Adds a default implementation for the ICurrentUser service. Declaration public static IServiceCollection AddCurrentUser(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The Microsoft.Extensions.DependencyInjection.IServiceCollection . Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The service collection. | Improve this Doc View Source AddCurrentUserAccessor(IServiceCollection) Adds a default implementation for the ICurrentUserAccessor service. Declaration public static IServiceCollection AddCurrentUserAccessor(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The Microsoft.Extensions.DependencyInjection.IServiceCollection . Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The service collection. | Improve this Doc View Source AddDefaultRepository(IServiceCollection) 批量注入 IBaseRepository Declaration public static IServiceCollection AddDefaultRepository(this IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddFreeKitCore(IServiceCollection, Nullable<Type>) 统一配置服务，简化内部多个配置细节 Declaration public static IServiceCollection AddFreeKitCore(this IServiceCollection services, Type? typeUserkey = null) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services System.Nullable < Type > typeUserkey 用户表类型，默认为guid Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source UseCurrentUserAccessor(IApplicationBuilder) 请求过程中给单例的 ICurrentUserAccessor 对象的CurrentUser赋值，方便全局获取用户信息 Declaration public static IApplicationBuilder UseCurrentUserAccessor(this IApplicationBuilder builder) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder builder Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder"
  },
  "index.html": {
    "href": "index.html",
    "title": "IGeekFan.FreeKit Document | FreeKit API Docs",
    "keywords": "IGeekFan.FreeKit Document"
  },
  "README.html": {
    "href": "README.html",
    "title": "DocFX | FreeKit API Docs",
    "keywords": "DocFX https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html run docfx docs\\docfx.json --serve -p 8081 or cd docs docfx .\\docfx.json --serve"
  }
}